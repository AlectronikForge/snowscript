<?php

/* This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *  * the grammar file grammar/zend_language_parser.phpy
 *  * the parser skeleton grammar/kymacc.php.parser
 *  * the preprocessing script grammar/rebuildParser.php
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */
class PHPParser_Parser
{
    const YYBADCH      = 147;
    const YYMAXLEX     = 389;
    const YYTERMS      = 147;
    const YYNONTERMS   = 103;
    const YYLAST       = 892;
    const YY2TBLSTATE  = 314;
    const YYGLAST      = 417;
    const YYSTATES     = 746;
    const YYNLSTATES   = 509;
    const YYINTERRTOK  = 1;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    // {{{ Tokens
    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_LOGICAL_OR = 262;
    const T_LOGICAL_XOR = 263;
    const T_LOGICAL_AND = 264;
    const T_PRINT = 265;
    const T_PLUS_EQUAL = 266;
    const T_MINUS_EQUAL = 267;
    const T_MUL_EQUAL = 268;
    const T_DIV_EQUAL = 269;
    const T_CONCAT_EQUAL = 270;
    const T_MOD_EQUAL = 271;
    const T_AND_EQUAL = 272;
    const T_OR_EQUAL = 273;
    const T_XOR_EQUAL = 274;
    const T_SL_EQUAL = 275;
    const T_SR_EQUAL = 276;
    const T_THEN = 277;
    const T_BOOLEAN_OR = 278;
    const T_BOOLEAN_AND = 279;
    const T_IS_EQUAL = 280;
    const T_IS_NOT_EQUAL = 281;
    const T_IS_IDENTICAL = 282;
    const T_IS_NOT_IDENTICAL = 283;
    const T_IS_SMALLER_OR_EQUAL = 284;
    const T_IS_GREATER_OR_EQUAL = 285;
    const T_SL = 286;
    const T_SR = 287;
    const T_INSTANCEOF = 288;
    const T_INC = 289;
    const T_DEC = 290;
    const T_INT_CAST = 291;
    const T_DOUBLE_CAST = 292;
    const T_STRING_CAST = 293;
    const T_ARRAY_CAST = 294;
    const T_OBJECT_CAST = 295;
    const T_BOOL_CAST = 296;
    const T_UNSET_CAST = 297;
    const T_NEW = 298;
    const T_CLONE = 299;
    const T_EXIT = 300;
    const T_IF = 301;
    const T_ELSEIF = 302;
    const T_ELSE = 303;
    const T_ENDIF = 304;
    const T_LNUMBER = 305;
    const T_DNUMBER = 306;
    const T_STRING = 307;
    const T_STRING_VARNAME = 308;
    const T_VARIABLE = 309;
    const T_NUM_STRING = 310;
    const T_INLINE_HTML = 311;
    const T_CHARACTER = 312;
    const T_BAD_CHARACTER = 313;
    const T_ENCAPSED_AND_WHITESPACE = 314;
    const T_STRING_SINGLE = 315;
    const T_STRING_DOUBLE = 316;
    const T_ECHO = 317;
    const T_DO = 318;
    const T_WHILE = 319;
    const T_ENDWHILE = 320;
    const T_ENDFOR = 321;
    const T_FOR = 322;
    const T_ENDFOREACH = 323;
    const T_DECLARE = 324;
    const T_ENDDECLARE = 325;
    const T_AS = 326;
    const T_TO = 327;
    const T_DOWNTO = 328;
    const T_STEP = 329;
    const T_IN = 330;
    const T_SWITCH = 331;
    const T_ENDSWITCH = 332;
    const T_CASE = 333;
    const T_DEFAULT = 334;
    const T_BREAK = 335;
    const T_CONTINUE = 336;
    const T_GOTO = 337;
    const T_FUNCTION = 338;
    const T_CONST = 339;
    const T_RETURN = 340;
    const T_TRY = 341;
    const T_CATCH = 342;
    const T_THROW = 343;
    const T_USE = 344;
    const T_INSTEADOF = 345;
    const T_GLOBAL = 346;
    const T_STATIC = 347;
    const T_ABSTRACT = 348;
    const T_FINAL = 349;
    const T_PRIVATE = 350;
    const T_PROTECTED = 351;
    const T_PUBLIC = 352;
    const T_VAR = 353;
    const T_UNSET = 354;
    const T_ISSET = 355;
    const T_EMPTY = 356;
    const T_HALT_COMPILER = 357;
    const T_CLASS = 358;
    const T_TRAIT = 359;
    const T_INTERFACE = 360;
    const T_EXTENDS = 361;
    const T_IMPLEMENTS = 362;
    const T_OBJECT_OPERATOR = 363;
    const T_DOUBLE_ARROW = 364;
    const T_LIST = 365;
    const T_ARRAY = 366;
    const T_CALLABLE = 367;
    const T_CLASS_C = 368;
    const T_TRAIT_C = 369;
    const T_METHOD_C = 370;
    const T_FUNC_C = 371;
    const T_LINE = 372;
    const T_FILE = 373;
    const T_COMMENT = 374;
    const T_DOC_COMMENT = 375;
    const T_OPEN_TAG = 376;
    const T_OPEN_TAG_WITH_ECHO = 377;
    const T_CLOSE_TAG = 378;
    const T_WHITESPACE = 379;
    const T_START_HEREDOC = 380;
    const T_END_HEREDOC = 381;
    const T_DOLLAR_OPEN_CURLY_BRACES = 382;
    const T_CURLY_OPEN = 383;
    const T_PAAMAYIM_NEKUDOTAYIM = 384;
    const T_NAMESPACE = 385;
    const T_NS_C = 386;
    const T_DIR = 387;
    const T_NS_SEPARATOR = 388;
    // }}}

    protected static $yyterminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "':'",
        "T_THEN",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_STRING_SINGLE",
        "T_STRING_DOUBLE",
        "T_ECHO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_TO",
        "T_DOWNTO",
        "T_STEP",
        "T_IN",
        "T_SWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "'$'",
        "']'",
        "'`'",
        "'\"'"
        , "???"
    );

    protected static $yytranslate = array(
            0,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,   47,  146,  147,  143,   46,   30,  147,
          141,  142,   44,   41,    7,   42,   43,   45,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,   24,  138,
           35,   12,   37,  147,   59,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,   60,  147,  144,   29,  147,  145,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  139,   28,  140,   49,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
          147,  147,  147,  147,  147,  147,    1,    2,    3,    4,
            5,    6,    8,    9,   10,   11,   13,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   25,   26,   27,
           31,   32,   33,   34,   36,   38,   39,   40,   48,   50,
           51,   52,   53,   54,   55,   56,   57,   58,   61,   62,
           63,   64,   65,   66,  147,   67,   68,   69,   70,   71,
           72,   73,  147,  147,   74,   75,   76,   77,  147,   78,
           79,  147,   80,   81,   82,   83,   84,   85,   86,   87,
           88,   89,  147,   90,   91,   92,   93,   94,   95,   96,
           97,   98,   99,  100,  101,  102,  103,  104,  105,  106,
          107,  108,  109,  147,  110,  111,  112,  113,  114,  115,
          116,  117,  118,  119,  120,  147,  121,  122,  123,  124,
          125,  126,  127,  128,  147,  147,  147,  147,  147,  147,
          129,  130,  131,  132,  133,  134,  135,  136,  137
    );

    protected static $yyaction = array(
           53,   54,  344,   55,   56,-32766,-32766,-32766,  334,   57,
        -32767,-32767,-32767,-32767,   94,   95,   96,   97,   98,-32766,
        -32766,-32766,  275,-32766,-32766,-32766,-32766,-32766,-32767,-32767,
        -32767,-32767,   99,  100,  101,  482,  241,-32766,-32766,   58,
           59,   51,  572,  573,  330,   60,  492,   61,  227,  228,
           62,   63,   64,   65,   66,   67,   68,   69,   24,  240,
           70,  320,  345,  620,  621,  790,  791,  346,  335,  848,
            0,  552,  319,  792,  793,   45,  347,  513,  348,  247,
          349,  402,  469,  874, -104,  876,  875,  350,  333,  123,
           38,   39,  351,  323,  321,   40,  352,   48,   71,   17,
          254,  283,  284,  270,  353,  354,  647,  285,  355,  356,
          357,   36,  538,  580,  358,  359,   96,   97,   98,  360,
          117,  797,  798,  799,  800,  794,  795,  248,   78,   79,
           80,   37,  371,  801,  796,  322,  560,  490,  229,   72,
          287,  268,  371,  252,  256,  322,   81,   82,   83,   84,
           85,   86,   87,   88,   89,   90,   91,   92,   93,   94,
           95,   96,   97,   98,   99,  100,  101,   35,  241,-32766,
        -32766,-32766,  369,-32766,-32766,-32766,  114,  513,   29,   47,
          118,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  234,
        -32766,-32766,-32766,-32766,-32766,-32766,  513,-32766,  848,   50,
        -32766,-32766,-32766,   16,  124,-32766,-32766,  756,-32766,  332,
          478,-32766,  370,  842,  630,-32766,-32766,  848,-32766,  550,
          300,  125,  196,  369,  321,  438,  864,  235,  513,  864,
        -32766,  766,-32766,  122,  353,  354,-32766,-32766,  522,-32766,
          233,-32766,  538,  580,  358,  359,-32766,-32766,-32766,  197,
          445,-32766,-32766,-32766,  413,  198,-32766,-32766,  113,-32766,
          489,  371,-32766,  370,  322,  199,  257,  203,  324,-32766,
          268,  549,  422,  501,  369,-32766,-32766,-32766,  115,  513,
           42,  231,  814,-32766,  871,  276,  224,-32766,-32766,  268,
        -32766,  222,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
          204,  813,-32766,-32766,-32766,  852,  803,-32766,-32766,  129,
        -32766,  551,  126,-32766,  370,  467,   22,-32766,-32766,-32766,
        -32766,  571,  803,  499,  120,  369,  620,  621,  564,  652,
          513,  657,  507,  232,-32766,-32766,-32766,-32766,-32766,-32766,
          523,-32766,  120,-32766,  519,  494,  646,  504,-32766,-32766,
        -32766,  200,  201,-32766,-32766,-32766,  498,  240,-32766,-32766,
          241,-32766,   46,  329,-32766,  370,   52,  130,   49,  513,
          194,-32766,  864,  431,  806,  121,  395,  790,  791, -147,
          394,-32766,  464,  393,  384,  792,  793,   43,  102,  103,
          104,  105,  106,  107,  108,  109,  110,  111,  112,-32766,
        -32766,  476,  321,  316,  382,  381,  331,  654,  282,  527,
          869,  514,  353,  354,  529,  383,  133,  462,  759,  127,
          518,  580,  358,  359,  274,  696,  698,  273,  468,  470,
          267,  428,  237,  797,  798,  799,  800,  794,  795,  309,
          131,  272,  447,  369,  321,  801,  796,  520,  513,  328,
          264,-32766,-32766,-32766,  353,  354,-32766,-32766,  460,-32766,
         -258,-32766,  538,  580,  358,  359,  845, -267,-32766,  582,
          488,-32766,-32766,-32766,  581,  253,-32766,-32766, -325,-32766,
          255,  802,-32766,  370,   44,  202,  369,    0,    0,-32766,
            0,  513,  308,    0, -325,-32766,  259,  502,    0,-32766,
        -32766, -266,-32766,  487,-32766,  669,  670,  671,  668,  667,
          666,-32766,  553,  446,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,  783,-32766,  302,  260,-32766,  370,  651,  843,  369,
          388,  330,-32766,  327,  513,  653,  588,  590,-32766,  496,
          604,  640,-32766,-32766,  644,-32766,  554,-32766,  563,  500,
          450,  650,  641,  643,-32766,  562,  602,-32766,-32766,-32766,
        -32766,-32766,-32766,-32766,  548,-32766,  546,  544,-32766,  370,
          495,  493,  369,  491,  338,-32766,  451,  513,   77,  119,
          508,-32766,  265,  506,  505,-32766,-32766,  503,-32766,  594,
        -32766,  847,  849,  450,  870,  456,  632,-32766,  269,  266,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,  872,-32766,  873,
          833,-32766,  370,  853,  781,  369,  595,  731,-32766,  451,
          513,  579,   21,  271,-32766,  265,-32766,  317,-32766,-32766,
          315,-32766,  246,-32766,  245,  244,  450,  243,  242,  230,
        -32766,  269,  266,-32766,-32766,-32766,  543,-32766,-32766,-32766,
          226,-32766,  225,  223,-32766,  370,  195,  132,  369,  116,
           76,-32766,  451,  513,  578,   19,   75,-32766,  265,   74,
           73,-32766,-32766,   41,-32766,   34,-32766,   33,   32,   31,
           30,   28,   27,-32766,  269,  266,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,   26,-32766,   25,    0,-32766,  370,   18,
           15,  369,  486,  481,-32766,  459,  513,  577,  405,  810,
        -32766,  342,  339,  290,-32766,-32766,   20,-32766,  432,-32766,
          -92,  762,  809,  830,  761,  611,-32766,  789,  831,-32766,
        -32766,-32766,  547,-32766,-32766,-32766,  868,-32766,  321,  316,
        -32766,  370,  764,  763,  282,  760,  748,-32766,  353,  354,
          732,  784,  735,  729,  439,  336,  518,  580,  358,  359,
          321,  316,   23,  827,    0,  466,  282,  780,  844,  828,
          353,  354,  832,  846,  321,  545,-32766,  272,  518,  580,
          358,  359,  765,  521,  353,  354,  321,  750,  392,    0,
          321,    0,  538,  580,  358,  359,  353,  354,    0,  272,
          353,  354,  321,    0,  538,  580,  358,  359,  538,  580,
          358,  359,  353,  354,    0,    0,    0,    0,  321,  752,
          538,  580,  358,  359,    0,    0,    0,    0,  353,  354,
          321,  598,    0,    0,  321,  658,  538,  580,  358,  359,
          353,  354,    0,    0,  353,  354,  321,  567,  538,  580,
          358,  359,  538,  580,  358,  359,  353,  354,    0,    0,
            0,    0,    0,  753,  538,  580,  358,  359,    0,    0,
            0,    0,    0,    0,    0,  576,    0,    0,    0,  539,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,  318
    );

    protected static $yycheck = array(
            2,    3,    4,    5,    6,    8,    9,   10,    7,   11,
           35,   36,   37,   38,   39,   40,   41,   42,   43,    8,
            9,   10,   60,   26,   27,   28,   29,   30,   31,   32,
           33,   34,   44,   45,   46,   69,   48,   26,   27,   41,
           42,   60,   85,   86,  137,   47,  139,   49,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   64,  121,  122,   67,   68,   69,    7,   71,
            0,   73,    7,   75,   76,   77,   78,   69,   80,    7,
           82,  119,   83,   69,  142,   71,   72,   89,    7,   88,
           92,   93,   94,   95,   95,   97,   98,   60,  100,  142,
          119,  103,  104,    7,  105,  106,  140,    7,  110,  111,
          112,    7,  113,  114,  115,  116,   41,   42,   43,  121,
          139,  123,  124,  125,  126,  127,  128,  129,    8,    9,
           10,    7,  134,  135,  136,  137,  138,  139,   30,  141,
            7,  143,  134,  145,  146,  137,   26,   27,   28,   29,
           30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
           40,   41,   42,   43,   44,   45,   46,    7,   48,    8,
            9,   10,   64,    8,    9,   10,  139,   69,  141,   60,
            7,   73,    8,    9,   10,   77,   78,   26,   80,   30,
           82,   26,   27,   28,   29,   30,   69,   89,   71,   60,
           92,   93,   94,  142,   60,   97,   98,  142,  100,    7,
           81,  103,  104,   71,   71,    8,    9,   71,  110,  138,
           71,  139,    7,   64,   95,  143,   74,    7,   69,   74,
            8,  104,   73,   12,  105,  106,   77,   78,  138,   80,
           30,   82,  113,  114,  115,  116,  138,  139,   89,   12,
           74,   92,   93,   94,   69,   12,   97,   98,  139,  100,
           69,  134,  103,  104,  137,   12,   74,   12,  141,  110,
          143,  138,   69,   24,   64,    8,    9,   10,  139,   69,
          131,  132,  130,   73,  140,  143,  143,   77,   78,  143,
           80,   30,   82,   26,   27,   28,   29,  138,  139,   89,
           12,  146,   92,   93,   94,   69,  130,   97,   98,   12,
          100,  138,   25,  103,  104,   65,   66,    8,    9,   10,
          110,   30,  130,   24,  139,   64,  121,  122,   24,  138,
           69,  138,  139,   30,   73,   26,   27,   28,   77,   78,
          138,   80,  139,   82,  138,  139,  138,  139,  138,  139,
           89,   41,   42,   92,   93,   94,   24,   61,   97,   98,
           48,  100,   60,   69,  103,  104,   60,   66,   60,   69,
           60,  110,   74,   84,   69,  139,   84,   67,   68,   84,
           69,   71,   69,   69,   69,   75,   76,   12,   13,   14,
           15,   16,   17,   18,   19,   20,   21,   22,   23,  138,
          139,   71,   95,   96,   69,   69,   69,   69,  101,   69,
           69,   69,  105,  106,   69,   71,   87,   71,   71,   88,
          113,  114,  115,  116,   74,   50,   51,   74,   79,   90,
          102,  121,   84,  123,  124,  125,  126,  127,  128,  129,
           88,  134,   99,   64,   95,  135,  136,  140,   69,   95,
          117,  141,   73,  143,  105,  106,   77,   78,  101,   80,
          133,   82,  113,  114,  115,  116,  140,  133,   89,  114,
           69,   92,   93,   94,  114,  119,   97,   98,  119,  100,
          119,  130,  103,  104,  120,  120,   64,   -1,   -1,  110,
           -1,   69,   70,   -1,  119,   73,  133,  139,   -1,   77,
           78,  133,   80,  133,   82,  104,  105,  106,  107,  108,
          109,   89,  138,  133,   92,   93,   94,  138,  139,   97,
           98,  142,  100,  133,  133,  103,  104,  138,  140,   64,
          137,  137,  110,  137,   69,  138,  138,  138,   73,  139,
          138,  138,   77,   78,  138,   80,  138,   82,  138,  138,
           69,  138,  138,  138,   89,  138,   91,   92,   93,   94,
          138,  139,   97,   98,  138,  100,  138,  138,  103,  104,
          139,  139,   64,  139,  139,  110,   95,   69,  139,  139,
          139,   73,  101,  139,  139,   77,   78,  139,   80,  140,
           82,  140,  140,   69,  140,  140,  140,   89,  117,  118,
           92,   93,   94,  138,  139,   97,   98,  140,  100,  140,
          140,  103,  104,  140,  140,   64,  140,  142,  110,   95,
           69,  140,  142,  141,   73,  101,  141,  141,   77,   78,
          141,   80,  141,   82,  141,  141,   69,  141,  141,  141,
           89,  117,  118,   92,   93,   94,  138,  139,   97,   98,
          141,  100,  141,  141,  103,  104,  141,  141,   64,  141,
          141,  110,   95,   69,  140,  142,  141,   73,  101,  141,
          141,   77,   78,  141,   80,  141,   82,  141,  141,  141,
          141,  141,  141,   89,  117,  118,   92,   93,   94,  138,
          139,   97,   98,  141,  100,  141,   -1,  103,  104,  142,
          142,   64,  142,  142,  110,  142,   69,  140,  142,  144,
           73,  142,  142,  142,   77,   78,  142,   80,  142,   82,
          142,  142,  142,  142,  142,  142,   89,  142,  142,   92,
           93,   94,  138,  139,   97,   98,  144,  100,   95,   96,
          103,  104,  142,  142,  101,  142,  142,  110,  105,  106,
          142,  142,  142,  142,  142,  142,  113,  114,  115,  116,
           95,   96,  142,  144,   -1,  144,  101,  144,  144,  144,
          105,  106,  144,  144,   95,  138,  139,  134,  113,  114,
          115,  116,  144,  140,  105,  106,   95,  145,  144,   -1,
           95,   -1,  113,  114,  115,  116,  105,  106,   -1,  134,
          105,  106,   95,   -1,  113,  114,  115,  116,  113,  114,
          115,  116,  105,  106,   -1,   -1,   -1,   -1,   95,  140,
          113,  114,  115,  116,   -1,   -1,   -1,   -1,  105,  106,
           95,  140,   -1,   -1,   95,  140,  113,  114,  115,  116,
          105,  106,   -1,   -1,  105,  106,   95,  140,  113,  114,
          115,  116,  113,  114,  115,  116,  105,  106,   -1,   -1,
           -1,   -1,   -1,  140,  113,  114,  115,  116,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,  140,   -1,   -1,   -1,  140,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,  140
    );

    protected static $yybase = array(
            0,  643,  307,  665,  739,  751,  349,   -1,  129,  735,
          679,  723,  707,  695,  691,  332,  299,  249,  249,  249,
          249,  287,   -2,   -2,  108,  108,  210,  210,  210,  210,
          210,  210,  210,  210,  465,  108,  210,  465,  508,  637,
          594,  379,  422,  261,  159,  551,  551,  551,  551,  551,
          551,  551,  551,  551,  551,  551,  551,  551,  551,  551,
          551,  551,  551,  551,  551,  551,  551,  551,  551,  551,
          551,  551,  551,  551,  551,  551,  551,  551,  551,  551,
          551,  551,  551,  551,  551,  551,  551,  551,  551,  551,
          551,  551,  551,  551,  551,  551,  551,  551,  551,  551,
          551,  551,  551,  551,  551,  551,  551,  551,  551,  551,
          551,  551,  551,  551,  551,  551,  551,  551,  551,  551,
          551,  551,  551,  551,  551,  551,  551,  551,  551,  551,
          551,  551,  551,  551,  -43,  329,  374,  364,  429,  428,
          426,  417,  611,  610,  609,  480,  558,  613,  454,  452,
          451,  470,  326,  612,  474,  456,  455,  473,  621,  388,
          301,  557,  415,  523,  620,  578,  578,  120,  120,  120,
          120,  120,  120,  120,  120,  120,  120,  222,  207,  174,
          174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
          174,  174,  174,  174,  310,  310,  310,  310,  310,  310,
          310,  310,  310,  310,  310,  161,   11,  309,  267,  165,
           -3,   -3,   -3,   -3,  375,  -25,  -25,  -25,  -25,  481,
          524,  567,  296,  303,  440,  127,  127,  127,  127,  127,
          127,  127,  127,  127,  127,  127,  127,  401,   75,   75,
          485,  485,  -58,  -58,  -58,  -58,  -58,  205,  192,  152,
          155,  -34,  353,  236,  236,  236,  350,  351,  298,  185,
          203,  -12,  -12,  -12,    8,    8,    8,    8,  439,    8,
            8,    8,  -93,  149,  149,   14,   82,  208,  334,   37,
          -19,  206,  396,  143,  354,  396,  250,  143,  449,  476,
          193,  327,  139,  173,  311,  202,  292,  100,  133,   81,
          -38,  119,  142,    1,   61,  289,  576,  475,  144,  176,
          119,  414,   65,  413,  191,  291,  335,  314,  343,  291,
          532,  291,  300,  291,  296,  160,  539,  300,  291,  333,
          300,  496,  335,  344,  291,  314,  435,  291,  411,  357,
          215,  343,  357,   70,  529,  528,  304,  525,  512,  486,
          519,  336,  434,  360,  355,  511,  509,  498,  315,  294,
          554,  393,  337,  302,  363,  541,  540,  308,  356,  518,
          354,  394,  312,  359,  552,  391,  359,  644,  390,  368,
          361,  410,  237,  243,  432,  393,  566,  642,  342,  497,
          566,  359,  221,  253,  494,  340,  359,  493,  359,  608,
          431,  604,  341,  469,  393,  306,  312,  312,  312,  603,
          104,  400,  638,  538,  601,  600,  629,  628,  586,  625,
          537,  624,  538,  585,  623,  331,  570,   72,  515,  327,
          380,  345,  408,   96,  592,  359,  359,  583,  439,  287,
          359,  563,  346,  365,  565,  351,  305,  482,  569,  359,
          255,  313,  297,  406,  619,  582,  536,  581,  352,  358,
          489,  448,  288,  580,  491,  403,  467,  516,  402,  399,
          534,  330,  445,  579,  574,  347,  561,  571,  398,  124,
          560,  444,  295,  370,  328,  348,  441,  338,  397,  389,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,    0,    0,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  120,  120,  120,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,  120,  120,  120,  120,
          120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  127,  127,  127,  127,  127,  127,  127,
          127,  127,  127,  127,  120,  120,  120,  120,  120,  120,
          120,  120,  120,    0,  -12,  -12,  -12,  -12,  127,  127,
          127,  127,  127,  127,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,  -12,  -12,  127,
          127,    8,    8,    8,    8,    8,    8,  149,  149,  149,
            8,  149,  146,  146,  146,  149,  149,  149,  142,  142,
            0,    0,    0,    0,    0,    0,    0,  146,    0,    0,
            0,  300,    0,    0,    0,  146,   96,  119,    0,    0,
          393,  300,    0,  344,  300,    0,    0,  339,  339,    0,
          552,    0,    0,  497,    0,  393,    0,    0,    0,    0,
            0,    0,    0,    0,  393,  220,  220,    0,    0,    0,
           96,    0,   96
    );

    protected static $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  346,  346,  114,  114,  114,  114,
          114,  114,  114,  114,32767,  309,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,  341,  341,  341,  341,
          341,  341,  341,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,   65,32767,  351,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  168,  167,  224,  225,  227,
          228,  168,  117,  342,  350,  167,   66,  193,  195,  242,
          194,  171,  176,  177,  178,  179,  180,  181,  182,  183,
          184,  185,  186,  170,  306,  306,  309,32767,32767,32767,
        32767,32767,32767,32767,32767,  191,  192,  196,  198,  197,
          213,  214,  211,  212,  169,  215,  216,  217,  218,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,  205,  206,
          268,  268,  109,  109,  109,  109,  109,  109,32767,32767,
        32767,32767,  276,32767,32767,32767,32767,32767,  278,32767,
        32767,  200,  201,  199,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,  277,32767,32767,32767,32767,  327,  314,
          264,32767,32767,32767,  257,32767,   99,32767,32767,32767,
        32767,  295,  332,32767,32767,32767,   17,32767,32767,32767,
          358,  327,32767,  325,32767,   19,32767,32767,32767,32767,
          331,32767,32767,32767,32767,   61,32767,32767,32767,   61,
          273,   61,32767,   61,32767,  308,  279,32767,   61,   74,
        32767,  101,32767,32767,   61,32767,32767,   61,   87,  246,
          308,   52,  246,32767,32767,32767,    4,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,  259,32767,  316,32767,  330,  329,  317,32767,32767,
          257,32767,  209,  188,  258,32767,  190,32767,32767,  262,
          265,32767,32767,  126,32767,  260,  174,32767,32767,32767,
        32767,  353,  240,32767,32767,32767,  122,32767,   59,  325,
        32767,32767,32767,  325,  261,  326,  202,  203,  204,32767,
          113,32767,32767,  303,32767,32767,32767,32767,32767,32767,
          320,32767,32767,32767,32767,  325,32767,  103,32767,  295,
        32767,32767,32767,   75,32767,  172,  118,32767,32767,32767,
          352,32767,32767,  313,32767,32767,32767,32767,32767,   60,
            4,32767,  325,32767,32767,32767,32767,32767,  325,32767,
        32767,32767,  107,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,    4,32767,  146,32767,32767,32767,32767,32767,
           25,   25,    3,  129,    3,  129,  129,   96,   25,   25,
           87,   25,   25,   25,  139,   25,   25,   25,   25
    );

    protected static $yygoto = array(
          137,  137,  172,  172,  172,  172,  172,  172,  172,  172,
          165,  137,  172,  166,  138,  139,  140,  144,  148,  181,
          174,  171,  173,  173,  173,  173,  173,  173,  173,  167,
          168,  169,  170,  179,  716,  717,  372,  719,  738,  739,
          740,  741,  742,  743,  744,  746,  684,  141,  142,  143,
          145,  146,  147,  149,  177,  178,  180,  205,  206,  207,
          208,  209,  210,  211,  212,  213,  215,  216,  217,  218,
          238,  239,  261,  262,  263,  406,  407,  408,  182,  183,
          184,  185,  186,  187,  188,  189,  190,  191,  192,  150,
          151,  152,  153,  154,  175,  155,  156,  157,  193,  134,
          158,  159,  160,  161,  135,  162,  730,  163,  164,  176,
          429,  429,  429,  429,  429,  429,  429,  429,  429,  429,
          429,  401,  430,  430,  430,  430,  430,  430,  430,  430,
          430,  430,  430,  839,  839,  374,  374,  374,  374,  374,
          374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
          374,  374,  374,  517,  517,  517,  767,  767,  619,  619,
          619,  619,  619,  619,  386,  380,  380,  483,  379,  379,
          532,  636,  593,  807,  808,  821,  645,  617,  779,  778,
          585,  585,  585,  585,  857,  465,  586,  471,  375,  375,
          375,  375,  375,  375,  375,  375,  375,  375,  375,  375,
          375,  375,  375,  375,  375,  375,  516,  516,  516,  378,
          378,  452,  452,  452,  435,  303,  396,  398,  398,  373,
          376,  391,  399,  403,  425,  436,  440,  449,  458,  515,
          515,  515,  805,  805,  805,  805,  805,  805,  805,  805,
          805,  805,  805,  603,  589,  587,  587,  587,  587,  497,
          609,  607,    5,  416,  417,  419,  421,  424,  454,    6,
            7,  258,    8,    9,   10,  250,   11,   12,   13,   14,
          414,  415,  418,  423,  455,  457,  473,  281,  625,  838,
          838,  599,  301,  301,  301,  293,    1,  296,    2,  463,
          296,  819,  854,  854,  854,  863,  863,  301,  307,  294,
          728,  389,  615,  866,  863,  310,  397,  837,  437,  441,
          448,  477,  236,  524,  682,  442,  556,  557,  558,  866,
          866,  277,  311,  313,  220,  221,  758,  385,  628,  530,
          592,  633,  305,  816,  289,  404,  472,  566,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,  390
    );

    protected static $yygcheck = array(
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
           33,   68,   83,   83,   83,   83,   83,   83,   83,   83,
           83,   83,   83,   80,   80,   33,   33,   33,   33,   33,
           33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
           33,   33,   33,    7,    7,    7,   33,   33,   33,   33,
           33,   33,   33,   33,   69,   86,   86,   33,   83,   83,
           12,   12,   12,   12,   12,   12,   12,   12,   88,   88,
           33,   33,   33,   33,  100,   33,   33,   33,   79,   79,
           79,   79,   79,   79,   79,   79,   79,   79,   79,   79,
           79,   79,   79,   79,   79,   79,    6,    6,    6,   79,
           79,   24,   24,   24,   24,   24,   24,   24,   24,   24,
           24,   24,   24,   24,   24,   24,   24,   24,   24,    5,
            5,    5,   90,   90,   90,   90,   90,   90,   90,   90,
           90,   90,   90,    5,    5,    5,    5,    5,    5,    5,
            5,    5,   13,   82,   82,   82,   82,   82,   82,   13,
           13,   89,   13,   13,   13,   89,   13,   13,   13,   13,
           49,   49,   49,   49,   49,   49,   49,    4,   51,   81,
           81,   44,   87,   87,   87,   22,    2,    4,    2,   91,
            4,   94,   81,   81,   81,  101,  101,   87,   23,   26,
           70,   26,   47,  101,  101,   87,   26,   81,   34,   34,
           34,   34,   26,   10,   69,   26,   25,   25,   25,  101,
          101,   39,   39,   39,   37,   37,   77,    4,   52,   11,
           40,   53,    4,   93,   41,    4,   74,   32,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   69
    );

    protected static $yygbase = array(
            0,    0, -206,    0,    5,  228,  205,  152,    0,    0,
           28,   -3,  -27, -239,    0,  -24,    0,    0,    0,    0,
            0,    0,  240,   72,   -8,  298,  -22,    0,    0,    0,
            0,    0,   -4,  -84,   65,    0,    0, -171,    0,   56,
           -5, -166,    0,    0,  244,    0,    0,   55,    0,  243,
            0,  242,   41,   -2,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,   96,   92,
           59,    0,    0,    0,   -6,    0,    0,    7,    0,  -31,
         -107,   39,  206,  -72,    0,    0,  -75,   29,  -76,    9,
           38,   94,    0,   -7,   95,    0,    0,    0,    0,    0,
          149,   46,    0
    );

    protected static $yygdefault = array(
        -32768,  343,    3,  511,  361,  535,  536,  537,  297,  295,
          525,  531,  443,    4,  533,  136,  286,  540,  541,  542,
          298,  299,  479,  306,  214,  555,  475,  128,  474,  304,
          559,  341,  565,  291,  426,  362,  411,  219,  400,  433,
          591,  288,  597,  480,  600,  606,  427,  614,  337,  409,
          410,  624,  629,  634,  637,  639,  642,  453,  251,  649,
          484,  485,  314,-32768,-32768,-32768,-32768,-32768,  377,  683,
          326,  745,  747,  387,  461,  754,  312,  757,  363,  364,
          365,  366,  412,  775,  772,  280,  824,  278,  420,  249,
          811,  444,  340,  856,  820,  279,  367,  368,  292,  325,
          858,  865,  434
    );

    protected static $yylhs = array(
            0,    1,    2,    2,    4,    4,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    8,    8,   10,   10,   10,
           10,    9,    9,   11,   13,   13,   14,   14,   14,   14,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,   31,   31,   32,   23,
           23,   26,   26,   27,   27,   28,   28,    6,    7,    7,
            7,   35,   35,   35,   38,   38,   39,   39,   25,   25,
           30,   30,   29,   29,   40,   19,   19,   41,   41,   42,
           43,   43,   44,   44,   18,   18,   16,   16,   45,   17,
           17,   36,   36,   34,   34,   46,   46,   47,   47,   48,
           48,   48,   48,   49,   49,   50,   50,   51,   51,   20,
           20,   52,   52,   52,   21,   21,   53,   53,   37,   37,
           54,   54,   54,   54,   54,   54,   57,   56,   56,   58,
           58,   59,   59,   59,   59,   60,   61,   61,   55,   55,
           63,   63,   63,   63,   66,   66,   64,   62,   62,   62,
           62,   62,   62,   65,   65,   67,   67,   22,   22,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   69,   74,   74,   76,   76,
           77,   78,   78,   78,   78,   78,   78,   83,   83,   33,
           33,   33,   70,   70,   84,   84,   79,   79,   85,   85,
           85,   85,   85,   71,   71,   71,   73,   73,   73,   75,
           75,   90,   90,   90,   90,   90,   90,   90,   90,   90,
           90,   90,   90,   90,   90,   90,   12,   12,   12,   12,
           12,   12,   72,   72,   72,   72,   91,   91,   93,   93,
           92,   92,   94,   94,   24,   24,   24,   24,   96,   96,
           95,   95,   95,   95,   95,   97,   97,   81,   81,   86,
           86,   80,   80,   98,   98,   98,   98,   87,   87,   87,
           87,   82,   82,   88,   88,   88,   68,   68,   99,   99,
          100,  100,  100,  100,   89,   89,   89,   89,  101,  101,
          101,  101,  101,  101,  101,  102,  102,  102
    );

    protected static $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            3,    5,    4,    3,    3,    3,    1,    1,    3,    2,
            4,    3,    1,    3,    2,    0,    1,    1,    1,    1,
            3,    7,    5,    5,    2,    3,    2,    3,    2,    3,
            3,    3,    3,    1,    2,    5,    7,    8,   10,   10,
            5,    1,    5,    3,    3,    2,    1,    2,    8,    1,
            3,    0,    1,    1,    1,    0,    2,    9,    6,    6,
            5,    1,    2,    2,    0,    2,    1,    3,    1,    4,
            1,    4,    1,    3,    3,    3,    4,    0,    2,    7,
            3,    1,    1,    1,    1,    4,    0,    2,    5,    0,
            2,    0,    3,    1,    0,    1,    3,    3,    5,    0,
            1,    1,    1,    1,    0,    1,    3,    1,    2,    3,
            1,    1,    2,    4,    3,    1,    1,    3,    2,    0,
            6,    3,    3,    3,    4,    2,    3,    1,    3,    0,
            2,    4,    5,    4,    4,    3,    1,    1,    1,    3,
            2,    3,    4,    2,    1,    3,    4,    1,    1,    1,
            1,    1,    1,    1,    3,    1,    3,    3,    1,    1,
            5,    3,    4,    4,    1,    2,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    2,    2,    2,
            2,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    2,    2,    2,
            2,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    8,    4,    4,    2,    2,    4,    2,    2,    2,
            2,    2,    2,    2,    2,    2,    2,    2,    1,    4,
            3,    3,    2,    9,   10,    3,    0,    4,    1,    3,
            2,    4,    6,    8,    4,    4,    4,    1,    1,    1,
            2,    3,    1,    1,    1,    1,    1,    1,    0,    3,
            3,    4,    4,    0,    2,    3,    0,    1,    1,    0,
            3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    3,    2,    1,    1,    3,    2,    2,
            4,    3,    1,    3,    3,    3,    0,    2,    0,    1,
            3,    1,    3,    1,    1,    1,    1,    1,    6,    4,
            3,    6,    4,    4,    4,    1,    3,    1,    2,    1,
            1,    4,    1,    3,    6,    4,    4,    4,    4,    1,
            4,    0,    1,    1,    3,    1,    0,    2,    3,    1,
            3,    1,    4,    2,    2,    2,    1,    2,    1,    4,
            3,    3,    3,    6,    3,    1,    1,    1
    );

    protected $yyval;
    protected $yyastk;
    protected $yysp;
    protected $lexer;

    /**
     * Parses PHP code into a node tree.
     *
     * @param PHPParser_Lexer $lexer A lexer
     *
     * @return array Array of statements
     */
    public function parse(PHPParser_Lexer $lexer) {
        $this->lexer  = $lexer;

        $this->yysp   = 0;                   // Stack pos
        $yysstk       = array($yystate = 0); // State stack
        $this->yyastk = array();             // AST   stack (?)
        $yylstk       = array($yyline  = 1); // Line  stack
        $yydstk       = array($yyDC = null); // Doc comment stack

        $yychar       = -1;

        for (;;) {
            if (self::$yybase[$yystate] == 0) {
                $yyn = self::$yydefault[$yystate];
            } else {
                if ($yychar < 0) {
                    if (($yychar = $lexer->lex($yylval, $yyline, $yyDC)) < 0)
                        $yychar = 0;
                    $yychar = $yychar < self::YYMAXLEX ?
                        self::$yytranslate[$yychar] : self::YYBADCH;
                    $yylstk[$this->yysp] = $yyline;
                    $yydstk[$this->yysp] = $yyDC;
                }
                if ((($yyn = self::$yybase[$yystate] + $yychar) >= 0
                     && $yyn < self::YYLAST && self::$yycheck[$yyn] == $yychar
                     || ($yystate < self::YY2TBLSTATE
                        && ($yyn = self::$yybase[$yystate + self::YYNLSTATES]
                            + $yychar) >= 0
                        && $yyn < self::YYLAST
                        && self::$yycheck[$yyn] == $yychar))
                    && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT) {
                    /*
                     * >= YYNLSTATE: shift and reduce
                     * > 0: shift
                     * = 0: accept
                     * < 0: reduce
                     * = -YYUNEXPECTED: error
                     */
                    if ($yyn > 0) {
                        /* shift */
                        ++$this->yysp;

                        $yysstk[$this->yysp]       = $yystate = $yyn;
                        $this->yyastk[$this->yysp] = $yylval;
                        $yylstk[$this->yysp]       = $yyline;
                        $yydstk[$this->yysp]       = $yyDC;
                        $yychar = -1;

                        if ($yyn < self::YYNLSTATES)
                            continue;

                        /* $yyn >= YYNLSTATES means shift-and-reduce */
                        $yyn -= self::YYNLSTATES;
                    } else {
                        $yyn = -$yyn;
                    }
                } else {
                    $yyn = self::$yydefault[$yystate];
                }
            }

            for (;;) {
                /* reduce/error */
                if ($yyn == 0) {
                    /* accept */
                    return $this->yyval;
                } elseif ($yyn != self::YYUNEXPECTED) {
                    /* reduce */
                    try {
                        $this->{'yyn' . $yyn}(
                            $yylstk[$this->yysp - self::$yylen[$yyn]],
                            $yydstk[$this->yysp - self::$yylen[$yyn]]
                        );
                    } catch (PHPParser_Error $e) {
                        if (-1 === $e->getRawLine()) {
                            $e->setRawLine($yyline);
                        }

                        throw $e;
                    }

                    /* Goto - shift nonterminal */
                    $this->yysp -= self::$yylen[$yyn];
                    $yyn = self::$yylhs[$yyn];
                    if (($yyp = self::$yygbase[$yyn] + $yysstk[$this->yysp]) >= 0
                         && $yyp < self::YYGLAST
                         && self::$yygcheck[$yyp] == $yyn) {
                        $yystate = self::$yygoto[$yyp];
                    } else {
                        $yystate = self::$yygdefault[$yyn];
                    }

                    ++$this->yysp;

                    $yysstk[$this->yysp] = $yystate;
                    $this->yyastk[$this->yysp] = $this->yyval;
                    $yylstk[$this->yysp]       = $yyline;
                    $yydstk[$this->yysp]       = $yyDC;
                } else {
                    /* error */
                    throw new PHPParser_Error(
                        'Unexpected token ' . self::$yyterminals[$yychar],
                        $yyline
                    );
                }

                if ($yystate < self::YYNLSTATES)
                    break;
                /* >= YYNLSTATES means shift-and-reduce */
                $yyn = $yystate - self::YYNLSTATES;
            }
        }
    }

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn1($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Namespace::postprocess($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn2($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn3($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn4($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn5($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn6($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn7($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn8($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn9($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_HaltCompiler($this->lexer->handleHaltCompiler(), $line, $docComment); 
    }

    protected function yyn10($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn11($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(5-2)], $line, $docComment), $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn12($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn13($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Use($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn14($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Const($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn15($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn16($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn17($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn18($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-1)], $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn19($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(2-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn20($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(4-2)], $line, $docComment), $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn21($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn22($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn23($line, $docComment) {
         $this->yyval = new PHPParser_Node_Const($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn24($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn25($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn26($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn27($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn28($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn29($line, $docComment) {
         throw new PHPParser_Error('__halt_compiler() can only be used from the outermost scope'); 
    }

    protected function yyn30($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn31($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(7-3)], array('stmts' => is_array($this->yyastk[$this->yysp-(7-5)]) ? $this->yyastk[$this->yysp-(7-5)] : array($this->yyastk[$this->yysp-(7-5)]), 'elseifs' => $this->yyastk[$this->yysp-(7-6)], 'else' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn32($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_While($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn33($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Switch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn34($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break(null, $line, $docComment); 
    }

    protected function yyn35($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn36($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue(null, $line, $docComment); 
    }

    protected function yyn37($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn38($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return(null, $line, $docComment); 
    }

    protected function yyn39($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn40($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Global($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn41($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Static($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn42($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Echo($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn43($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_InlineHTML($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn44($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn45($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Unset($this->yyastk[$this->yysp-(5-3)], $line, $docComment); 
    }

    protected function yyn46($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-3)], array('keyVar' => null, 'byRef' => false, 'stmts' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn47($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-4)], array('keyVar' => null, 'byRef' => true, 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn48($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(10-8)], $this->yyastk[$this->yysp-(10-6)], array('keyVar' => $this->yyastk[$this->yysp-(10-3)], 'byRef' => $this->yyastk[$this->yysp-(10-5)], 'stmts' => $this->yyastk[$this->yysp-(10-10)]), $line, $docComment); 
    }

    protected function yyn49($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ForNumeric($this->yyastk[$this->yysp-(10-3)], $this->yyastk[$this->yysp-(10-5)], $this->yyastk[$this->yysp-(10-7)], $this->yyastk[$this->yysp-(10-10)], $this->yyastk[$this->yysp-(10-6)], $this->yyastk[$this->yysp-(10-8)], $line, $docComment); 
    }

    protected function yyn50($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Declare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn51($line, $docComment) {
         $this->yyval = array(); /* means: n statement */ 
    }

    protected function yyn52($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TryCatch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn53($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Throw($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn54($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Goto($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn55($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Label($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn56($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn57($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn58($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Catch($this->yyastk[$this->yysp-(8-3)], substr($this->yyastk[$this->yysp-(8-4)], 1), $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn59($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn60($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn61($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn62($line, $docComment) {
         $this->yyval = true; 
    }

    protected function yyn63($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn64($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn65($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn66($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn67($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Function($this->yyastk[$this->yysp-(9-3)], array('byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-5)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn68($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Class($this->yyastk[$this->yysp-(6-2)], array('type' => $this->yyastk[$this->yysp-(6-1)], 'stmts' => $this->yyastk[$this->yysp-(6-5)], 'parameter_list' => $this->yyastk[$this->yysp-(6-3)]), $line, $docComment); 
    }

    protected function yyn69($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Interface($this->yyastk[$this->yysp-(6-2)], array('extends' => $this->yyastk[$this->yysp-(6-3)], 'stmts' => $this->yyastk[$this->yysp-(6-5)]), $line, $docComment); 
    }

    protected function yyn70($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Trait($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn71($line, $docComment) {
         $this->yyval = 0; 
    }

    protected function yyn72($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn73($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn74($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn75($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn76($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn77($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn78($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn79($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn80($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn81($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn82($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn83($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn84($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn85($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn86($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn87($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn88($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn89($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Case($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)], $line, $docComment); 
    }

    protected function yyn90($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn91($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn92($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn93($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('default', $line, $docComment); 
    }

    protected function yyn94($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn95($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn96($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn97($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn98($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(5-3)], is_array($this->yyastk[$this->yysp-(5-5)]) ? $this->yyastk[$this->yysp-(5-5)] : array($this->yyastk[$this->yysp-(5-5)]), $line, $docComment); 
    }

    protected function yyn99($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn100($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(is_array($this->yyastk[$this->yysp-(2-2)]) ? $this->yyastk[$this->yysp-(2-2)] : array($this->yyastk[$this->yysp-(2-2)]), $line, $docComment); 
    }

    protected function yyn101($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn102($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn103($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn104($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn105($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn106($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn107($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn108($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $line, $docComment); 
    }

    protected function yyn109($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn110($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn111($line, $docComment) {
         $this->yyval = 'array'; 
    }

    protected function yyn112($line, $docComment) {
         $this->yyval = 'callable'; 
    }

    protected function yyn113($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn114($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn115($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn116($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn117($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(1-1)], false, $line, $docComment); 
    }

    protected function yyn118($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(2-2)], true, $line, $docComment); 
    }

    protected function yyn119($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn120($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn121($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn122($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn123($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn124($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn125($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn126($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn127($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn128($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn129($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn130($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassMethod($this->yyastk[$this->yysp-(6-2)], array('params' => $this->yyastk[$this->yysp-(6-4)], 'stmts' => $this->yyastk[$this->yysp-(6-6)]), $line, $docComment); 
    }

    protected function yyn131($line, $docComment) {
         $this->yyval = new Snowscript_Node_Stmt_Extends($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn132($line, $docComment) {
         $this->yyval = new Snowscript_Node_Stmt_Implements($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn133($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUse($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn134($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignClassProperty($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn135($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn136($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassConst($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn137($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn138($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn139($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn140($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn141($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Precedence($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn142($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(5-1)][0], $this->yyastk[$this->yysp-(5-1)][1], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn143($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], null, $line, $docComment); 
    }

    protected function yyn144($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn145($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
    }

    protected function yyn146($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn147($line, $docComment) {
         $this->yyval = array(null, $this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn148($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn149($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn150($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn151($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
    }

    protected function yyn152($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
    }

    protected function yyn153($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn154($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn155($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn156($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(4-2)], $line, $docComment); 
    }

    protected function yyn157($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn158($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED; 
    }

    protected function yyn159($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE; 
    }

    protected function yyn160($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_STATIC; 
    }

    protected function yyn161($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn162($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn163($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn164($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn165($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn166($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn167($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn168($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn169($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn170($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignList($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn171($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn172($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignRef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn173($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn174($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn175($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Clone($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn176($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignPlus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn177($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMinus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn178($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn179($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignDiv($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn180($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignConcat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn181($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn182($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn183($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn184($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn185($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn186($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn187($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostInc($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn188($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreInc($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn189($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostDec($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn190($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreDec($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn191($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn192($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn193($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn194($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn195($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn196($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn197($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn198($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn199($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Concat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn200($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Plus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn201($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Minus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn202($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn203($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Div($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn204($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn205($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn206($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn207($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn208($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn209($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn210($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn211($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Identical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn212($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotIdentical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn213($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Equal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn214($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn215($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Smaller($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn216($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_SmallerOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn217($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Greater($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn218($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_GreaterOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn219($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Instanceof($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn220($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn221($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-8)], $line, $docComment); 
    }

    protected function yyn222($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Isset($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn223($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Empty($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn224($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE, $line, $docComment); 
    }

    protected function yyn225($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE_ONCE, $line, $docComment); 
    }

    protected function yyn226($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Eval($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn227($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE, $line, $docComment); 
    }

    protected function yyn228($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE_ONCE, $line, $docComment); 
    }

    protected function yyn229($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Int($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn230($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Double($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn231($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_String($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn232($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Array($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn233($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Object($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn234($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Bool($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn235($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Unset($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn236($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Exit($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn237($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ErrorSuppress($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn238($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn239($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn240($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn241($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShellExec($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn242($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Print($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn243($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => false, 'byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-4)], 'uses' => $this->yyastk[$this->yysp-(9-6)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn244($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => true, 'byRef' => $this->yyastk[$this->yysp-(10-3)], 'params' => $this->yyastk[$this->yysp-(10-5)], 'uses' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-9)]), $line, $docComment); 
    }

    protected function yyn245($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn246($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn247($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn248($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn249($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn250($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(2-2)], 1), $this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn251($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn252($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn253($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn254($line, $docComment) {
        
            if ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_StaticPropertyFetch) {
                $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(4-1)]->class, new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-1)]->name, $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
            } elseif ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                $tmp = $this->yyastk[$this->yysp-(4-1)];
                while ($tmp->var instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new PHPParser_Node_Expr_StaticCall($tmp->var->class, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
                $tmp->var = new PHPParser_Node_Expr_Variable($tmp->var->name, $line, $docComment);
            } else {
                throw new Exception;
            }
          
    }

    protected function yyn255($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn256($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn257($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('static', $line, $docComment); 
    }

    protected function yyn258($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn259($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn260($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_FullyQualified($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn261($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_Relative($this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn262($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn263($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn264($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn265($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn266($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn267($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn268() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn269($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn270($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn271($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn272($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn273($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn274($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn275($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn276($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn277($line, $docComment) {
         $this->yyval = array(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(1-1)], '`')); 
    }

    protected function yyn278($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(1-1)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn279($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn280($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn281($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber(PHPParser_Node_Scalar_LNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn282($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DNumber(PHPParser_Node_Scalar_DNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn283($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], "'", $line, $docComment); 
    }

    protected function yyn284($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], '"', $line, $docComment); 
    }

    protected function yyn285($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LineConst($line, $docComment); 
    }

    protected function yyn286($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FileConst($line, $docComment); 
    }

    protected function yyn287($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DirConst($line, $docComment); 
    }

    protected function yyn288($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_ClassConst($line, $docComment); 
    }

    protected function yyn289($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_TraitConst($line, $docComment); 
    }

    protected function yyn290($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_MethodConst($line, $docComment); 
    }

    protected function yyn291($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FuncConst($line, $docComment); 
    }

    protected function yyn292($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_NSConst($line, $docComment); 
    }

    protected function yyn293($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String(PHPParser_Node_Scalar_String::parseDocString($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]), $line, $docComment); 
    }

    protected function yyn294($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String('', $line, $docComment); 
    }

    protected function yyn295($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn296($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn297($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn298($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn299($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn300($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn301($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn302($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn303($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn304($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '"'); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn305($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, null); } } $s = preg_replace('~(\r\n|\n|\r)$~', '', $s); if ('' === $s) array_pop($this->yyastk[$this->yysp-(3-2)]);; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn306($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn307($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn308() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn309() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn310($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn311($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn312($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn313($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn314($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn315($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn316($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn317($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn318($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn319($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn320($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn321($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_MethodCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn322($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn323($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn324($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn325($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn326($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn327($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn328($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn329($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn330($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn331($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn332($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn333($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment); 
    }

    protected function yyn334($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn335($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn336($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn337($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn338($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn339($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn340($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn341($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn342($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn343($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn344($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn345($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn346($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn347($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn348($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn349($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn350($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn351($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn352($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-1)], true, $line, $docComment); 
    }

    protected function yyn353($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(2-2)], null, true, $line, $docComment); 
    }

    protected function yyn354($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn355($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn356($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn357($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn358($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn359($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(4-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn360($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(3-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn361($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn362($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn363($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(6-2)], $line, $docComment), $this->yyastk[$this->yysp-(6-4)], $line, $docComment); 
    }

    protected function yyn364($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn365($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn366($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn367($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }
}
