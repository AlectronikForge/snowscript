<?php

/* This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *  * the grammar file grammar/zend_language_parser.phpy
 *  * the parser skeleton grammar/kymacc.php.parser
 *  * the preprocessing script grammar/rebuildParser.php
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */
class PHPParser_Parser
{
    const YYBADCH      = 146;
    const YYMAXLEX     = 384;
    const YYTERMS      = 146;
    const YYNONTERMS   = 104;
    const YYLAST       = 881;
    const YY2TBLSTATE  = 321;
    const YYGLAST      = 389;
    const YYSTATES     = 767;
    const YYNLSTATES   = 528;
    const YYINTERRTOK  = 1;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    // {{{ Tokens
    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_LOGICAL_OR = 262;
    const T_LOGICAL_XOR = 263;
    const T_LOGICAL_AND = 264;
    const T_PRINT = 265;
    const T_PLUS_EQUAL = 266;
    const T_MINUS_EQUAL = 267;
    const T_MUL_EQUAL = 268;
    const T_DIV_EQUAL = 269;
    const T_CONCAT_EQUAL = 270;
    const T_MOD_EQUAL = 271;
    const T_AND_EQUAL = 272;
    const T_OR_EQUAL = 273;
    const T_XOR_EQUAL = 274;
    const T_SL_EQUAL = 275;
    const T_SR_EQUAL = 276;
    const T_BOOLEAN_OR = 277;
    const T_BOOLEAN_AND = 278;
    const T_IS_EQUAL = 279;
    const T_IS_NOT_EQUAL = 280;
    const T_IS_IDENTICAL = 281;
    const T_IS_NOT_IDENTICAL = 282;
    const T_IS_SMALLER_OR_EQUAL = 283;
    const T_IS_GREATER_OR_EQUAL = 284;
    const T_SL = 285;
    const T_SR = 286;
    const T_INSTANCEOF = 287;
    const T_INC = 288;
    const T_DEC = 289;
    const T_INT_CAST = 290;
    const T_DOUBLE_CAST = 291;
    const T_STRING_CAST = 292;
    const T_ARRAY_CAST = 293;
    const T_OBJECT_CAST = 294;
    const T_BOOL_CAST = 295;
    const T_UNSET_CAST = 296;
    const T_NEW = 297;
    const T_CLONE = 298;
    const T_EXIT = 299;
    const T_IF = 300;
    const T_ELSEIF = 301;
    const T_ELSE = 302;
    const T_ENDIF = 303;
    const T_LNUMBER = 304;
    const T_DNUMBER = 305;
    const T_STRING = 306;
    const T_STRING_VARNAME = 307;
    const T_VARIABLE = 308;
    const T_NUM_STRING = 309;
    const T_INLINE_HTML = 310;
    const T_CHARACTER = 311;
    const T_BAD_CHARACTER = 312;
    const T_ENCAPSED_AND_WHITESPACE = 313;
    const T_CONSTANT_ENCAPSED_STRING = 314;
    const T_ECHO = 315;
    const T_DO = 316;
    const T_WHILE = 317;
    const T_ENDWHILE = 318;
    const T_ENDFOR = 319;
    const T_FOR = 320;
    const T_ENDFOREACH = 321;
    const T_DECLARE = 322;
    const T_ENDDECLARE = 323;
    const T_AS = 324;
    const T_IN = 325;
    const T_SWITCH = 326;
    const T_ENDSWITCH = 327;
    const T_CASE = 328;
    const T_DEFAULT = 329;
    const T_BREAK = 330;
    const T_CONTINUE = 331;
    const T_GOTO = 332;
    const T_FUNCTION = 333;
    const T_CONST = 334;
    const T_RETURN = 335;
    const T_TRY = 336;
    const T_CATCH = 337;
    const T_THROW = 338;
    const T_USE = 339;
    const T_INSTEADOF = 340;
    const T_GLOBAL = 341;
    const T_STATIC = 342;
    const T_ABSTRACT = 343;
    const T_FINAL = 344;
    const T_PRIVATE = 345;
    const T_PROTECTED = 346;
    const T_PUBLIC = 347;
    const T_VAR = 348;
    const T_UNSET = 349;
    const T_ISSET = 350;
    const T_EMPTY = 351;
    const T_HALT_COMPILER = 352;
    const T_CLASS = 353;
    const T_TRAIT = 354;
    const T_INTERFACE = 355;
    const T_EXTENDS = 356;
    const T_IMPLEMENTS = 357;
    const T_OBJECT_OPERATOR = 358;
    const T_DOUBLE_ARROW = 359;
    const T_LIST = 360;
    const T_ARRAY = 361;
    const T_CALLABLE = 362;
    const T_CLASS_C = 363;
    const T_TRAIT_C = 364;
    const T_METHOD_C = 365;
    const T_FUNC_C = 366;
    const T_LINE = 367;
    const T_FILE = 368;
    const T_COMMENT = 369;
    const T_DOC_COMMENT = 370;
    const T_OPEN_TAG = 371;
    const T_OPEN_TAG_WITH_ECHO = 372;
    const T_CLOSE_TAG = 373;
    const T_WHITESPACE = 374;
    const T_START_HEREDOC = 375;
    const T_END_HEREDOC = 376;
    const T_DOLLAR_OPEN_CURLY_BRACES = 377;
    const T_CURLY_OPEN = 378;
    const T_PAAMAYIM_NEKUDOTAYIM = 379;
    const T_NAMESPACE = 380;
    const T_NS_C = 381;
    const T_DIR = 382;
    const T_NS_SEPARATOR = 383;
    // }}}

    protected static $yyterminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "'?'",
        "':'",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_ENDIF",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_CONSTANT_ENCAPSED_STRING",
        "T_ECHO",
        "T_DO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_IN",
        "T_SWITCH",
        "T_CASE",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_LIST",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "'$'",
        "']'",
        "'`'",
        "'\"'"
        , "???"
    );

    protected static $yytranslate = array(
            0,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,   47,  145,  146,  142,   46,   30,  146,
          140,  141,   44,   41,    7,   42,   43,   45,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,   25,  137,
           35,   12,   37,   24,   59,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,   60,  146,  143,   29,  146,  144,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  138,   28,  139,   49,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,    1,    2,    3,    4,
            5,    6,    8,    9,   10,   11,   13,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   26,   27,   31,
           32,   33,   34,   36,   38,   39,   40,   48,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   61,   62,   63,
           64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
           74,  146,  146,   75,   76,   77,   78,   79,   80,  146,
           81,   82,   83,   84,   85,   86,   87,  146,   88,  146,
           89,   90,   91,   92,   93,   94,   95,   96,   97,   98,
           99,  100,  101,  102,  103,  104,  105,  106,  107,  108,
          109,  110,  111,  112,  113,  114,  115,  116,  117,  118,
          119,  120,  121,  122,  123,  124,  125,  126,  127,  146,
          146,  146,  146,  146,  146,  128,  129,  130,  131,  132,
          133,  134,  135,  136
    );

    protected static $yyaction = array(
           56,   57,  356,   58,   59,-32766,-32766,-32766,  277,   60,
          684,  685,  686,  683,  682,  681,-32766,-32766,-32766,   49,
            0,-32766,   50,-32766,-32766,-32766,-32766,-32766,-32767,-32767,
        -32767,-32767,-32766,  328,-32766,-32766,-32766,-32766,-32766,   61,
           62,  345,  639,  640,   37,   63,  532,   64,  229,  230,
           65,   66,   67,   68,   69,   70,   71,   72,   27,  243,
           73,  329,  357, -104,  326,  417,  806,  807,  358,  268,
          863,  427,  573,   38,  808,   47,   24,  359,  676,  360,
          196,  361,  102,  103,  104,  362,  244,   39,   40,  363,
          332,  249,   41,  364,  330,   74,  287,  116,  285,  286,
          117,  272,   32,  290,  365,  366,  367,  368,  369,  383,
          595,  649,  331,  557,  596,  370,  371,  372,  373,-32766,
          812,  813,  814,  815,  809,  810,  250,   53,   81,   82,
           83,  383,  816,  811,  331,  580,  506,  122,   75,  123,
          270,  325,  254,  258,   44,  344,   84,   85,   86,   87,
           88,   89,   90,   91,   92,   93,   94,   95,   96,   97,
           98,   99,  100,  101,  102,  103,  104,  772,  244,  326,
          223,-32766,-32766,-32766,  268,   19,-32766,   52,-32766,-32766,
        -32766,  226,  532,  676,  256,  127,-32766,-32766,  303,-32766,
        -32766,-32766,  342,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
          436,-32766,-32766,-32766,-32766,  119,-32766,-32766,  354,-32766,
          532,  326,-32766,  382,-32766,  594,  268,-32766,-32766,-32766,
        -32766,-32766,  231,-32766,  126,  676,  541,-32766,  496,-32766,
        -32766,-32766,  341,  570,-32766,-32766,  894,-32766,  896,  895,
        -32766,  382,-32766,-32766,-32766,  505,   43,  233,-32766,-32766,
        -32766,-32766,-32766,-32766,  235,  118,-32766,  593,-32766,  867,
        -32766,-32766,  532,  459,  891,  532,-32766,  863,  123,-32766,
        -32766,-32766,  857,-32766,  863,-32766,  131,-32766,-32766,-32766,
          259,-32766,-32766,-32766,  884,  237,-32766,-32766,-32766,-32766,
          224,  884,-32766,  382,  532,  120,  782,  663,-32766,  236,
        -32766,-32766,-32766,-32766,  339,-32766,  508,-32766,   99,  100,
          101,-32766,  668,-32766,-32766,-32766,  129,  818,-32766,-32766,
          453,-32766,  571,  197,-32766,  382,  198,  124,  383,-32766,
        -32766,  331,-32766,-32766,  818,  333,  199,  270,  658,  532,
        -32766,-32766,  278,-32766,  270,  829,-32766,-32766,-32766,  203,
        -32766,  204,-32766,  523,  828,  526,-32766,  234,-32766,-32766,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,  479,   25,-32766,
          382,  532,  487,  488,  584,-32766,  128,-32766,-32766,-32766,
        -32766,  512,-32766,  514,-32766,  639,  640,  515,-32766,  518,
        -32766,-32766,-32766,  673,  527,-32766,-32766,  591,-32766,  538,
          510,-32766,  382,  244,-32766,   48,-32766,-32766,   51,-32766,
          532,  312,  662,  521,-32766,  243,  338,-32766,-32766,-32766,
           54,-32766,  340,-32766,  493, -147,  405,-32766, -144,-32766,
        -32766,-32766,  482,  394,-32766,-32766,  395,-32766,-32766,-32766,
        -32766,  382,  799,-32766,  397,-32766,-32766,-32766,-32766,  532,
          406,  407,  492,-32766,  504,  532,-32766,-32766,-32766,  533,
        -32766,-32766,-32766,-32766,  546,  889,-32766,  548,-32766,-32766,
        -32766,  821,  670,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
          382,  532,  396,  275,  475,-32766,  477,-32766,-32766,-32766,
        -32766,  491,-32766,  775,-32766,  276,  337,  884,-32766,  130,
        -32766,-32766,-32766,  240,  473,-32766,-32766,  353,-32766,  408,
          445,-32766,  382,  132,-32766,  269,-32766,-32766,  266,-32766,
          532,  597,  461,  267,-32766,  817,  339,-32766,-32766,-32766,
         -263,-32766,  271,-32766,  293,  598,  401,-32766,  893,-32766,
        -32766,-32766,  517,    0,-32766,-32766,-32766,-32766,  564,-32766,
        -32766,  382,  532, -321,  414,  255,-32766,  257,-32766,-32766,
        -32766,-32766,  202,-32766,   46,-32766,  200,  201,  336,-32766,
          583,-32766,-32766,-32766, -255,  261,-32766,-32766,  575,-32766,
          262,  305,-32766,  382,  460,  194,  501,  566,-32766, -264,
        -32766,   80,  562,  806,  807,  620,  610,-32766,  560,  608,
          669,  808,   45,  105,  106,  107,  108,  109,  110,  111,
          112,  113,  114,  115,  667,  330,  323,  574,  565,  568,
        -32766,  284,  567,  569,  582,  365,  366,  572,  666,  542,
          659,  765,  348,  507,  537,  596,  370,  371,  509,  511,
          711,  713,  516,  519,  520,  442,  522,  812,  813,  814,
          815,  809,  810,  313,  524,  525,  274,  121,   28,  816,
          811,  892,  540,  330,  323,-32766,  614,-32766,  615,  284,
          330,  323,  468,  365,  366,  890,  284,  864,  862,  848,
          365,  366,  537,  596,  370,  371,  860,  797,  651,  537,
          596,  370,  371,-32767,-32767,-32767,-32767,   97,   98,   99,
          100,  101,  330,  868,  274,  858,  330, -321,   29,   30,
          539,  274,  365,  366,   31,   33,  365,  366,  349,  330,
           34,  557,  596,  370,  371,  557,  596,  370,  371,  365,
          366,   35,   36,   42,   55,  330,   76,   77,  557,  596,
          370,  371,   78,   79,  125,  365,  366,  133,  330,  558,
          352,  134,  330,  592,  557,  596,  370,  371,  365,  366,
          195,  221,  365,  366,  222,  330,  768,  557,  596,  370,
          371,  557,  596,  370,  371,  365,  366,  225,  227,  228,
          232,  245,  769,  420,  557,  596,  370,  371,  480,  246,
          247,  248,  273,  322,  494,  587,  472,  324,  766,  618,
          330,-32766,  781,  495,  330,  748,  764,  776,  779,  481,
          365,  366,  674,  780,  365,  366,  846,  330,  805,  557,
          596,  370,  371,  557,  596,  370,  371,  365,  366,-32766,
        -32766,-32766,  330,  777,  845,  824,  557,  596,  370,  371,
          778,   18,  365,  366,   20,-32766,   21,-32766,-32766,-32766,
        -32766,  557,  596,  370,  371,   22,   23,   26,  346,  470,
          503,  744,  751,  800,  500,  448,    0,  873,  446,  747,
            0,    0,  861,  847,  843,  859,  796,  888,  825,  842,
          478
    );

    protected static $yycheck = array(
            2,    3,    4,    5,    6,    8,    9,   10,   60,   11,
          101,  102,  103,  104,  105,  106,    8,    9,   10,   60,
            0,   24,   60,   26,   27,   28,   29,   30,   31,   32,
           33,   34,   24,    7,   26,   27,   28,   29,   30,   41,
           42,    7,  120,  121,    7,   47,   70,   49,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   64,  141,   93,  117,   68,   69,   70,   98,
           72,   70,   74,    7,   76,   77,   78,   79,  107,   81,
            7,   83,   44,   45,   46,   87,   48,   89,   90,   91,
           92,    7,   94,   95,   92,   97,    7,  138,  100,  101,
          138,    7,  140,    7,  102,  103,  108,  109,  110,  133,
          139,   72,  136,  111,  112,  113,  114,  119,  120,    8,
          122,  123,  124,  125,  126,  127,  128,   60,    8,    9,
           10,  133,  134,  135,  136,  137,  138,   25,  140,  138,
          142,  139,  144,  145,   24,    7,   26,   27,   28,   29,
           30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
           40,   41,   42,   43,   44,   45,   46,  141,   48,   93,
           30,    8,    9,   10,   98,  141,   64,   60,    8,    9,
           10,  142,   70,  107,  117,   60,   74,   24,   72,   77,
           78,   79,    7,   81,   24,   83,   26,   27,   28,   87,
           70,   89,   90,   91,   64,  138,   94,   95,    7,   97,
           70,   93,  100,  101,   74,  139,   98,   77,   78,   79,
          108,   81,   30,   83,   86,  107,  137,   87,   70,   89,
           90,   91,    7,  137,   94,   95,   70,   97,   72,   73,
          100,  101,    8,    9,   10,   70,  130,  131,  108,  137,
          138,    8,    9,   10,   30,  138,   64,  139,   24,   70,
           26,   27,   70,   75,  139,   70,   74,   72,  138,   77,
           78,   79,   72,   81,   72,   83,   12,  137,  138,   87,
           75,   89,   90,   91,   75,    7,   94,   95,   64,   97,
            7,   75,  100,  101,   70,    7,  101,  139,   74,   30,
          108,   77,   78,   79,  136,   81,  138,   83,   41,   42,
           43,   87,  137,   89,   90,   91,  138,  129,   94,   95,
          142,   97,  137,   12,  100,  101,   12,  138,  133,  137,
          138,  136,  108,   64,  129,  140,   12,  142,  137,   70,
            8,    9,  142,   74,  142,  129,   77,   78,   79,   12,
           81,   12,   83,   25,  145,   25,   87,   30,   89,   90,
           91,  137,  138,   94,   95,   64,   97,   65,   66,  100,
          101,   70,   65,   66,   25,   74,   25,  108,   77,   78,
           79,   25,   81,   25,   83,  120,  121,   25,   87,   25,
           89,   90,   91,  137,  138,   94,   95,   30,   97,  137,
          138,  100,  101,   48,   64,   60,  137,  138,   60,  108,
           70,   71,  137,  138,   74,   61,   70,   77,   78,   79,
           60,   81,   70,   83,   67,   72,   79,   87,   85,   89,
           90,   91,   88,   70,   94,   95,   70,   97,  137,  138,
          100,  101,  141,   64,   70,    8,    9,   10,  108,   70,
           70,   70,   70,   74,   70,   70,   77,   78,   79,   70,
           81,   24,   83,   26,   70,   70,   87,   70,   89,   90,
           91,   70,   70,   94,   95,   64,   97,  137,  138,  100,
          101,   70,   72,   75,   72,   74,   72,  108,   77,   78,
           79,   72,   81,   72,   83,   75,   92,   75,   87,   86,
           89,   90,   91,   85,   98,   94,   95,   92,   97,   85,
           85,  100,  101,   86,   64,   99,  137,  138,  115,  108,
           70,  112,   96,  116,   74,  129,  136,   77,   78,   79,
          132,   81,  115,   83,  141,  112,  136,   87,  139,   89,
           90,   91,  137,   -1,   94,   95,   64,   97,  137,  138,
          100,  101,   70,  117,  119,  117,   74,  117,  108,   77,
           78,   79,  118,   81,  118,   83,   41,   42,  136,   87,
          137,   89,   90,   91,  132,  132,   94,   95,  137,   97,
          132,  132,  100,  101,  132,   60,  132,  137,  138,  132,
          108,  138,  137,   68,   69,  137,  137,   72,  137,  137,
          137,   76,   12,   13,   14,   15,   16,   17,   18,   19,
           20,   21,   22,   23,  137,   92,   93,  137,  137,  137,
          138,   98,  137,  137,  137,  102,  103,  137,  137,  137,
          137,  143,  138,  138,  111,  112,  113,  114,  138,  138,
           50,   51,  138,  138,  138,  120,  138,  122,  123,  124,
          125,  126,  127,  128,  138,  138,  133,  138,  140,  134,
          135,  139,  139,   92,   93,  140,  139,  142,  139,   98,
           92,   93,  139,  102,  103,  139,   98,  139,  139,  139,
          102,  103,  111,  112,  113,  114,  139,  139,  139,  111,
          112,  113,  114,   35,   36,   37,   38,   39,   40,   41,
           42,   43,   92,  139,  133,  139,   92,  117,  140,  140,
          139,  133,  102,  103,  140,  140,  102,  103,  141,   92,
          140,  111,  112,  113,  114,  111,  112,  113,  114,  102,
          103,  140,  140,  140,  140,   92,  140,  140,  111,  112,
          113,  114,  140,  140,  140,  102,  103,  140,   92,  139,
          141,  140,   92,  139,  111,  112,  113,  114,  102,  103,
          140,  140,  102,  103,  140,   92,  139,  111,  112,  113,
          114,  111,  112,  113,  114,  102,  103,  140,  140,  140,
          140,  140,  139,  141,  111,  112,  113,  114,   80,  140,
          140,  140,  140,  140,   82,  139,  141,  140,  144,  139,
           92,  140,  143,  141,   92,  141,  141,  141,  141,   84,
          102,  103,  139,  141,  102,  103,  141,   92,  141,  111,
          112,  113,  114,  111,  112,  113,  114,  102,  103,    8,
            9,   10,   92,  141,  141,  141,  111,  112,  113,  114,
          141,  141,  102,  103,  141,   24,  141,   26,   27,   28,
           29,  111,  112,  113,  114,  141,  141,  141,  141,  141,
          141,  141,  141,  141,  141,  141,   -1,  141,  141,  141,
           -1,   -1,  143,  143,  143,  143,  143,  143,  143,  143,
          143
    );

    protected static $yybase = array(
            0,  523,  571,  578,  610,    2,  708,  725,  712,  614,
          627,  643,  656,  660,  673,  740,  740,  740,  358,  362,
          364,  364,  364,  356,   -2,   -2,   -2,  192,  192,  224,
          224,  224,  224,  224,  224,  224,  224,  192,  224,  411,
          450,  482,  301,  340,  112,  140,  269,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  480,  446,  481,  485,  486,
          487,  720,  721,  722,  715,  700,  717,  536,  538,  351,
          539,  540,  547,  548,  549,  533,  564,  718,  703,  737,
          566,  705,  714,  716,  719,  120,  120,  120,  120,  120,
          120,  120,  120,  120,  111,  332,  243,  243,  243,  243,
          243,  243,  243,  243,  243,  243,  243,  243,  243,  243,
          243,  163,  163,  437,  525,  525,  525,  525,  525,  525,
          525,  525,  525,  525,  525,  234,  170,  821,    8,   -3,
           -3,   -3,   -3,  590,  658,  658,  658,  658,  -29,   76,
          118,  435,  435,  354,  435,  327,  519,  195,  195,  195,
          195,  195,  195,  195,  195,  195,  195,  195,  195,  353,
          384,  267,  267,  661,  661,  -78,  -78,  -78,  -78,  265,
          205,  216,  209,  158,  408,  189,  189,  189,  420,  396,
          422,    1,  130,   38,   38,   38,  -24,  -24,  -24,  -24,
          453,  -24,  -24,  -24,  168,  116,  116,  166,  178,  275,
          457,  -38,   67,  262,  432,   39,  404,  432,  302,  307,
           39,  527,  529,  256,  442,  117,  490,  381,  492,  424,
           89,   96,  185,  -52,  -41,  200,  138,   34,  425,  727,
          728,  724,  125,  188,  -41,  726,  493,  201,   26,  723,
          491,  175,  367,  366,  380,  426,  366,  414,  367,  593,
          367,  385,  367,  354,   37,  575,  385,  367,  403,  385,
          417,  366,  410,  407,  367,  380,  494,  367,  405,  406,
           73,  426,  406,  367,  414,   20,  596,  597,  349,  602,
          637,  657,  603,  363,  495,  409,  423,  638,  639,  640,
          374,  346,  621,  518,  400,  352,  345,  443,  569,  574,
          348,  438,  404,  390,  355,  436,  568,  448,  436,  488,
          449,  398,  440,  347,  433,  311,  314,  500,  400,  642,
          654,  389,  641,  642,  436,  604,  324,  649,  394,  436,
          650,  436,  664,  501,  624,  436,  665,  395,  399,  400,
          360,  355,  355,  355,  666,   66,  659,  580,  667,  672,
          729,  730,  675,  731,  591,  732,  580,  677,  733,  413,
          577,   84,  620,  442,  452,  397,  441,   94,  264,  734,
          436,  436,  504,  453,  436,  655,  412,  444,  735,  396,
          401,  652,  609,  436,  415,  736,   94,  692,  592,  693,
          455,  427,  505,  653,  506,  337,  694,  339,  522,  607,
          458,  459,  594,  419,  508,  382,  699,  611,  328,  357,
          421,  662,  651,  461,  462,  516,  343,  454,  416,  418,
          517,  402,  393,  330,  463,  477,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,    0,    0,    0,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,    0,    0,    0,    0,    0,    0,    0,
            0,    0,  120,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  195,  195,  195,  195,  195,  195,  195,  195,
          195,  195,  195,  120,  120,  120,  120,  120,  120,  120,
          120,    0,   38,   38,   38,   38,  -91,  -91,  -91,  195,
          195,  195,  195,  195,  195,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,  -91,  -91,   38,
           38,  195,  195,  -24,  -24,  -24,  -24,  -24,  116,  116,
          116,  -24,  116,  202,  202,  202,  116,  116,  116,  200,
          200,    0,    0,    0,    0,    0,    0,    0,  202,    0,
            0,    0,  385,    0,    0,    0,  202,   94,  -41,    0,
            0,  400,  385,    0,  410,  385,    0,    0,    0,  344,
          344,    0,  568,    0,  288,  641,  225,  400,    0,    0,
            0,    0,    0,    0,    0,    0,  400,  278,  278,  283,
            0,    0,    0,  283,  225,    0,    0,  288,   94
    );

    protected static $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,   96,  102,   98,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  347,  347,  114,
          114,  114,  114,  114,  114,  114,  114,  305,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,  337,  337,
          337,  337,  337,  337,  337,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,  352,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  221,  222,  224,  225,  164,
          117,  338,  351,  163,  189,  191,  239,  190,  167,  172,
          173,  174,  175,  176,  177,  178,  179,  180,  181,  182,
          166,  218,  217,  187,  302,  302,  305,32767,32767,32767,
        32767,32767,32767,32767,32767,  188,  192,  194,  193,  209,
          210,  207,  208,  165,  211,  212,  213,  214,  149,  149,
          149,  346,  346,32767,  346,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  150,
        32767,  201,  202,  265,  265,  109,  109,  109,  109,  109,
        32767,32767,32767,32767,  273,32767,32767,32767,32767,32767,
          275,32767,32767,  196,  197,  195,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  274,32767,32767,32767,32767,
          323,  310,  261,32767,32767,32767,  254,32767,   99,  101,
        32767,32767,32767,32767,  291,  328,32767,32767,32767,   17,
        32767,32767,32767,  359,  323,32767,  321,32767,   19,32767,
        32767,32767,32767,32767,  327,32767,32767,32767,32767,32767,
        32767,32767,   62,32767,32767,32767,32767,32767,   62,  270,
           62,32767,   62,32767,  304,  276,32767,   62,   73,32767,
           71,32767,32767,   75,   62,32767,32767,   62,   88,  243,
          304,   53,  243,   62,32767,32767,32767,32767,    4,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  256,32767,  312,32767,  326,  325,
          313,32767,  254,32767,  205,  184,  255,32767,  186,32767,
        32767,  259,  262,32767,32767,32767,  126,32767,  257,  170,
        32767,32767,32767,32767,  354,32767,32767,32767,32767,  122,
        32767,   60,  321,32767,32767,  344,32767,32767,  321,  258,
          322,  198,  199,  200,32767,  113,32767,  299,32767,32767,
        32767,32767,32767,32767,  316,32767,32767,32767,32767,  321,
        32767,  103,32767,  291,32767,32767,32767,   74,32767,32767,
          168,  118,32767,32767,  353,32767,32767,  309,32767,32767,
        32767,32767,32767,   61,32767,32767,   76,32767,32767,32767,
        32767,  321,32767,32767,32767,  107,32767,  161,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,    4,32767,  143,32767,
        32767,32767,32767,32767,32767,32767,   25,   25,    3,  129,
            3,  129,   25,   93,   25,   25,  129,   88,   25,   25,
           25,  136,   25,   25,   25,   25,   25,   25
    );

    protected static $yygoto = array(
          136,  136,  170,  170,  170,  170,  170,  170,  170,  170,
          136,  170,  137,  138,  139,  143,  147,  149,  178,  172,
          169,  171,  171,  171,  171,  171,  171,  171,  169,  165,
          166,  167,  168,  176,  731,  732,  384,  734,  754,  755,
          756,  757,  758,  759,  760,  762,  699,  140,  141,  142,
          144,  145,  146,  148,  174,  175,  177,  193,  205,  206,
          207,  208,  209,  210,  211,  212,  214,  215,  216,  217,
          241,  242,  263,  264,  265,  421,  422,  423,  179,  180,
          181,  182,  183,  184,  185,  186,  187,  188,  189,  150,
          151,  152,  153,  173,  154,  191,  155,  156,  157,  158,
          159,  192,  160,  161,  190,  162,  163,  164,  443,  443,
          443,  443,  443,  443,  443,  443,  443,  443,  443,  444,
          444,  444,  444,  444,  444,  444,  444,  444,  444,  444,
          399,  535,  535,  535,  416,  386,  386,  386,  386,  386,
          386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
          386,  386,  386,  534,  534,  534,  877,  783,  783,  638,
          638,  638,  638,  638,  536,  536,  536,  497,  391,  391,
          619,  609,  607,  607,  607,  513,  393,  628,  623,  219,
          605,  605,  605,  605,  220,  600,  606,  483,  387,  387,
          387,  387,  387,  387,  387,  387,  387,  387,  387,  387,
          387,  387,  387,  387,  387,  387,  455,  462,  502,  644,
          390,  390,  415,  415,  450,  415,  306,  409,  411,  411,
          385,  388,  404,  412,  418,  439,  451,  454,  463,  471,
            5,  466,  279,  320,  319,   15,  260,    6,    7,  476,
          252,    8,    9,   10,  315,   11,   16,   12,   13,   17,
           14,  820,  820,  820,  820,  820,  820,  820,  820,  820,
          820,  820,  551,  655,  613,  822,  823,  836,  636,  690,
          428,  429,  432,  437,  467,  469,  486,  283,  697,  853,
          853,  430,  431,  433,  435,  438,  465,  299,  883,  883,
          299,  869,  869,  869,  577,  578,  886,  883,  834,    1,
          297,    2,  402,  304,  304,  304,  852,  410,  680,  321,
          854,  854,  886,  886,  238,  392,  392,  456,  304,  795,
          794,  870,  310,  485,  743,  634,  314,  543,  647,  774,
          316,  549,  612,  831,  398,  652,  586,  292,  484,  308,
            0,    0,  419,  688,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,  403
    );

    protected static $yygcheck = array(
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   33,   33,
           33,   33,   33,   33,   33,   33,   33,   33,   33,   83,
           83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
           68,    6,    6,    6,   72,   33,   33,   33,   33,   33,
           33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
           33,   33,   33,    5,    5,    5,  101,   33,   33,   33,
           33,   33,   33,   33,    7,    7,    7,   33,   83,   83,
            5,    5,    5,    5,    5,    5,    5,    5,    5,   38,
           33,   33,   33,   33,   38,   33,   33,   33,   79,   79,
           79,   79,   79,   79,   79,   79,   79,   79,   79,   79,
           79,   79,   79,   79,   79,   79,   34,   34,   34,   51,
           79,   79,   26,   26,   26,   26,   26,   26,   26,   26,
           26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
           13,   40,   40,   40,   24,   13,   89,   13,   13,   91,
           89,   13,   13,   13,   67,   13,   13,   13,   13,   13,
           13,   90,   90,   90,   90,   90,   90,   90,   90,   90,
           90,   90,   12,   12,   12,   12,   12,   12,   12,   12,
           49,   49,   49,   49,   49,   49,   49,    4,   68,   81,
           81,   82,   82,   82,   82,   82,   82,    4,  102,  102,
            4,   81,   81,   81,   27,   27,  102,  102,   94,    2,
           28,    2,   28,   87,   87,   87,   81,   28,   64,   64,
           80,   80,  102,  102,   28,   86,   86,   28,   87,   88,
           88,   99,   25,   28,   69,   47,   87,   10,   52,   77,
            9,   11,   41,   93,    4,   53,   32,   42,   74,    4,
           -1,   -1,    4,   66,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   68
    );

    protected static $yygbase = array(
            0,    0, -209,    0,    3,  152,  130,  163,    0,    4,
           40,  -10,   65, -277,    0,  -27,    0,    0,    0,    0,
            0,    0,    0,    0,  179,   94,   -9,  273,  -30,    0,
            0,    0,  -15,  -86,  -40,    0,    0,    0, -332,    0,
          -36,  -13, -180,    0,    0,    0,    0,   76,    0,  240,
            0,  171,   38,   -7,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,   69,    0,  -11,   22,   55,   80,
            0,    0,  106,    0,  -14,    0,    0,    1,    0,  -33,
           67,   36,  232,  -75,    0,    0,   72,   48,   63,  -18,
           57,   44,    0,  -17,  102,    0,    0,    0,    0,   97,
            0,  119,   37,    0
    );

    protected static $yygdefault = array(
        -32768,  355,    3,  530,  374,  554,  555,  556,  300,  298,
          544,  550,  457,    4,  552,  135,  288,  559,  289,  489,
          561,  563,  301,  302,  296,  309,  213,  576,  490,  307,
          579,  351,  585,  294,  440,  375,  343,  452,  218,  413,
          447,  611,  291,  617,  622,  625,  441,  633,  347,  424,
          425,  643,  648,  653,  656,  327,  317,  464,  660,  661,
          253,  665,  498,  499,  679,  239,  687,  311,  698,  335,
          761,  763,  389,  400,  474,  770,  318,  773,  376,  377,
          378,  379,  426,  791,  788,  282,  839,  280,  434,  251,
          826,  458,  350,  876,  835,  281,  380,  381,  295,  871,
          334,  878,  885,  449
    );

    protected static $yylhs = array(
            0,    1,    2,    2,    4,    4,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    8,    8,   10,   10,   10,
           10,    9,    9,   11,   13,   13,   14,   14,   14,   14,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,   31,   31,   32,
           25,   25,   28,   28,    6,    7,    7,    7,   35,   35,
           35,   36,   36,   39,   39,   37,   37,   40,   40,   27,
           27,   30,   30,   29,   29,   41,   21,   21,   42,   42,
           43,   20,   20,   16,   16,   44,   18,   18,   45,   17,
           17,   19,   19,   34,   34,   46,   46,   47,   47,   48,
           48,   48,   48,   49,   49,   50,   50,   51,   51,   22,
           22,   52,   52,   52,   23,   23,   53,   53,   38,   38,
           54,   54,   54,   54,   59,   59,   60,   60,   61,   61,
           61,   61,   62,   63,   63,   58,   58,   55,   55,   57,
           57,   65,   65,   64,   64,   64,   64,   64,   64,   56,
           56,   66,   66,   24,   24,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   68,   74,   74,   76,   76,   77,   78,   78,
           78,   78,   78,   78,   83,   83,   33,   33,   33,   69,
           69,   84,   84,   79,   79,   85,   85,   85,   85,   85,
           70,   70,   70,   73,   73,   73,   75,   75,   90,   90,
           90,   90,   90,   90,   90,   90,   90,   90,   90,   90,
           90,   90,   12,   12,   12,   12,   12,   12,   71,   71,
           71,   71,   91,   91,   93,   93,   92,   92,   94,   94,
           26,   26,   26,   26,   96,   96,   95,   95,   95,   95,
           95,   97,   97,   81,   81,   86,   86,   80,   80,   98,
           98,   98,   98,   87,   87,   87,   87,   82,   82,   88,
           88,   88,   67,   67,   99,   99,   99,   72,   72,  100,
          100,  101,  101,  101,  101,   89,   89,   89,   89,  102,
          102,  102,  102,  102,  102,  102,  103,  103,  103
    );

    protected static $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            3,    5,    4,    3,    3,    3,    1,    1,    3,    2,
            4,    3,    1,    3,    2,    0,    1,    1,    1,    1,
            3,    7,   10,    5,    7,    5,    2,    3,    2,    3,
            2,    3,    3,    3,    3,    1,    2,    5,    7,    8,
           10,    5,    1,    5,    3,    3,    2,    1,    2,    8,
            1,    3,    0,    1,    9,    7,    6,    5,    1,    2,
            2,    0,    2,    0,    2,    0,    2,    1,    3,    1,
            4,    1,    4,    1,    3,    3,    3,    4,    0,    2,
            7,    1,    4,    0,    2,    5,    0,    2,    6,    0,
            2,    0,    3,    1,    0,    1,    3,    3,    5,    0,
            1,    1,    1,    1,    0,    1,    3,    1,    2,    3,
            1,    1,    2,    4,    3,    1,    1,    3,    2,    0,
            3,    3,    8,    3,    1,    3,    0,    2,    4,    5,
            4,    4,    3,    1,    1,    1,    3,    1,    1,    0,
            1,    1,    2,    1,    1,    1,    1,    1,    1,    1,
            3,    1,    3,    3,    1,    1,    6,    3,    4,    4,
            1,    2,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    2,    2,    2,    2,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    2,    2,    2,    2,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    5,    4,    4,
            4,    2,    2,    4,    2,    2,    2,    2,    2,    2,
            2,    2,    2,    2,    2,    1,    4,    3,    3,    2,
            9,   10,    3,    0,    4,    1,    3,    2,    4,    6,
            8,    4,    4,    4,    1,    1,    1,    2,    3,    1,
            1,    1,    1,    1,    1,    0,    3,    3,    4,    4,
            0,    2,    3,    0,    1,    1,    0,    3,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    3,
            2,    1,    1,    3,    2,    2,    4,    3,    1,    3,
            3,    3,    0,    2,    0,    1,    3,    1,    3,    1,
            1,    1,    1,    1,    6,    4,    3,    6,    4,    4,
            4,    1,    3,    1,    2,    1,    1,    4,    1,    3,
            6,    4,    4,    4,    4,    1,    4,    0,    1,    1,
            3,    1,    3,    1,    1,    4,    0,    0,    2,    3,
            1,    3,    1,    4,    2,    2,    2,    1,    2,    1,
            4,    3,    3,    3,    6,    3,    1,    1,    1
    );

    protected $yyval;
    protected $yyastk;
    protected $yysp;
    protected $lexer;

    /**
     * Parses PHP code into a node tree.
     *
     * @param PHPParser_Lexer $lexer A lexer
     *
     * @return array Array of statements
     */
    public function parse(PHPParser_Lexer $lexer) {
        $this->lexer  = $lexer;

        $this->yysp   = 0;                   // Stack pos
        $yysstk       = array($yystate = 0); // State stack
        $this->yyastk = array();             // AST   stack (?)
        $yylstk       = array($yyline  = 1); // Line  stack
        $yydstk       = array($yyDC = null); // Doc comment stack

        $yychar       = -1;

        for (;;) {
            if (self::$yybase[$yystate] == 0) {
                $yyn = self::$yydefault[$yystate];
            } else {
                if ($yychar < 0) {
                    if (($yychar = $lexer->lex($yylval, $yyline, $yyDC)) < 0)
                        $yychar = 0;
                    $yychar = $yychar < self::YYMAXLEX ?
                        self::$yytranslate[$yychar] : self::YYBADCH;
                    $yylstk[$this->yysp] = $yyline;
                    $yydstk[$this->yysp] = $yyDC;
                }
                if ((($yyn = self::$yybase[$yystate] + $yychar) >= 0
                     && $yyn < self::YYLAST && self::$yycheck[$yyn] == $yychar
                     || ($yystate < self::YY2TBLSTATE
                        && ($yyn = self::$yybase[$yystate + self::YYNLSTATES]
                            + $yychar) >= 0
                        && $yyn < self::YYLAST
                        && self::$yycheck[$yyn] == $yychar))
                    && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT) {
                    /*
                     * >= YYNLSTATE: shift and reduce
                     * > 0: shift
                     * = 0: accept
                     * < 0: reduce
                     * = -YYUNEXPECTED: error
                     */
                    if ($yyn > 0) {
                        /* shift */
                        ++$this->yysp;

                        $yysstk[$this->yysp]       = $yystate = $yyn;
                        $this->yyastk[$this->yysp] = $yylval;
                        $yylstk[$this->yysp]       = $yyline;
                        $yydstk[$this->yysp]       = $yyDC;
                        $yychar = -1;

                        if ($yyn < self::YYNLSTATES)
                            continue;

                        /* $yyn >= YYNLSTATES means shift-and-reduce */
                        $yyn -= self::YYNLSTATES;
                    } else {
                        $yyn = -$yyn;
                    }
                } else {
                    $yyn = self::$yydefault[$yystate];
                }
            }

            for (;;) {
                /* reduce/error */
                if ($yyn == 0) {
                    /* accept */
                    return $this->yyval;
                } elseif ($yyn != self::YYUNEXPECTED) {
                    /* reduce */
                    try {
                        $this->{'yyn' . $yyn}(
                            $yylstk[$this->yysp - self::$yylen[$yyn]],
                            $yydstk[$this->yysp - self::$yylen[$yyn]]
                        );
                    } catch (PHPParser_Error $e) {
                        if (-1 === $e->getRawLine()) {
                            $e->setRawLine($yyline);
                        }

                        throw $e;
                    }

                    /* Goto - shift nonterminal */
                    $this->yysp -= self::$yylen[$yyn];
                    $yyn = self::$yylhs[$yyn];
                    if (($yyp = self::$yygbase[$yyn] + $yysstk[$this->yysp]) >= 0
                         && $yyp < self::YYGLAST
                         && self::$yygcheck[$yyp] == $yyn) {
                        $yystate = self::$yygoto[$yyp];
                    } else {
                        $yystate = self::$yygdefault[$yyn];
                    }

                    ++$this->yysp;

                    $yysstk[$this->yysp] = $yystate;
                    $this->yyastk[$this->yysp] = $this->yyval;
                    $yylstk[$this->yysp]       = $yyline;
                    $yydstk[$this->yysp]       = $yyDC;
                } else {
                    /* error */
                    throw new PHPParser_Error(
                        'Unexpected token ' . self::$yyterminals[$yychar],
                        $yyline
                    );
                }

                if ($yystate < self::YYNLSTATES)
                    break;
                /* >= YYNLSTATES means shift-and-reduce */
                $yyn = $yystate - self::YYNLSTATES;
            }
        }
    }

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn1($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Namespace::postprocess($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn2($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; };
    }

    protected function yyn3($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn4($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn5($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn6($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn7($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn8($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn9($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_HaltCompiler($this->lexer->handleHaltCompiler(), $line, $docComment);
    }

    protected function yyn10($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-2)], $line, $docComment), null, $line, $docComment);
    }

    protected function yyn11($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(5-2)], $line, $docComment), $this->yyastk[$this->yysp-(5-4)], $line, $docComment);
    }

    protected function yyn12($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn13($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Use($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn14($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Const($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn15($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn16($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn17($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment), null, $line, $docComment);
    }

    protected function yyn18($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-1)], $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn19($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(2-2)], $line, $docComment), null, $line, $docComment);
    }

    protected function yyn20($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(4-2)], $line, $docComment), $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn21($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn22($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn23($line, $docComment) {
         $this->yyval = new PHPParser_Node_Const($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn24($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; };
    }

    protected function yyn25($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn26($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn27($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn28($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn29($line, $docComment) {
         throw new PHPParser_Error('__halt_compiler() can only be used from the outermost scope');
    }

    protected function yyn30($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn31($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(7-3)], array('stmts' => is_array($this->yyastk[$this->yysp-(7-5)]) ? $this->yyastk[$this->yysp-(7-5)] : array($this->yyastk[$this->yysp-(7-5)]), 'elseifs' => $this->yyastk[$this->yysp-(7-6)], 'else' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment);
    }

    protected function yyn32($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(10-3)], array('stmts' => $this->yyastk[$this->yysp-(10-6)], 'elseifs' => $this->yyastk[$this->yysp-(10-7)], 'else' => $this->yyastk[$this->yysp-(10-8)]), $line, $docComment);
    }

    protected function yyn33($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_While($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn34($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Do($this->yyastk[$this->yysp-(7-5)], is_array($this->yyastk[$this->yysp-(7-2)]) ? $this->yyastk[$this->yysp-(7-2)] : array($this->yyastk[$this->yysp-(7-2)]), $line, $docComment);
    }

    protected function yyn35($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Switch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn36($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break(null, $line, $docComment);
    }

    protected function yyn37($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn38($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue(null, $line, $docComment);
    }

    protected function yyn39($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn40($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return(null, $line, $docComment);
    }

    protected function yyn41($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn42($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Global($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn43($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Static($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn44($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Echo($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn45($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_InlineHTML($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn46($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn47($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Unset($this->yyastk[$this->yysp-(5-3)], $line, $docComment);
    }

    protected function yyn48($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], array('keyVar' => null, 'byRef' => false, 'stmts' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment);
    }

    protected function yyn49($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-6)], array('keyVar' => null, 'byRef' => true, 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment);
    }

    protected function yyn50($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(10-3)], $this->yyastk[$this->yysp-(10-8)], array('keyVar' => $this->yyastk[$this->yysp-(10-5)], 'byRef' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-10)]), $line, $docComment);
    }

    protected function yyn51($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Declare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn52($line, $docComment) {
         $this->yyval = array(); /* means: no statement */
    }

    protected function yyn53($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TryCatch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn54($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Throw($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn55($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Goto($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn56($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Label($this->yyastk[$this->yysp-(2-1)], $line, $docComment);
    }

    protected function yyn57($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn58($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn59($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Catch($this->yyastk[$this->yysp-(8-3)], substr($this->yyastk[$this->yysp-(8-4)], 1), $this->yyastk[$this->yysp-(8-7)], $line, $docComment);
    }

    protected function yyn60($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn61($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn62($line, $docComment) {
         $this->yyval = false;
    }

    protected function yyn63($line, $docComment) {
         $this->yyval = true;
    }

    protected function yyn64($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Function($this->yyastk[$this->yysp-(9-3)], array('byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-5)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment);
    }

    protected function yyn65($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Class($this->yyastk[$this->yysp-(7-2)], array('type' => $this->yyastk[$this->yysp-(7-1)], 'extends' => $this->yyastk[$this->yysp-(7-3)], 'implements' => $this->yyastk[$this->yysp-(7-4)], 'stmts' => $this->yyastk[$this->yysp-(7-6)]), $line, $docComment);
    }

    protected function yyn66($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Interface($this->yyastk[$this->yysp-(6-2)], array('extends' => $this->yyastk[$this->yysp-(6-3)], 'stmts' => $this->yyastk[$this->yysp-(6-5)]), $line, $docComment);
    }

    protected function yyn67($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Trait($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment);
    }

    protected function yyn68($line, $docComment) {
         $this->yyval = 0;
    }

    protected function yyn69($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT;
    }

    protected function yyn70($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL;
    }

    protected function yyn71($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn72($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn73($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn74($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn75($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn76($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn77($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn78($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn79($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn80($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn81($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn82($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn83($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn84($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn85($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn86($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn87($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)];
    }

    protected function yyn88($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn89($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn90($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Case($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)], $line, $docComment);
    }

    protected function yyn91($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn92($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn93($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn94($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn95($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(5-3)], is_array($this->yyastk[$this->yysp-(5-5)]) ? $this->yyastk[$this->yysp-(5-5)] : array($this->yyastk[$this->yysp-(5-5)]), $line, $docComment);
    }

    protected function yyn96($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn97($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn98($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)], $line, $docComment);
    }

    protected function yyn99($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn100($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(is_array($this->yyastk[$this->yysp-(2-2)]) ? $this->yyastk[$this->yysp-(2-2)] : array($this->yyastk[$this->yysp-(2-2)]), $line, $docComment);
    }

    protected function yyn101($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn102($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else($this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn103($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn104($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn105($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn106($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn107($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn108($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $line, $docComment);
    }

    protected function yyn109($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn110($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn111($line, $docComment) {
         $this->yyval = 'array';
    }

    protected function yyn112($line, $docComment) {
         $this->yyval = 'callable';
    }

    protected function yyn113($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn114($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn115($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn116($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn117($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(1-1)], false, $line, $docComment);
    }

    protected function yyn118($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(2-2)], true, $line, $docComment);
    }

    protected function yyn119($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn120($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn121($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }

    protected function yyn122($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn123($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn124($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn125($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn126($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment);
    }

    protected function yyn127($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn128($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn129($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn130($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn131($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassConst($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn132($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassMethod($this->yyastk[$this->yysp-(8-4)], array('type' => $this->yyastk[$this->yysp-(8-1)], 'byRef' => $this->yyastk[$this->yysp-(8-3)], 'params' => $this->yyastk[$this->yysp-(8-6)], 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment);
    }

    protected function yyn133($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUse($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn134($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn135($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn136($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn137($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn138($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Precedence($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn139($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(5-1)][0], $this->yyastk[$this->yysp-(5-1)][1], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment);
    }

    protected function yyn140($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], null, $line, $docComment);
    }

    protected function yyn141($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn142($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]);
    }

    protected function yyn143($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn144($line, $docComment) {
         $this->yyval = array(null, $this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn145($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn146($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn147($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn148($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC;
    }

    protected function yyn149($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC;
    }

    protected function yyn150($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn151($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn152($line, $docComment) {
         PHPParser_Node_Stmt_Class::verifyModifier($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); $this->yyval = $this->yyastk[$this->yysp-(2-1)] | $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn153($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC;
    }

    protected function yyn154($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED;
    }

    protected function yyn155($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE;
    }

    protected function yyn156($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_STATIC;
    }

    protected function yyn157($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT;
    }

    protected function yyn158($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL;
    }

    protected function yyn159($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn160($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn161($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment);
    }

    protected function yyn162($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn163($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn164($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn165($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn166($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignList($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)], $line, $docComment);
    }

    protected function yyn167($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn168($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignRef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn169($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn170($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn171($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Clone($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn172($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignPlus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn173($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMinus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn174($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn175($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignDiv($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn176($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignConcat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn177($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn178($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn179($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn180($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn181($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn182($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn183($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostInc($this->yyastk[$this->yysp-(2-1)], $line, $docComment);
    }

    protected function yyn184($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreInc($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn185($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostDec($this->yyastk[$this->yysp-(2-1)], $line, $docComment);
    }

    protected function yyn186($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreDec($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn187($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn188($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn189($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn190($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn191($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn192($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn193($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn194($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn195($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Concat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn196($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Plus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn197($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Minus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn198($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn199($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Div($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn200($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn201($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn202($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn203($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn204($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn205($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn206($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn207($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Identical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn208($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotIdentical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn209($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Equal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn210($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn211($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Smaller($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn212($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_SmallerOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn213($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Greater($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn214($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_GreaterOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn215($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Instanceof($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn216($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn217($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn218($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn219($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Isset($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn220($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Empty($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn221($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE, $line, $docComment);
    }

    protected function yyn222($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE_ONCE, $line, $docComment);
    }

    protected function yyn223($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Eval($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn224($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE, $line, $docComment);
    }

    protected function yyn225($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE_ONCE, $line, $docComment);
    }

    protected function yyn226($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Int($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn227($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Double($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn228($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_String($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn229($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Array($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn230($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Object($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn231($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Bool($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn232($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Unset($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn233($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Exit($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn234($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ErrorSuppress($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn235($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn236($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn237($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn238($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShellExec($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn239($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Print($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn240($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => false, 'byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-4)], 'uses' => $this->yyastk[$this->yysp-(9-6)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment);
    }

    protected function yyn241($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => true, 'byRef' => $this->yyastk[$this->yysp-(10-3)], 'params' => $this->yyastk[$this->yysp-(10-5)], 'uses' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-9)]), $line, $docComment);
    }

    protected function yyn242($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn243($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn244($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)];
    }

    protected function yyn245($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn246($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn247($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(2-2)], 1), $this->yyastk[$this->yysp-(2-1)], $line, $docComment);
    }

    protected function yyn248($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn249($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn250($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-7)], $line, $docComment);
    }

    protected function yyn251($line, $docComment) {

            if ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_StaticPropertyFetch) {
                $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(4-1)]->class, new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-1)]->name, $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
            } elseif ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                $tmp = $this->yyastk[$this->yysp-(4-1)];
                while ($tmp->var instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new PHPParser_Node_Expr_StaticCall($tmp->var->class, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
                $tmp->var = new PHPParser_Node_Expr_Variable($tmp->var->name, $line, $docComment);
            } else {
                throw new Exception;
            }

    }

    protected function yyn252($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn253($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn254($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('static', $line, $docComment);
    }

    protected function yyn255($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn256($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn257($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_FullyQualified($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn258($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_Relative($this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn259($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn260($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn261($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn262($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn263($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn264($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn265() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn266($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn267($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn268($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn269($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn270($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn271($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn272($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn273($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn274($line, $docComment) {
         $this->yyval = array(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(1-1)], '`'));
    }

    protected function yyn275($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(1-1)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn276($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn277($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn278($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber(PHPParser_Node_Scalar_LNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment);
    }

    protected function yyn279($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DNumber(PHPParser_Node_Scalar_DNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment);
    }

    protected function yyn280($line, $docComment) {
         $this->yyval = PHPParser_Node_Scalar_String::create($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn281($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LineConst($line, $docComment);
    }

    protected function yyn282($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FileConst($line, $docComment);
    }

    protected function yyn283($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DirConst($line, $docComment);
    }

    protected function yyn284($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_ClassConst($line, $docComment);
    }

    protected function yyn285($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_TraitConst($line, $docComment);
    }

    protected function yyn286($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_MethodConst($line, $docComment);
    }

    protected function yyn287($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FuncConst($line, $docComment);
    }

    protected function yyn288($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_NSConst($line, $docComment);
    }

    protected function yyn289($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String(PHPParser_Node_Scalar_String::parseDocString($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]), $line, $docComment);
    }

    protected function yyn290($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String('', $line, $docComment);
    }

    protected function yyn291($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn292($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn293($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn294($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn295($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn296($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn297($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn298($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn299($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn300($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '"'); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn301($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, null); } } $s = preg_replace('~(\r\n|\n|\r)$~', '', $s); if ('' === $s) array_pop($this->yyastk[$this->yysp-(3-2)]);; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn302($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn303($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn304() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn305() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn306($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn307($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn308($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment);
    }

    protected function yyn309($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment);
    }

    protected function yyn310($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn311($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn312($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn313($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn314($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn315($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn316($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn317($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_MethodCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn318($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn319($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn320($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn321($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn322($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn323($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn324($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn325($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn326($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn327($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn328($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn329($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment);
    }

    protected function yyn330($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn331($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn332($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn333($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn334($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn335($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }

    protected function yyn336($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn337($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn338($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn339($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn340($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn341($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn342($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn343($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn344($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn345($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)];
    }

    protected function yyn346($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn347($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn348($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn349($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn350($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn351($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment);
    }

    protected function yyn352($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment);
    }

    protected function yyn353($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-1)], true, $line, $docComment);
    }

    protected function yyn354($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(2-2)], null, true, $line, $docComment);
    }

    protected function yyn355($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn356($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn357($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn358($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]);
    }

    protected function yyn359($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }

    protected function yyn360($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(4-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn361($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(3-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn362($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn363($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn364($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(6-2)], $line, $docComment), $this->yyastk[$this->yysp-(6-4)], $line, $docComment);
    }

    protected function yyn365($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn366($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn367($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn368($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }
}
