<?php

/* This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *  * the grammar file grammar/zend_language_parser.phpy
 *  * the parser skeleton grammar/kymacc.php.parser
 *  * the preprocessing script grammar/rebuildParser.php
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */
class PHPParser_Parser
{
    const YYBADCH      = 146;
    const YYMAXLEX     = 388;
    const YYTERMS      = 146;
    const YYNONTERMS   = 104;
    const YYLAST       = 897;
    const YY2TBLSTATE  = 318;
    const YYGLAST      = 413;
    const YYSTATES     = 765;
    const YYNLSTATES   = 523;
    const YYINTERRTOK  = 1;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    // {{{ Tokens
    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_LOGICAL_OR = 262;
    const T_LOGICAL_XOR = 263;
    const T_LOGICAL_AND = 264;
    const T_PRINT = 265;
    const T_PLUS_EQUAL = 266;
    const T_MINUS_EQUAL = 267;
    const T_MUL_EQUAL = 268;
    const T_DIV_EQUAL = 269;
    const T_CONCAT_EQUAL = 270;
    const T_MOD_EQUAL = 271;
    const T_AND_EQUAL = 272;
    const T_OR_EQUAL = 273;
    const T_XOR_EQUAL = 274;
    const T_SL_EQUAL = 275;
    const T_SR_EQUAL = 276;
    const T_THEN = 277;
    const T_BOOLEAN_OR = 278;
    const T_BOOLEAN_AND = 279;
    const T_IS_EQUAL = 280;
    const T_IS_NOT_EQUAL = 281;
    const T_IS_IDENTICAL = 282;
    const T_IS_NOT_IDENTICAL = 283;
    const T_IS_SMALLER_OR_EQUAL = 284;
    const T_IS_GREATER_OR_EQUAL = 285;
    const T_SL = 286;
    const T_SR = 287;
    const T_INSTANCEOF = 288;
    const T_INC = 289;
    const T_DEC = 290;
    const T_INT_CAST = 291;
    const T_DOUBLE_CAST = 292;
    const T_STRING_CAST = 293;
    const T_ARRAY_CAST = 294;
    const T_OBJECT_CAST = 295;
    const T_BOOL_CAST = 296;
    const T_UNSET_CAST = 297;
    const T_NEW = 298;
    const T_CLONE = 299;
    const T_EXIT = 300;
    const T_IF = 301;
    const T_ELSEIF = 302;
    const T_ELSE = 303;
    const T_ENDIF = 304;
    const T_LNUMBER = 305;
    const T_DNUMBER = 306;
    const T_STRING = 307;
    const T_STRING_VARNAME = 308;
    const T_VARIABLE = 309;
    const T_NUM_STRING = 310;
    const T_INLINE_HTML = 311;
    const T_CHARACTER = 312;
    const T_BAD_CHARACTER = 313;
    const T_ENCAPSED_AND_WHITESPACE = 314;
    const T_CONSTANT_ENCAPSED_STRING = 315;
    const T_ECHO = 316;
    const T_DO = 317;
    const T_WHILE = 318;
    const T_ENDWHILE = 319;
    const T_ENDFOR = 320;
    const T_FOR = 321;
    const T_ENDFOREACH = 322;
    const T_DECLARE = 323;
    const T_ENDDECLARE = 324;
    const T_AS = 325;
    const T_TO = 326;
    const T_DOWNTO = 327;
    const T_STEP = 328;
    const T_IN = 329;
    const T_SWITCH = 330;
    const T_ENDSWITCH = 331;
    const T_CASE = 332;
    const T_DEFAULT = 333;
    const T_BREAK = 334;
    const T_CONTINUE = 335;
    const T_GOTO = 336;
    const T_FUNCTION = 337;
    const T_CONST = 338;
    const T_RETURN = 339;
    const T_TRY = 340;
    const T_CATCH = 341;
    const T_THROW = 342;
    const T_USE = 343;
    const T_INSTEADOF = 344;
    const T_GLOBAL = 345;
    const T_STATIC = 346;
    const T_ABSTRACT = 347;
    const T_FINAL = 348;
    const T_PRIVATE = 349;
    const T_PROTECTED = 350;
    const T_PUBLIC = 351;
    const T_VAR = 352;
    const T_UNSET = 353;
    const T_ISSET = 354;
    const T_EMPTY = 355;
    const T_HALT_COMPILER = 356;
    const T_CLASS = 357;
    const T_TRAIT = 358;
    const T_INTERFACE = 359;
    const T_EXTENDS = 360;
    const T_IMPLEMENTS = 361;
    const T_OBJECT_OPERATOR = 362;
    const T_DOUBLE_ARROW = 363;
    const T_LIST = 364;
    const T_ARRAY = 365;
    const T_CALLABLE = 366;
    const T_CLASS_C = 367;
    const T_TRAIT_C = 368;
    const T_METHOD_C = 369;
    const T_FUNC_C = 370;
    const T_LINE = 371;
    const T_FILE = 372;
    const T_COMMENT = 373;
    const T_DOC_COMMENT = 374;
    const T_OPEN_TAG = 375;
    const T_OPEN_TAG_WITH_ECHO = 376;
    const T_CLOSE_TAG = 377;
    const T_WHITESPACE = 378;
    const T_START_HEREDOC = 379;
    const T_END_HEREDOC = 380;
    const T_DOLLAR_OPEN_CURLY_BRACES = 381;
    const T_CURLY_OPEN = 382;
    const T_PAAMAYIM_NEKUDOTAYIM = 383;
    const T_NAMESPACE = 384;
    const T_NS_C = 385;
    const T_DIR = 386;
    const T_NS_SEPARATOR = 387;
    // }}}

    protected static $yyterminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "':'",
        "T_THEN",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_CONSTANT_ENCAPSED_STRING",
        "T_ECHO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_TO",
        "T_DOWNTO",
        "T_STEP",
        "T_IN",
        "T_SWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "'$'",
        "']'",
        "'`'",
        "'\"'"
        , "???"
    );

    protected static $yytranslate = array(
            0,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,   47,  145,  146,  142,   46,   30,  146,
          140,  141,   44,   41,    7,   42,   43,   45,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,   24,  137,
           35,   12,   37,  146,   59,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,   60,  146,  143,   29,  146,  144,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  138,   28,  139,   49,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,    1,    2,    3,    4,
            5,    6,    8,    9,   10,   11,   13,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   25,   26,   27,
           31,   32,   33,   34,   36,   38,   39,   40,   48,   50,
           51,   52,   53,   54,   55,   56,   57,   58,   61,   62,
           63,   64,   65,   66,  146,   67,   68,   69,   70,   71,
           72,   73,  146,  146,   74,   75,   76,  146,   77,   78,
          146,   79,   80,   81,   82,   83,   84,   85,   86,   87,
           88,  146,   89,   90,   91,   92,   93,   94,   95,   96,
           97,   98,   99,  100,  101,  102,  103,  104,  105,  106,
          107,  108,  146,  109,  110,  111,  112,  113,  114,  115,
          116,  117,  118,  119,  146,  120,  121,  122,  123,  124,
          125,  126,  127,  146,  146,  146,  146,  146,  146,  128,
          129,  130,  131,  132,  133,  134,  135,  136
    );

    protected static $yyaction = array(
           53,   54,  353,   55,   56,-32766,-32766,-32766,    0,   57,
        -32767,-32767,-32767,-32767,   94,   95,   96,   97,   98,-32766,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32767,-32767,
        -32767,-32767,  685,  686,  687,  684,  683,  682,-32766,   58,
           59,   51,-32766,-32766,-32766,   60,  879,   61,  228,  229,
           62,   63,   64,   65,   66,   67,   68,   69,   24,  242,
           70,  325,  354,   47,  125,  806,  807,  355,  446,  863,
          421,  566,  233,  808,   45,  356,-32766,  357,  324,  358,
          335,  477,  506,   99,  100,  101,  359,  243,  118,   38,
           39,  360,  328,  326,   40,  361,  494,   71,-32766,  256,
          285,  286,  341,  362,  363,  475,   22,  364,  365,  366,
           35,  552,  594,  367,  368,-32766,  648,  828,  369,  117,
          812,  813,  814,  815,  809,  810,  250,   78,   79,   80,
        -32766,  380,  816,  811,  327,  574,  504,  222,   72,  120,
          270,  113,  254,  258,   48,   81,   82,   83,   84,   85,
           86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
           96,   97,   98,   99,  100,  101,  663,  243,  230,-32766,
          122,  378,-32766,-32766,-32766,  889,  527,  891,  890,  527,
        -32766,  863,  329,-32766,-32766,  287,-32766,  224,-32766,-32766,
        -32766,-32766,-32766,-32766,-32766,-32766,  586,  587,-32766,-32766,
        -32766,  290,  378,-32766,-32766,  303,-32766,  527,  340,-32766,
          379,-32766,  772,  782,-32766,-32766,-32766,-32766,  565,-32766,
          234,-32766,  114,   50,   29,  857,-32766,  124,  472,-32766,
        -32766,-32766,  242,  338,-32766,-32766,   16,-32766,  638,  639,
        -32766,  379,  503,  380,-32766,-32766,  327,-32766,-32766,-32766,
        -32766,  235,  270,   17,  378,-32766,-32766,-32766,  863,  527,
        -32766,  673,  522,-32766,   42,  232,-32766,-32766,  430,-32766,
          453,-32766,  867,-32766,-32766,-32766,-32766,  119,-32766,  329,
           36,-32766,-32766,-32766,  259,  378,-32766,-32766,  123,-32766,
          527,  277,-32766,  379,-32766,  238,  278,-32766,-32766,-32766,
        -32766,  115,-32766,   96,   97,   98,  886,  533,  508,-32766,
          668,  329,-32766,-32766,-32766,  536,   37,-32766,-32766,  879,
        -32766,  662,  518,-32766,  379,  818,  197,-32766,-32766,  270,
        -32766,  563,  249,  378,-32766,-32766,-32766,  120,  527,  818,
          272,  121,-32766,  351,  337,-32766,-32766,  236,-32766,  411,
        -32766,  129,-32766,-32766,-32766,-32766,  198,-32766,-32766,-32766,
        -32766,-32766,-32766,  564,  378,-32766,-32766,  199,-32766,  527,
          200,-32766,  379,-32766,  829,  204,-32766,-32766,-32766,-32766,
          205,-32766,  126,-32766,  578,  511,  512,   46,-32766,  515,
          620,-32766,-32766,-32766,  585,  243,-32766,-32766,   49,-32766,
          130,   52,-32766,  379,  242,  275,-32766,-32766,  133,-32766,
          799,  334,  378, -149,  336,-32766,  127,  527,  311,  390,
          391,-32766,  393,  402,-32766,-32766,  276,-32766,  403,-32766,
          879,  595,  638,  639,  596,  489,-32766,-32766,-32766,-32766,
        -32766,-32766,  502,  378,-32766,-32766,  527,-32766,  527,  528,
        -32766,  379,-32766, -108,-32766,-32766,-32766,-32766,-32766,  541,
        -32766,  884,  543,  821,  670,  239,  404,-32766,  392,  470,
        -32766,-32766,-32766,  472,  488,-32766,-32766,  775,-32766,  439,
          478,-32766,  379,  333,  455,-32766,-32766,  131,-32766,  269,
          266,  378,-32766,-32766,-32766,  350,  527,  271,  817,  468,
        -32766,  268, -268,-32766,-32766, -326,-32766, -260,-32766,  289,
        -32766,-32766,-32766,  513,  335,-32766,-32766,-32766,-32766,-32766,
        -32766,  397,  378,-32766,-32766,  255,-32766,  527,  257,-32766,
          379,-32766,  203,   44,-32766,-32766,-32766,-32766,    0,-32766,
         -259,  261,  577,  262,  305,   20,-32766,  454,  500,-32766,
        -32766,-32766, -269,  332,-32766,-32766,  568,-32766,  622,  608,
        -32766,  379,  606,  669,  557,-32766,  667,-32766,  567,  558,
          378,  560,  562,  576,  661,  527,  666,  537,  658,-32766,
          676,  888,-32766,-32766,   77,-32766,  345,-32766,  505,  507,
          509,  201,  202,  514,-32766,  559,-32766,-32766,-32766,-32766,
          516,  517,-32766,-32766,  519,-32766,  520,  521,-32766,  379,
          195,  887,  677,  612,  613,-32766,  681,  806,  807,  464,
          885,-32766,  864,  293,  862,  808,   43,  102,  103,  104,
          105,  106,  107,  108,  109,  110,  111,  112,  848,  860,
          797,  326,  320,  561,-32766,   25,  650,  284,  868,  858,
            0,  362,  363,   26,   27,   28,   30,   31,   32,  532,
          594,  367,  368,   33,  712,  714,   34,   41,   73,   74,
          436,   75,  812,  813,  814,  815,  809,  810,  312,   76,
          274,  116,  132,  196,  816,  811,  535,  346,  326,  320,
          349,  223,-32766,  226,  284,  227,  231,  244,  362,  363,
          245,  326,  246,  247,  248,  323,  532,  594,  367,  368,
          267,  362,  363,  458,  686,  687,  684,  683,  682,  552,
          594,  367,  368,  273,  319,  321,  323,  274,  329,  401,
          414,  267, -326,  534,  458,  686,  687,  684,  683,  682,
          467,  493,  499,  323,  748,  764,  322,  776,  267,  593,
          329,  458,  686,  687,  684,  683,  682,  326,  320,  779,
          780,  846,  326,  284,  805,  629,  777,  362,  363,  845,
          592,  329,  362,  363,  326,  532,  594,  367,  368,  326,
          552,  594,  367,  368,  362,  363,  824,  591,  329,  362,
          363,  326,  552,  594,  367,  368,  274,  552,  594,  367,
          368,  362,  363,  778,  781,  -96,   15,  553,   18,  552,
          594,  367,  368,   19,   21,   23,  342,  447,  745,  590,
          326,  861,  751,  800,  768,  440,  847,  747,    0,    0,
          362,  363,  326,  476,  843,  859,  769,  326,  552,  594,
          367,  368,  362,  363,  796,  883,  825,  362,  363,  326,
          552,  594,  367,  368,  842,  552,  594,  367,  368,  362,
          363,  490,  473,    0,  766,  581,    0,  552,  594,  367,
          368,    0,    0,    0,    0,  326,    0,  616,    0,    0,
            0,    0,  674,    0,    0,  362,  363,    0,    0,    0,
            0,    0,    0,  552,  594,  367,  368
    );

    protected static $yycheck = array(
            2,    3,    4,    5,    6,    8,    9,   10,    0,   11,
           35,   36,   37,   38,   39,   40,   41,   42,   43,    8,
            8,    9,   10,   26,   27,   28,   29,   30,   31,   32,
           33,   34,  103,  104,  105,  106,  107,  108,   26,   41,
           42,   60,    8,    9,   71,   47,   74,   49,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   64,   60,  138,   67,   68,   69,  142,   71,
           69,   73,   30,   75,   76,   77,  103,   79,    7,   81,
          136,   82,  138,   44,   45,   46,   88,   48,    7,   91,
           92,   93,   94,   94,   96,   97,   69,   99,   71,  118,
          102,  103,    7,  104,  105,   65,   66,  109,  110,  111,
            7,  112,  113,  114,  115,  142,   71,  145,  120,  138,
          122,  123,  124,  125,  126,  127,  128,    8,    9,   10,
          103,  133,  134,  135,  136,  137,  138,   30,  140,  138,
          142,  138,  144,  145,   60,   26,   27,   28,   29,   30,
           31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
           41,   42,   43,   44,   45,   46,  139,   48,   30,  142,
           12,   64,    8,    9,   10,   69,   69,   71,   72,   69,
           73,   71,  140,   76,   77,    7,   79,  142,   81,   71,
           26,   27,   28,   29,   30,   88,   84,   85,   91,   92,
           93,    7,   64,   96,   97,   71,   99,   69,    7,  102,
          103,   73,  141,  103,   76,   77,  109,   79,  137,   81,
           30,  103,  138,   60,  140,   71,   88,   60,   71,   91,
           92,   93,   61,    7,   96,   97,  141,   99,  120,  121,
          102,  103,   69,  133,  137,  138,  136,  109,    8,    9,
           10,   30,  142,  141,   64,    8,    9,   10,   71,   69,
          142,  137,  138,   73,  130,  131,   76,   77,   69,   79,
           74,   81,   69,   26,   27,  137,  138,  138,   88,  140,
            7,   91,   92,   93,   74,   64,   96,   97,   87,   99,
           69,   60,  102,  103,   73,  138,  142,   76,   77,  109,
           79,  138,   81,   41,   42,   43,  139,  137,  138,   88,
          137,  140,   91,   92,   93,  137,    7,   96,   97,   74,
           99,  137,  138,  102,  103,  129,    7,  137,  138,  142,
          109,  137,    7,   64,    8,    9,   10,  138,   69,  129,
            7,  138,   73,    7,    7,   76,   77,    7,   79,  118,
           81,   12,   26,   27,   28,   29,   12,   88,  137,  138,
           91,   92,   93,  137,   64,   96,   97,   12,   99,   69,
           12,  102,  103,   73,  129,   12,   76,   77,  109,   79,
           12,   81,   25,   71,   24,   24,   24,   60,   88,   24,
           90,   91,   92,   93,   30,   48,   96,   97,   60,   99,
           66,   60,  102,  103,   61,   74,  137,  138,   86,  109,
          141,   69,   64,   83,   69,  103,   87,   69,   70,   69,
           69,   73,   69,   69,   76,   77,   74,   79,   69,   81,
           74,  113,  120,  121,  113,   69,   88,  137,  138,   91,
           92,   93,   69,   64,   96,   97,   69,   99,   69,   69,
          102,  103,   73,  141,  142,   76,   77,  109,   79,   69,
           81,   69,   69,   69,   69,   83,   83,   88,   71,   71,
           91,   92,   93,   71,   71,   96,   97,   71,   99,   83,
           89,  102,  103,   94,   98,  137,  138,   87,  109,  101,
          116,   64,    8,    9,   10,   94,   69,  116,  129,  100,
           73,  117,  132,   76,   77,  118,   79,  132,   81,  137,
           26,   27,   28,  137,  136,   88,  137,  138,   91,   92,
           93,  136,   64,   96,   97,  118,   99,   69,  118,  102,
          103,   73,  119,  119,   76,   77,  109,   79,   -1,   81,
          132,  132,  137,  132,  132,  141,   88,  132,  132,   91,
           92,   93,  132,  136,   96,   97,  137,   99,  137,  137,
          102,  103,  137,  137,  137,  138,  137,  109,  137,  137,
           64,  137,  137,  137,  137,   69,  137,  137,  137,   73,
          137,  139,   76,   77,  138,   79,  138,   81,  138,  138,
          138,   41,   42,  138,   88,  137,  138,   91,   92,   93,
          138,  138,   96,   97,  138,   99,  138,  138,  102,  103,
           60,  139,  139,  139,  139,  109,  139,   67,   68,  139,
          139,   71,  139,  141,  139,   75,   12,   13,   14,   15,
           16,   17,   18,   19,   20,   21,   22,   23,  139,  139,
          139,   94,   95,  137,  138,  140,  139,  100,  139,  139,
           -1,  104,  105,  140,  140,  140,  140,  140,  140,  112,
          113,  114,  115,  140,   50,   51,  140,  140,  140,  140,
          120,  140,  122,  123,  124,  125,  126,  127,  128,  140,
          133,  140,  140,  140,  134,  135,  139,  141,   94,   95,
          141,  140,  142,  140,  100,  140,  140,  140,  104,  105,
          140,   94,  140,  140,  140,   95,  112,  113,  114,  115,
          100,  104,  105,  103,  104,  105,  106,  107,  108,  112,
          113,  114,  115,  140,  140,  140,   95,  133,  140,  143,
          141,  100,  118,  139,  103,  104,  105,  106,  107,  108,
          141,  141,  141,   95,  141,  141,  139,  141,  100,  139,
          140,  103,  104,  105,  106,  107,  108,   94,   95,  141,
          141,  141,   94,  100,  141,  141,  141,  104,  105,  141,
          139,  140,  104,  105,   94,  112,  113,  114,  115,   94,
          112,  113,  114,  115,  104,  105,  141,  139,  140,  104,
          105,   94,  112,  113,  114,  115,  133,  112,  113,  114,
          115,  104,  105,  141,  143,  141,  141,  139,  141,  112,
          113,  114,  115,  141,  141,  141,  141,  141,  141,  139,
           94,  143,  141,  141,  139,  141,  143,  141,   -1,   -1,
          104,  105,   94,   78,  143,  143,  139,   94,  112,  113,
          114,  115,  104,  105,  143,  143,  143,  104,  105,   94,
          112,  113,  114,  115,  143,  112,  113,  114,  115,  104,
          105,   80,  143,   -1,  144,  139,   -1,  112,  113,  114,
          115,   -1,   -1,   -1,   -1,   94,   -1,  139,   -1,   -1,
           -1,   -1,  139,   -1,   -1,  104,  105,   -1,   -1,   -1,
           -1,   -1,   -1,  112,  113,  114,  115
    );

    protected static $yybase = array(
            0,  547,  594,  663,  668,  607,  755,   -1,  781,  680,
          685,  697,  726,  738,  743,  361,  362,  365,  365,  365,
          365,  357,   -2,   -2,  138,  138,  190,  190,  190,  190,
          190,  190,  190,  190,  300,  138,  190,  300,  427,  458,
          506,  269,  348,  107,  221,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
          379,  379,  379,  379,  112,  322,  431,  414,  432,  434,
          435,  436,  677,  681,  682,  673,  665,  675,  481,  483,
          485,  499,  500,  676,  501,  507,  480,  509,  719,  510,
          334,  667,  437,  672,  674,  664,  664,  119,  119,  119,
          119,  119,  119,  119,  119,  119,  119,   11,   34,  240,
          240,  240,  240,  240,  240,  240,  240,  240,  240,  240,
          240,  240,  240,  240,   12,  550,  550,  550,  550,  550,
          550,  550,  550,  550,  550,  550,  247,  484,  326,  164,
           -3,   -3,   -3,   -3,  610,  631,  648,  614,  -25,  -25,
          -25,  -25,  171,   42,  139,  157,  588,  588,  588,  588,
          588,  588,  588,  588,  588,  588,  588,  588,  402,  373,
          262,  262,  110,  110,  312,  312,  312,  312,  312,  118,
          210,  245,  -28,   27,  331,  203,  203,  203,  352,  369,
          356,    1,  199,   39,   39,   39,  -27,  -27,  -27,  -27,
          446,  -27,  -27,  -27,  -56,  134,  134,  106,  -74,  184,
          420,   84,  -19,  170,  417,   45,  389,  417,   40,  477,
           45,  474,  475,  124,  375,  163,   81,  359,  440,  383,
          178,  194,  226,  231,    3,  154,  201,   95,  396,  684,
          686,  167,  196,    3,  441,  443,   71,  439,  173,  364,
          351,  354,  386,  351,  364,  527,  364,  377,  364,  343,
          103,  516,  377,  364,  374,  377,  560,  351,  397,  381,
          364,  354,  448,  364,  384,  376,  399,  319,  386,  399,
          364,  402,    8,  528,  529,  360,  531,  551,  585,  539,
          350,  450,  318,  321,  553,  555,  556,  353,  342,  505,
          385,  345,  327,  409,  514,  515,  338,  407,  541,  389,
          378,  347,  387,  513,  411,  387,  586,  412,  370,  410,
          405,  344,  355,  451,  385,  589,  720,  380,  557,  589,
          387,  158,  358,  562,  390,  387,  563,  387,  603,  452,
          604,  392,  442,  385,  341,  347,  347,  347,  606,  273,
          661,  517,  618,  619,  678,  683,  620,  691,  518,  692,
          517,  623,  701,  329,  546,  325,  543,  375,  415,  393,
          419,  333,  702,  387,  387,  624,  446,  357,  387,  599,
          398,  413,  703,  369,  394,  583,  549,  387,  408,  339,
          401,  711,  455,  625,  523,  628,  400,  462,  584,  463,
          363,  645,  368,  472,  333,  542,  421,  422,  526,  403,
          466,  366,  473,  336,  372,  662,  404,  406,  600,  564,
          425,  309,  601,  468,  330,  416,  388,  382,  336,  469,
          395,  482,  426,  429,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,    0,    0,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,  119,  119,  119,
          119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
          119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
          119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
          119,  119,  119,  119,  119,  119,  119,  119,  110,  110,
          110,  110,  110,  110,  110,  110,  110,  110,  110,  119,
          119,  119,  119,  119,  119,  119,  119,  110,  110,  110,
            0,   39,   39,   39,   39,  110,  110,  110,  -71,  110,
          110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
          110,  -71,  -71,   39,   39,    0,    0,  110,  110,  110,
          110,  110,  110,  134,  134,  134,  110,  134,  187,  187,
          187,  134,  134,  134,  154,  154,    0,    0,    0,  110,
          110,  110,  110,  187,  110,  110,  110,  377,    0,    0,
            0,  187,  333,    3,    0,    0,  385,  377,    0,  397,
          377,    0,  402,    0,  391,  391,    0,  513,    0,    0,
          557,  337,  385,    0,    0,    0,    0,    0,    0,    0,
            0,  385,  340,  340,    0,    0,    0,  337,  336,    0,
          333
    );

    protected static $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  347,  347,  118,  118,  118,  118,
          118,  118,  118,  118,32767,  310,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,  342,  342,  342,  342,
          342,  342,  342,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,   65,32767,  352,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  170,  169,  226,  227,  229,
          230,  170,  121,  343,  351,  169,   66,  195,  197,  244,
          196,  173,  178,  179,  180,  181,  182,  183,  184,  185,
          186,  187,  188,  172,  193,  307,  307,  310,32767,32767,
        32767,32767,32767,32767,32767,32767,  194,  198,  200,  199,
          215,  216,  213,  214,32767,32767,32767,  171,  217,  218,
          219,  220,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          207,  208,  270,  270,  113,  113,  113,  113,  113,  113,
        32767,32767,32767,32767,  278,32767,32767,32767,32767,32767,
          280,32767,32767,  202,  203,  201,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  279,32767,32767,32767,32767,
          328,  315,  266,32767,32767,32767,  259,32767,  103,32767,
        32767,32767,32767,32767,  296,  333,32767,32767,32767,   17,
        32767,32767,32767,  359,  328,32767,  326,32767,   19,32767,
        32767,32767,32767,  332,32767,32767,32767,32767,32767,   61,
        32767,32767,32767,32767,   61,  275,   61,32767,   61,32767,
          309,  281,32767,   61,   76,32767,  105,32767,32767,   74,
           61,32767,32767,   61,   78,   91,  248,  309,   52,  248,
           61,32767,32767,32767,32767,    4,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          261,32767,  317,32767,  331,  330,  318,32767,32767,  259,
        32767,  211,  190,  260,32767,  192,32767,32767,  264,  267,
        32767,32767,  130,32767,  262,  176,32767,32767,32767,32767,
          354,  242,32767,32767,32767,  126,32767,   59,  326,32767,
        32767,32767,  326,  263,  327,  204,  205,  206,32767,  117,
        32767,  304,32767,32767,32767,32767,32767,32767,  321,32767,
        32767,32767,32767,  326,32767,  107,32767,  296,32767,32767,
        32767,   77,32767,  174,  122,32767,32767,32767,  353,32767,
        32767,  314,32767,32767,32767,32767,32767,   60,  162,  326,
          134,32767,32767,32767,32767,32767,  326,32767,32767,32767,
          111,32767,  167,32767,   79,32767,32767,32767,32767,32767,
        32767,32767,32767,  156,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,    4,32767,  148,32767,  157,32767,
        32767,32767,32767,32767,   25,   25,    3,  133,    3,  133,
          100,   25,   25,   91,  133,   25,   25,   25,  141,   25,
           25,   25,   25
    );

    protected static $yygoto = array(
          137,  137,  172,  172,  172,  172,  172,  172,  172,  172,
          165,  137,  172,  166,  138,  139,  140,  144,  148,  181,
          174,  171,  173,  173,  173,  173,  173,  173,  173,  167,
          168,  169,  170,  179,  732,  733,  381,  735,  754,  755,
          756,  757,  758,  759,  760,  762,  700,  141,  142,  143,
          145,  146,  147,  149,  177,  178,  180,  194,  206,  207,
          208,  209,  210,  211,  212,  213,  218,  219,  220,  221,
          240,  241,  263,  264,  265,  415,  416,  417,  182,  183,
          184,  185,  186,  187,  188,  189,  190,  191,  192,  150,
          151,  152,  153,  154,  175,  155,  156,  157,  193,  134,
          158,  159,  160,  161,  135,  162,  746,  163,  164,  176,
          437,  437,  437,  437,  437,  437,  437,  437,  437,  437,
          437,  546,  654,  611,  822,  823,  836,  635,  691,  383,
          383,  383,  445,  449,  456,  501,  260,  383,  383,  383,
          252,  383,  383,  383,  383,  383,  383,  383,  383,  383,
          383,  383,  383,  410,    1,  395,    2,  783,  783,  637,
          637,  637,  637,  637,  637,  530,  530,  530,  495,  820,
          820,  820,  820,  820,  820,  820,  820,  820,  820,  820,
          215,  603,  603,  603,  603,  216,  598,  604,  479,  384,
          384,  384,  531,  531,  531,  854,  854,  384,  384,  384,
          872,  384,  384,  384,  384,  384,  384,  384,  384,  384,
          384,  384,  384,  459,  459,  459,  643,  387,  387,  389,
          389,  443,  306,  405,  483,  407,  407,  382,  385,  400,
          408,  412,  433,  444,  448,  457,  466,  438,  438,  438,
          438,  438,  438,  438,  438,  438,  438,  438,  529,  529,
          529,  422,  423,  426,  431,  463,  465,  485,  304,  304,
          304,  283,  621,  607,  605,  605,  605,  605,  510,  627,
          625,  299,  617,  304,  299,  498,    5,  570,  571,  572,
          471,  313,    6,    7,  388,  388,    8,    9,   10,  296,
           11,   12,   13,   14,  678,  853,  853,  424,  425,  427,
          429,  432,  461,  878,  878,  698,  834,  482,  869,  869,
          869,  881,  878,  310,  394,  279,  474,  317,  297,  308,
          398,  318,  413,  852,  744,  406,  633,  881,  881,  795,
          794,  538,  237,  646,  314,  450,  774,  610,  544,  580,
          651,  831,  481,  292,  480,    0,    0,    0,  689,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,  399
    );

    protected static $yygcheck = array(
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
           33,   12,   12,   12,   12,   12,   12,   12,   12,   33,
           33,   33,   34,   34,   34,   34,   90,   33,   33,   33,
           90,   33,   33,   33,   33,   33,   33,   33,   33,   33,
           33,   33,   33,   69,    2,   70,    2,   33,   33,   33,
           33,   33,   33,   33,   33,    6,    6,    6,   33,   91,
           91,   91,   91,   91,   91,   91,   91,   91,   91,   91,
           39,   33,   33,   33,   33,   39,   33,   33,   33,   80,
           80,   80,    7,    7,    7,   81,   81,   80,   80,   80,
          101,   80,   80,   80,   80,   80,   80,   80,   80,   80,
           80,   80,   80,   24,   24,   24,   53,   80,   80,   87,
           87,   24,   24,   24,   66,   24,   24,   24,   24,   24,
           24,   24,   24,   24,   24,   24,   24,   84,   84,   84,
           84,   84,   84,   84,   84,   84,   84,   84,    5,    5,
            5,   51,   51,   51,   51,   51,   51,   51,   88,   88,
           88,    4,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    4,   46,   88,    4,   66,   13,   25,   25,   25,
           92,   88,   13,   13,   84,   84,   13,   13,   13,   22,
           13,   13,   13,   13,   57,   82,   82,   83,   83,   83,
           83,   83,   83,  102,  102,   70,   95,   57,   82,   82,
           82,  102,  102,   23,    4,   41,   41,   41,   26,    4,
           26,   64,    4,   82,   71,   26,   49,  102,  102,   89,
           89,   10,   26,   54,    9,   26,   78,   42,   11,   32,
           55,   94,   26,   43,   75,   -1,   -1,   -1,   68,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   70
    );

    protected static $yygbase = array(
            0,    0, -352,    0,  -13,  247,  164,  191,    0,   11,
           44,    1,  -77, -229,    0,  -24,    0,    0,    0,    0,
            0,    0,  244,   86,   -1,  259,   -8,    0,    0,    0,
            0,    0,   -9,  -85, -113,    0,    0,    0,    0, -329,
            0,   48,   -4, -170,    0,    0,  235,    0,    0,   77,
            0,  224,    0,  180,   43,    2,    0,   69,    0,    0,
            0,    0,    0,    0,   82,    0,  -14,    0,   -3,  128,
           83,   81,    0,    0,    0,   -5,    0,    0,   12,    0,
          -25,  -47,   53,  250,   42,    0,    0,  -23,    3,   73,
         -118,  -26,   84,    0,   -6,  109,    0,    0,    0,    0,
            0,  165,   52,    0
    );

    protected static $yygdefault = array(
        -32768,  352,    3,  525,  370,  549,  550,  551,  300,  298,
          539,  545,  451,    4,  547,  136,  288,  554,  555,  556,
          301,  302,  491,  309,  217,  569,  487,  128,  486,  307,
          573,  348,  579,  294,  434,  371,  339,  344,  462,  214,
          409,  441,  609,  291,  615,  492,  618,  624,  435,  632,
          343,  418,  419,  642,  647,  652,  655,  460,  659,  660,
          253,  665,  496,  497,  225,  675,  315,  484,  688,  386,
          699,  331,  761,  763,  396,  469,  770,  316,  773,  372,
          373,  374,  375,  420,  791,  788,  282,  839,  280,  428,
          251,  826,  452,  347,  871,  835,  281,  376,  377,  295,
          330,  873,  880,  442
    );

    protected static $yylhs = array(
            0,    1,    2,    2,    4,    4,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    8,    8,   10,   10,   10,
           10,    9,    9,   11,   13,   13,   14,   14,   14,   14,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,   31,   31,   32,   23,
           23,   26,   26,   27,   27,   28,   28,    6,    7,    7,
            7,   35,   35,   35,   37,   37,   40,   40,   38,   38,
           41,   41,   25,   25,   30,   30,   29,   29,   42,   19,
           19,   43,   43,   44,   45,   45,   46,   46,   18,   18,
           16,   16,   47,   17,   17,   36,   36,   34,   34,   48,
           48,   49,   49,   50,   50,   50,   50,   51,   51,   52,
           52,   53,   53,   20,   20,   54,   54,   54,   21,   21,
           55,   55,   39,   39,   56,   56,   56,   56,   56,   59,
           59,   60,   60,   61,   61,   61,   61,   62,   63,   63,
           58,   58,   57,   57,   57,   57,   67,   67,   65,   64,
           64,   64,   64,   64,   64,   66,   66,   68,   68,   22,
           22,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   70,   75,   75,
           77,   77,   78,   79,   79,   79,   79,   79,   79,   84,
           84,   33,   33,   33,   71,   71,   85,   85,   80,   80,
           86,   86,   86,   86,   86,   72,   72,   72,   74,   74,
           74,   76,   76,   91,   91,   91,   91,   91,   91,   91,
           91,   91,   91,   91,   91,   91,   91,   12,   12,   12,
           12,   12,   12,   73,   73,   73,   73,   92,   92,   94,
           94,   93,   93,   95,   95,   24,   24,   24,   24,   97,
           97,   96,   96,   96,   96,   96,   98,   98,   82,   82,
           87,   87,   81,   81,   99,   99,   99,   99,   88,   88,
           88,   88,   83,   83,   89,   89,   89,   69,   69,  100,
          100,  101,  101,  101,  101,   90,   90,   90,   90,  102,
          102,  102,  102,  102,  102,  102,  103,  103,  103
    );

    protected static $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            3,    5,    4,    3,    3,    3,    1,    1,    3,    2,
            4,    3,    1,    3,    2,    0,    1,    1,    1,    1,
            3,    7,    5,    5,    2,    3,    2,    3,    2,    3,
            3,    3,    3,    1,    2,    5,    7,    8,   10,   10,
            5,    1,    5,    3,    3,    2,    1,    2,    8,    1,
            3,    0,    1,    1,    1,    0,    2,    9,    8,    6,
            5,    1,    2,    2,    0,    2,    0,    2,    0,    2,
            1,    3,    1,    4,    1,    4,    1,    3,    3,    3,
            4,    0,    2,    7,    3,    1,    1,    1,    1,    4,
            0,    2,    5,    0,    2,    0,    3,    1,    0,    1,
            3,    3,    5,    0,    1,    1,    1,    1,    0,    1,
            3,    1,    2,    3,    1,    1,    2,    4,    3,    1,
            1,    3,    2,    0,    1,    3,    8,    3,    4,    1,
            3,    0,    2,    4,    5,    4,    4,    3,    1,    1,
            1,    3,    2,    3,    4,    2,    1,    3,    4,    1,
            1,    1,    1,    1,    1,    1,    3,    1,    3,    3,
            1,    1,    5,    3,    4,    4,    1,    2,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
            2,    2,    2,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
            2,    2,    2,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    8,    4,    4,    2,    2,    4,    2,
            2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
            1,    4,    3,    3,    2,    9,   10,    3,    0,    4,
            1,    3,    2,    4,    6,    8,    4,    4,    4,    1,
            1,    1,    2,    3,    1,    1,    1,    1,    1,    1,
            0,    3,    3,    4,    4,    0,    2,    3,    0,    1,
            1,    0,    3,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    3,    2,    1,    1,    3,    2,
            2,    4,    3,    1,    3,    3,    3,    0,    2,    0,
            1,    3,    1,    3,    1,    1,    1,    1,    1,    6,
            4,    3,    6,    4,    4,    4,    1,    3,    1,    2,
            1,    1,    4,    1,    3,    6,    4,    4,    4,    4,
            1,    4,    0,    1,    1,    3,    1,    0,    2,    3,
            1,    3,    1,    4,    2,    2,    2,    1,    2,    1,
            4,    3,    3,    3,    6,    3,    1,    1,    1
    );

    protected $yyval;
    protected $yyastk;
    protected $yysp;
    protected $lexer;

    /**
     * Parses PHP code into a node tree.
     *
     * @param PHPParser_Lexer $lexer A lexer
     *
     * @return array Array of statements
     */
    public function parse(PHPParser_Lexer $lexer) {
        $this->lexer  = $lexer;

        $this->yysp   = 0;                   // Stack pos
        $yysstk       = array($yystate = 0); // State stack
        $this->yyastk = array();             // AST   stack (?)
        $yylstk       = array($yyline  = 1); // Line  stack
        $yydstk       = array($yyDC = null); // Doc comment stack

        $yychar       = -1;

        for (;;) {
            if (self::$yybase[$yystate] == 0) {
                $yyn = self::$yydefault[$yystate];
            } else {
                if ($yychar < 0) {
                    if (($yychar = $lexer->lex($yylval, $yyline, $yyDC)) < 0)
                        $yychar = 0;
                    $yychar = $yychar < self::YYMAXLEX ?
                        self::$yytranslate[$yychar] : self::YYBADCH;
                    $yylstk[$this->yysp] = $yyline;
                    $yydstk[$this->yysp] = $yyDC;
                }
                if ((($yyn = self::$yybase[$yystate] + $yychar) >= 0
                     && $yyn < self::YYLAST && self::$yycheck[$yyn] == $yychar
                     || ($yystate < self::YY2TBLSTATE
                        && ($yyn = self::$yybase[$yystate + self::YYNLSTATES]
                            + $yychar) >= 0
                        && $yyn < self::YYLAST
                        && self::$yycheck[$yyn] == $yychar))
                    && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT) {
                    /*
                     * >= YYNLSTATE: shift and reduce
                     * > 0: shift
                     * = 0: accept
                     * < 0: reduce
                     * = -YYUNEXPECTED: error
                     */
                    if ($yyn > 0) {
                        /* shift */
                        ++$this->yysp;

                        $yysstk[$this->yysp]       = $yystate = $yyn;
                        $this->yyastk[$this->yysp] = $yylval;
                        $yylstk[$this->yysp]       = $yyline;
                        $yydstk[$this->yysp]       = $yyDC;
                        $yychar = -1;

                        if ($yyn < self::YYNLSTATES)
                            continue;

                        /* $yyn >= YYNLSTATES means shift-and-reduce */
                        $yyn -= self::YYNLSTATES;
                    } else {
                        $yyn = -$yyn;
                    }
                } else {
                    $yyn = self::$yydefault[$yystate];
                }
            }

            for (;;) {
                /* reduce/error */
                if ($yyn == 0) {
                    /* accept */
                    return $this->yyval;
                } elseif ($yyn != self::YYUNEXPECTED) {
                    /* reduce */
                    try {
                        $this->{'yyn' . $yyn}(
                            $yylstk[$this->yysp - self::$yylen[$yyn]],
                            $yydstk[$this->yysp - self::$yylen[$yyn]]
                        );
                    } catch (PHPParser_Error $e) {
                        if (-1 === $e->getRawLine()) {
                            $e->setRawLine($yyline);
                        }

                        throw $e;
                    }

                    /* Goto - shift nonterminal */
                    $this->yysp -= self::$yylen[$yyn];
                    $yyn = self::$yylhs[$yyn];
                    if (($yyp = self::$yygbase[$yyn] + $yysstk[$this->yysp]) >= 0
                         && $yyp < self::YYGLAST
                         && self::$yygcheck[$yyp] == $yyn) {
                        $yystate = self::$yygoto[$yyp];
                    } else {
                        $yystate = self::$yygdefault[$yyn];
                    }

                    ++$this->yysp;

                    $yysstk[$this->yysp] = $yystate;
                    $this->yyastk[$this->yysp] = $this->yyval;
                    $yylstk[$this->yysp]       = $yyline;
                    $yydstk[$this->yysp]       = $yyDC;
                } else {
                    /* error */
                    throw new PHPParser_Error(
                        'Unexpected token ' . self::$yyterminals[$yychar],
                        $yyline
                    );
                }

                if ($yystate < self::YYNLSTATES)
                    break;
                /* >= YYNLSTATES means shift-and-reduce */
                $yyn = $yystate - self::YYNLSTATES;
            }
        }
    }

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn1($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Namespace::postprocess($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn2($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn3($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn4($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn5($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn6($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn7($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn8($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn9($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_HaltCompiler($this->lexer->handleHaltCompiler(), $line, $docComment); 
    }

    protected function yyn10($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn11($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(5-2)], $line, $docComment), $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn12($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn13($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Use($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn14($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Const($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn15($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn16($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn17($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn18($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-1)], $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn19($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(2-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn20($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(4-2)], $line, $docComment), $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn21($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn22($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn23($line, $docComment) {
         $this->yyval = new PHPParser_Node_Const($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn24($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn25($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn26($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn27($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn28($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn29($line, $docComment) {
         throw new PHPParser_Error('__halt_compiler() can only be used from the outermost scope'); 
    }

    protected function yyn30($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn31($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(7-3)], array('stmts' => is_array($this->yyastk[$this->yysp-(7-5)]) ? $this->yyastk[$this->yysp-(7-5)] : array($this->yyastk[$this->yysp-(7-5)]), 'elseifs' => $this->yyastk[$this->yysp-(7-6)], 'else' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn32($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_While($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn33($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Switch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn34($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break(null, $line, $docComment); 
    }

    protected function yyn35($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn36($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue(null, $line, $docComment); 
    }

    protected function yyn37($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn38($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return(null, $line, $docComment); 
    }

    protected function yyn39($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn40($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Global($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn41($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Static($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn42($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Echo($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn43($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_InlineHTML($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn44($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn45($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Unset($this->yyastk[$this->yysp-(5-3)], $line, $docComment); 
    }

    protected function yyn46($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-3)], array('keyVar' => null, 'byRef' => false, 'stmts' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn47($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-4)], array('keyVar' => null, 'byRef' => true, 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn48($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(10-8)], $this->yyastk[$this->yysp-(10-6)], array('keyVar' => $this->yyastk[$this->yysp-(10-3)], 'byRef' => $this->yyastk[$this->yysp-(10-5)], 'stmts' => $this->yyastk[$this->yysp-(10-10)]), $line, $docComment); 
    }

    protected function yyn49($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ForNumeric($this->yyastk[$this->yysp-(10-3)], $this->yyastk[$this->yysp-(10-5)], $this->yyastk[$this->yysp-(10-7)], $this->yyastk[$this->yysp-(10-10)], $this->yyastk[$this->yysp-(10-6)], $this->yyastk[$this->yysp-(10-8)], $line, $docComment); 
    }

    protected function yyn50($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Declare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn51($line, $docComment) {
         $this->yyval = array(); /* means: n statement */ 
    }

    protected function yyn52($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TryCatch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn53($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Throw($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn54($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Goto($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn55($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Label($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn56($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn57($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn58($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Catch($this->yyastk[$this->yysp-(8-3)], substr($this->yyastk[$this->yysp-(8-4)], 1), $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn59($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn60($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn61($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn62($line, $docComment) {
         $this->yyval = true; 
    }

    protected function yyn63($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn64($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn65($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn66($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn67($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Function($this->yyastk[$this->yysp-(9-3)], array('byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-5)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn68($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Class($this->yyastk[$this->yysp-(8-2)], array('type' => $this->yyastk[$this->yysp-(8-1)], 'extends' => $this->yyastk[$this->yysp-(8-4)], 'implements' => $this->yyastk[$this->yysp-(8-5)], 'stmts' => $this->yyastk[$this->yysp-(8-7)], 'parameter_list' => $this->yyastk[$this->yysp-(8-3)]), $line, $docComment); 
    }

    protected function yyn69($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Interface($this->yyastk[$this->yysp-(6-2)], array('extends' => $this->yyastk[$this->yysp-(6-3)], 'stmts' => $this->yyastk[$this->yysp-(6-5)]), $line, $docComment); 
    }

    protected function yyn70($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Trait($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn71($line, $docComment) {
         $this->yyval = 0; 
    }

    protected function yyn72($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn73($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn74($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn75($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn76($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn77($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn78($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn79($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn80($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn81($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn82($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn83($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn84($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn85($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn86($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn87($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn88($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn89($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn90($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn91($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn92($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn93($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Case($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)], $line, $docComment); 
    }

    protected function yyn94($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn95($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn96($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn97($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('default', $line, $docComment); 
    }

    protected function yyn98($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn99($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn100($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn101($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn102($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(5-3)], is_array($this->yyastk[$this->yysp-(5-5)]) ? $this->yyastk[$this->yysp-(5-5)] : array($this->yyastk[$this->yysp-(5-5)]), $line, $docComment); 
    }

    protected function yyn103($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn104($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(is_array($this->yyastk[$this->yysp-(2-2)]) ? $this->yyastk[$this->yysp-(2-2)] : array($this->yyastk[$this->yysp-(2-2)]), $line, $docComment); 
    }

    protected function yyn105($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn106($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn107($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn108($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn109($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn110($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn111($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn112($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $line, $docComment); 
    }

    protected function yyn113($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn114($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn115($line, $docComment) {
         $this->yyval = 'array'; 
    }

    protected function yyn116($line, $docComment) {
         $this->yyval = 'callable'; 
    }

    protected function yyn117($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn118($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn119($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn120($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn121($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(1-1)], false, $line, $docComment); 
    }

    protected function yyn122($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(2-2)], true, $line, $docComment); 
    }

    protected function yyn123($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn124($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn125($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn126($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn127($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn128($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn129($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn130($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn131($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn132($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn133($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn134($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyDeclarations($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn135($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassConst($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn136($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassMethod($this->yyastk[$this->yysp-(8-4)], array('type' => $this->yyastk[$this->yysp-(8-1)], 'byRef' => $this->yyastk[$this->yysp-(8-3)], 'params' => $this->yyastk[$this->yysp-(8-6)], 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn137($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUse($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn138($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignClassProperty($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn139($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn140($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn141($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn142($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn143($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Precedence($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn144($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(5-1)][0], $this->yyastk[$this->yysp-(5-1)][1], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn145($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], null, $line, $docComment); 
    }

    protected function yyn146($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn147($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
    }

    protected function yyn148($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn149($line, $docComment) {
         $this->yyval = array(null, $this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn150($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn151($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn152($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn153($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
    }

    protected function yyn154($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
    }

    protected function yyn155($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn156($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn157($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn158($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(4-2)], $line, $docComment); 
    }

    protected function yyn159($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn160($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED; 
    }

    protected function yyn161($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE; 
    }

    protected function yyn162($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_STATIC; 
    }

    protected function yyn163($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn164($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn165($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn166($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn167($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn168($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn169($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn170($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn171($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn172($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignList($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn173($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn174($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignRef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn175($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn176($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn177($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Clone($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn178($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignPlus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn179($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMinus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn180($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn181($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignDiv($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn182($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignConcat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn183($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn184($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn185($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn186($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn187($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn188($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn189($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostInc($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn190($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreInc($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn191($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostDec($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn192($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreDec($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn193($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn194($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn195($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn196($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn197($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn198($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn199($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn200($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn201($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Concat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn202($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Plus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn203($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Minus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn204($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn205($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Div($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn206($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn207($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn208($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn209($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn210($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn211($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn212($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn213($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Identical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn214($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotIdentical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn215($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Equal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn216($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn217($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Smaller($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn218($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_SmallerOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn219($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Greater($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn220($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_GreaterOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn221($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Instanceof($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn222($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn223($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-8)], $line, $docComment); 
    }

    protected function yyn224($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Isset($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn225($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Empty($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn226($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE, $line, $docComment); 
    }

    protected function yyn227($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE_ONCE, $line, $docComment); 
    }

    protected function yyn228($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Eval($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn229($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE, $line, $docComment); 
    }

    protected function yyn230($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE_ONCE, $line, $docComment); 
    }

    protected function yyn231($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Int($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn232($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Double($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn233($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_String($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn234($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Array($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn235($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Object($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn236($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Bool($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn237($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Unset($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn238($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Exit($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn239($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ErrorSuppress($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn240($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn241($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn242($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn243($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShellExec($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn244($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Print($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn245($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => false, 'byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-4)], 'uses' => $this->yyastk[$this->yysp-(9-6)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn246($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => true, 'byRef' => $this->yyastk[$this->yysp-(10-3)], 'params' => $this->yyastk[$this->yysp-(10-5)], 'uses' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-9)]), $line, $docComment); 
    }

    protected function yyn247($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn248($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn249($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn250($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn251($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn252($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(2-2)], 1), $this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn253($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn254($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn255($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn256($line, $docComment) {
        
            if ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_StaticPropertyFetch) {
                $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(4-1)]->class, new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-1)]->name, $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
            } elseif ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                $tmp = $this->yyastk[$this->yysp-(4-1)];
                while ($tmp->var instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new PHPParser_Node_Expr_StaticCall($tmp->var->class, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
                $tmp->var = new PHPParser_Node_Expr_Variable($tmp->var->name, $line, $docComment);
            } else {
                throw new Exception;
            }
          
    }

    protected function yyn257($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn258($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn259($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('static', $line, $docComment); 
    }

    protected function yyn260($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn261($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn262($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_FullyQualified($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn263($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_Relative($this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn264($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn265($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn266($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn267($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn268($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn269($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn270() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn271($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn272($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn273($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn274($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn275($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn276($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn277($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn278($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn279($line, $docComment) {
         $this->yyval = array(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(1-1)], '`')); 
    }

    protected function yyn280($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(1-1)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn281($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn282($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn283($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber(PHPParser_Node_Scalar_LNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn284($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DNumber(PHPParser_Node_Scalar_DNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn285($line, $docComment) {
         $this->yyval = PHPParser_Node_Scalar_String::create($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn286($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LineConst($line, $docComment); 
    }

    protected function yyn287($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FileConst($line, $docComment); 
    }

    protected function yyn288($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DirConst($line, $docComment); 
    }

    protected function yyn289($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_ClassConst($line, $docComment); 
    }

    protected function yyn290($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_TraitConst($line, $docComment); 
    }

    protected function yyn291($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_MethodConst($line, $docComment); 
    }

    protected function yyn292($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FuncConst($line, $docComment); 
    }

    protected function yyn293($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_NSConst($line, $docComment); 
    }

    protected function yyn294($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String(PHPParser_Node_Scalar_String::parseDocString($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]), $line, $docComment); 
    }

    protected function yyn295($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String('', $line, $docComment); 
    }

    protected function yyn296($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn297($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn298($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn299($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn300($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn301($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn302($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn303($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn304($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn305($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '"'); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn306($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, null); } } $s = preg_replace('~(\r\n|\n|\r)$~', '', $s); if ('' === $s) array_pop($this->yyastk[$this->yysp-(3-2)]);; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn307($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn308($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn309() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn310() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn311($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn312($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn313($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn314($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn315($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn316($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn317($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn318($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn319($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn320($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn321($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn322($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_MethodCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn323($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn324($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn325($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn326($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn327($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn328($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn329($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn330($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn331($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn332($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn333($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn334($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment); 
    }

    protected function yyn335($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn336($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn337($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn338($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn339($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn340($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn341($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn342($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn343($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn344($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn345($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn346($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn347($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn348($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn349($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn350($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn351($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn352($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn353($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-1)], true, $line, $docComment); 
    }

    protected function yyn354($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(2-2)], null, true, $line, $docComment); 
    }

    protected function yyn355($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn356($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn357($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn358($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn359($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn360($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(4-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn361($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(3-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn362($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn363($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn364($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(6-2)], $line, $docComment), $this->yyastk[$this->yysp-(6-4)], $line, $docComment); 
    }

    protected function yyn365($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn366($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn367($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn368($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }
}
