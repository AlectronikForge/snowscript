<?php

/* This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *  * the grammar file grammar/zend_language_parser.phpy
 *  * the parser skeleton grammar/kymacc.php.parser
 *  * the preprocessing script grammar/rebuildParser.php
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */
class PHPParser_Parser
{
    const YYBADCH      = 150;
    const YYMAXLEX     = 390;
    const YYTERMS      = 150;
    const YYNONTERMS   = 106;
    const YYLAST       = 963;
    const YY2TBLSTATE  = 319;
    const YYGLAST      = 426;
    const YYSTATES     = 762;
    const YYNLSTATES   = 519;
    const YYINTERRTOK  = 1;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    // {{{ Tokens
    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_LOGICAL_OR = 262;
    const T_LOGICAL_XOR = 263;
    const T_LOGICAL_AND = 264;
    const T_PRINT = 265;
    const T_PLUS_EQUAL = 266;
    const T_MINUS_EQUAL = 267;
    const T_MUL_EQUAL = 268;
    const T_DIV_EQUAL = 269;
    const T_CONCAT_EQUAL = 270;
    const T_MOD_EQUAL = 271;
    const T_AND_EQUAL = 272;
    const T_OR_EQUAL = 273;
    const T_XOR_EQUAL = 274;
    const T_SL_EQUAL = 275;
    const T_SR_EQUAL = 276;
    const T_DOUBLE_QUESTION_MARK = 277;
    const T_THEN = 278;
    const T_BOOLEAN_OR = 279;
    const T_BOOLEAN_AND = 280;
    const T_IS_EQUAL = 281;
    const T_IS_NOT_EQUAL = 282;
    const T_IS_IDENTICAL = 283;
    const T_IS_NOT_IDENTICAL = 284;
    const T_IS_SMALLER_OR_EQUAL = 285;
    const T_IS_GREATER_OR_EQUAL = 286;
    const T_SL = 287;
    const T_SR = 288;
    const T_INSTANCEOF = 289;
    const T_INC = 290;
    const T_DEC = 291;
    const T_INT_CAST = 292;
    const T_DOUBLE_CAST = 293;
    const T_STRING_CAST = 294;
    const T_ARRAY_CAST = 295;
    const T_OBJECT_CAST = 296;
    const T_BOOL_CAST = 297;
    const T_UNSET_CAST = 298;
    const T_NEW = 299;
    const T_CLONE = 300;
    const T_EXIT = 301;
    const T_IF = 302;
    const T_ELSEIF = 303;
    const T_ELSE = 304;
    const T_ENDIF = 305;
    const T_LNUMBER = 306;
    const T_DNUMBER = 307;
    const T_STRING = 308;
    const T_STRING_VARNAME = 309;
    const T_VARIABLE = 310;
    const T_NUM_STRING = 311;
    const T_INLINE_HTML = 312;
    const T_CHARACTER = 313;
    const T_BAD_CHARACTER = 314;
    const T_ENCAPSED_AND_WHITESPACE = 315;
    const T_STRING_SINGLE = 316;
    const T_STRING_DOUBLE = 317;
    const T_ECHO = 318;
    const T_DO = 319;
    const T_WHILE = 320;
    const T_ENDWHILE = 321;
    const T_ENDFOR = 322;
    const T_FOR = 323;
    const T_ENDFOREACH = 324;
    const T_DECLARE = 325;
    const T_ENDDECLARE = 326;
    const T_AS = 327;
    const T_TO = 328;
    const T_DOWNTO = 329;
    const T_STEP = 330;
    const T_IN = 331;
    const T_SWITCH = 332;
    const T_ENDSWITCH = 333;
    const T_CASE = 334;
    const T_DEFAULT = 335;
    const T_BREAK = 336;
    const T_CONTINUE = 337;
    const T_GOTO = 338;
    const T_FUNCTION = 339;
    const T_CONST = 340;
    const T_RETURN = 341;
    const T_TRY = 342;
    const T_CATCH = 343;
    const T_THROW = 344;
    const T_USE = 345;
    const T_INSTEADOF = 346;
    const T_GLOBAL = 347;
    const T_STATIC = 348;
    const T_ABSTRACT = 349;
    const T_FINAL = 350;
    const T_PRIVATE = 351;
    const T_PROTECTED = 352;
    const T_PUBLIC = 353;
    const T_VAR = 354;
    const T_UNSET = 355;
    const T_ISSET = 356;
    const T_EMPTY = 357;
    const T_HALT_COMPILER = 358;
    const T_CLASS = 359;
    const T_TRAIT = 360;
    const T_INTERFACE = 361;
    const T_EXTENDS = 362;
    const T_IMPLEMENTS = 363;
    const T_OBJECT_OPERATOR = 364;
    const T_DOUBLE_ARROW = 365;
    const T_LIST = 366;
    const T_ARRAY = 367;
    const T_CALLABLE = 368;
    const T_CLASS_C = 369;
    const T_TRAIT_C = 370;
    const T_METHOD_C = 371;
    const T_FUNC_C = 372;
    const T_LINE = 373;
    const T_FILE = 374;
    const T_COMMENT = 375;
    const T_DOC_COMMENT = 376;
    const T_OPEN_TAG = 377;
    const T_OPEN_TAG_WITH_ECHO = 378;
    const T_CLOSE_TAG = 379;
    const T_WHITESPACE = 380;
    const T_START_HEREDOC = 381;
    const T_END_HEREDOC = 382;
    const T_DOLLAR_OPEN_CURLY_BRACES = 383;
    const T_CURLY_OPEN = 384;
    const T_PAAMAYIM_NEKUDOTAYIM = 385;
    const T_NAMESPACE = 386;
    const T_NS_C = 387;
    const T_DIR = 388;
    const T_NS_SEPARATOR = 389;
    // }}}

    protected static $yyterminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "'?'",
        "T_DOUBLE_QUESTION_MARK",
        "T_THEN",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_STRING_SINGLE",
        "T_STRING_DOUBLE",
        "T_ECHO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_TO",
        "T_DOWNTO",
        "T_STEP",
        "T_IN",
        "T_SWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "':'",
        "'$'",
        "']'",
        "'`'",
        "'\"'"
        , "???"
    );

    protected static $yytranslate = array(
            0,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,   48,  149,  150,  146,   47,   31,  150,
          143,  144,   45,   42,    7,   43,   44,   46,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  145,  140,
           36,   12,   38,   24,   60,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,   61,  150,  147,   30,  150,  148,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  141,   29,  142,   50,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
          150,  150,  150,  150,  150,  150,    1,    2,    3,    4,
            5,    6,    8,    9,   10,   11,   13,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   25,   26,   27,
           28,   32,   33,   34,   35,   37,   39,   40,   41,   49,
           51,   52,   53,   54,   55,   56,   57,   58,   59,   62,
           63,   64,   65,   66,   67,  150,   68,   69,   70,   71,
           72,   73,   74,  150,  150,   75,   76,   77,   78,  150,
           79,   80,  150,   81,   82,   83,   84,   85,   86,   87,
           88,   89,   90,  150,   91,   92,   93,   94,   95,   96,
           97,   98,   99,  100,  101,  102,  103,  104,  105,  106,
          107,  108,  109,  110,  111,  112,  113,  114,  115,  116,
          117,  118,  119,  120,  121,  122,  150,  123,  124,  125,
          126,  127,  128,  129,  130,  150,  150,  150,  150,  150,
          150,  131,  132,  133,  134,  135,  136,  137,  138,  139
    );

    protected static $yyaction = array(
           53,   54,  351,   55,   56,-32766,-32766,-32766,  340,   57,
          686,  687,  688,  685,  684,  683,  640,-32766,-32766,-32766,
          236,-32766,-32766,  279,-32766,-32766,-32766,-32766,-32766,-32767,
        -32767,-32767,-32767,-32766,-32766,  420,-32766,-32766,-32766,-32766,
           58,   59,  895,  304,  897,  896,   60,    0,   61,  231,
          232,   62,   63,   64,   65,   66,   67,   68,   69,   24,
          245,   70,  326,  352,  582,  583,  811,  812,  353,  885,
          869,   48,  562,  325,  813,  814,   45,  354,  120,  355,
          239,  356,  475,  410,-32766,-32766,-32766,  336,  357,  502,
          228,   38,   39,  358,  329,  261,   40,  359,  327,   71,
        -32766,-32766,  287,  288,   42,  235,  122,  274,  360,  361,
          362,  363,  364,-32766,-32766,-32766,-32766,  548,  590,  365,
          366,  367,   17,  818,  819,  820,  821,  815,  816,  252,
        -32766,-32766,  330,-32766,  378,  822,  817,  328,  570,  500,
           51,   72,   37,  834,  272,   16,  256,  260,   78,   79,
           80,  116,  824,   29,  237,-32767,-32767,-32767,-32767,   96,
           97,   98,   99,  100,   81,   82,-32766,   83,   84,   85,
           86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
           96,   97,   98,   99,  100,  101,  102,  103,  376,  246,
          101,  102,  103,  523,  246,  291,  869,-32766,  233,-32766,
          258,-32766,-32766,  198,-32766,  339,-32766,-32766,-32766,-32766,
          777,  561,  491,-32766,-32766,  208,-32766,-32766,-32766,   50,
          119,-32766,-32766,-32766,-32766,  337,-32766,-32766,  377,   98,
           99,  100,  376,  327,  321,-32766,  126,  523,  338,  286,
        -32766,-32766,  238,  360,  361,-32766,-32766,-32766,-32766,  251,
        -32766,  349,  528,  590,  365,  366,-32766,-32766,  289,-32766,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,   47,-32766,  863,
          272,-32766,  377,  276,  630,  631,  376,  630,  631,-32766,
          451,  523,  245,  885,  664,-32766,  226,  125,-32766,-32766,
        -32766,  499,-32766,   36,-32766, -104,  523,-32766,  869,  117,
        -32766,-32766,   35,  873,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,  128,-32766,  127,  124,-32766,  377,  892,  444,  429,
          376,  199,  121,-32766,  330,  523,-32766,-32766,  559,-32766,
          246,  787,  200,-32766,-32766,  201,-32766,  824,-32766,  205,
          835,  474,   22,  280,  206,-32766,  207,  115,-32766,-32766,
        -32766,-32766,-32766,-32766,-32766,  581,-32766,   46,  533,-32766,
          377,  669,  378,  330,  376,  328,   52,-32766,   49,  523,
          245,  560,  272,-32766,  123,  674,  518,-32766,-32766,  131,
        -32766,  524,-32766,  537,  655,  663,  514,  529,  504,-32766,
          122,  532,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  523,
        -32766,  890,  469,-32766,  377,  498,  539,  486,  376,  827,
          671,-32766,  335,  523,  388,  389,  391,-32766,  396,  401,
          402,-32766,-32766,  472,-32766,  485,-32766,  780,  390,  277,
          132,  271,  278,-32766,  885,  612,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,  804,-32766, -154,  242,-32766,  377,  438,
          403,  134,  376,  477,  334,-32766,  129,  523,  312,  257,
         -277,-32766, -131,  591,  348,-32766,-32766,  512,-32766,  453,
        -32766,  202,  203,  467,   44,  864,    0,-32766,    0,    0,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,    0,-32766,  592,
          196,-32766,  377,  268,  204,    0, -336,  811,  812,-32766,
          259,-32766,  823,    0,  376,  813,  814,    0,    0,  523,
            0, -269, -278,-32766,    0,  496,  452,-32766,-32766,  306,
        -32766,  264,-32766,  263, -268,  563,  322,-32766,-32766,-32766,
          395,  336,-32766,-32766,-32766,  333,  506,-32766,-32766,  668,
        -32766,  670,  598,-32766,  377,-32766,-32766,-32766,  660,  600,
          614,-32766,  435,  657,  818,  819,  820,  821,  815,  816,
          313,-32766,-32766,  661,-32766,-32766,  822,  817,  376,  505,
          564,  573,  510,  523,  667,-32766,  658,-32766,  572,  555,
        -32766,-32766,-32766,  558,-32766,  556,-32766,  554,  605,  503,
          501,  343,   77,-32766,  517,  516,-32766,-32766,-32766,  515,
          376,-32766,-32766,  513,-32766,  523,  604,-32766,  377,-32766,
          870,  891,  463,-32766,-32766,-32766,-32766,  802,-32766,  642,
          874,  893,  894,  866,  854,-32766,  868,  439,-32766,-32766,
        -32766,  330,  376,-32766,-32766,  320,-32766,  523,  275,-32766,
          377,-32766,  250,  553,-32766,-32766,-32766,-32766,-32766,  249,
        -32766,  248,  247,  234,  230,  229,  227,-32766,  197,  133,
        -32766,-32766,-32766,  456,  118,-32766,-32766,   76,-32766,   75,
           74,-32766,  377,   73,   41,  557,-32766,   34,  509,-32766,
           43,  104,  105,  106,  107,  108,  109,  110,  111,  112,
          113,  114,  456,   33,   32,  269,   31,   30,  457,  687,
          688,  685,  684,  683,  654,   28,   27,-32766,-32766,   26,
          508,  456,  273,  270,   25,  511,  805,  756,  750,  713,
          715,  445,  341,   23,  269,   21,   19,  457,  687,  688,
          685,  684,  683,  654,   18,  589,  330,  574,   15,  466,
          413,  273,  270,  269,  347,  344,  457,  687,  688,  685,
          684,  683,  654,  294,   20,  752,  327,  321,  -92,  783,
          273,  270,  286,  830,  587,  330,  360,  361,  851,  782,
          810,  852,  785,  784,  781,  528,  590,  365,  366,  769,
          753,  495,  490,  588,  330,    0,  865,  327,  321, -336,
          849,  853,  831,  286,  786,  400,  276,  360,  361,-32766,
        -32766,-32766,  530,  848,  867,  889,  528,  590,  365,  366,
          801,  473,    0,  771,    0,-32766,-32766,    0,-32766,-32766,
        -32766,-32766,-32766,    0,  327,    0,    0,  276,  327,    0,
            0,    0,    0,  531,  360,  361,    0,    0,  360,  361,
            0,  327,    0,  548,  590,  365,  366,  548,  590,  365,
          366,  360,  361,    0,    0,    0,  327,    0,    0,    0,
          548,  590,  365,  366,    0,    0,  360,  361,    0,  327,
          675,    0,    0,  327,  608,  548,  590,  365,  366,  360,
          361,    0,    0,  360,  361,    0,  327,  577,  548,  590,
          365,  366,  548,  590,  365,  366,  360,  361,    0,    0,
          487,  327,  774,    0,    0,  548,  590,  365,  366,    0,
            0,  360,  361,    0,  327,  773,    0,  476,    0,  586,
          548,  590,  365,  366,  360,  361,    0,    0,    0,  327,
            0,    0,  549,  548,  590,  365,  366,    0,    0,  360,
          361,-32766,-32766,-32766,    0,    0,    0,  323,  548,  590,
          365,  366,    0,    0,    0,    0,    0,-32766,-32766,    0,
        -32766,-32766,-32766
    );

    protected static $yycheck = array(
            2,    3,    4,    5,    6,    8,    9,   10,    7,   11,
          105,  106,  107,  108,  109,  110,   72,    8,    9,   10,
           31,   24,   25,   61,   27,   28,   29,   30,   31,   32,
           33,   34,   35,   24,   25,   70,   27,   28,   29,   30,
           42,   43,   70,   72,   72,   73,   48,    0,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   64,   65,   86,   87,   68,   69,   70,   75,
           72,   61,   74,    7,   76,   77,   78,   79,    7,   81,
            7,   83,   80,  121,    8,    9,   10,  139,   90,  141,
          146,   93,   94,   95,   96,   75,   98,   99,   96,  101,
           24,   25,  104,  105,  133,  134,  141,    7,  106,  107,
          112,  113,  114,    8,    8,    9,   10,  115,  116,  117,
          118,  123,  144,  125,  126,  127,  128,  129,  130,  131,
           24,   25,  143,   27,  136,  137,  138,  139,  140,  141,
           61,  143,    7,  149,  146,  144,  148,  149,    8,    9,
           10,  141,  132,  143,   31,   36,   37,   38,   39,   40,
           41,   42,   43,   44,   24,   25,   72,   27,   28,   29,
           30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
           40,   41,   42,   43,   44,   45,   46,   47,   65,   49,
           45,   46,   47,   70,   49,    7,   72,   74,   31,  105,
          121,   78,   79,    7,   81,    7,   83,    8,    9,   10,
          144,  140,   70,   90,   72,   12,   93,   94,   95,   61,
          141,   98,   99,   72,  101,    7,   72,  104,  105,   42,
           43,   44,   65,   96,   97,  112,   61,   70,    7,  102,
          146,   74,   31,  106,  107,   78,   79,  105,   81,    7,
           83,    7,  115,  116,  117,  118,  105,   90,    7,  105,
           93,   94,   95,  140,  141,   98,   99,   61,  101,   72,
          146,  104,  105,  136,  123,  124,   65,  123,  124,  112,
           75,   70,   62,   75,  142,   74,   31,   89,  146,   78,
           79,   70,   81,    7,   83,  144,   70,  146,   72,  141,
          146,   90,    7,   70,   93,   94,   95,  140,  141,   98,
           99,   26,  101,  141,   12,  104,  105,  142,  146,   70,
           65,   12,  141,  112,  143,   70,    8,    9,  140,   74,
           49,  105,   12,   78,   79,   12,   81,  132,   83,   12,
          132,   66,   67,  146,   12,   90,   12,  141,   93,   94,
           95,  140,  141,   98,   99,   31,  101,   61,  140,  104,
          105,  140,  136,  143,   65,  139,   61,  112,   61,   70,
           62,  140,  146,   74,  141,  140,  141,   78,   79,   67,
           81,   70,   83,   70,  140,  140,  141,  140,  141,   90,
          141,  140,   93,   94,   95,  140,  141,   98,   99,   70,
          101,   70,   72,  104,  105,   70,   70,   70,   65,   70,
           70,  112,   70,   70,   70,   70,   70,   74,   70,   70,
           70,   78,   79,   72,   81,   72,   83,   72,   72,   75,
           89,  103,   75,   90,   75,   92,   93,   94,   95,  140,
          141,   98,   99,  144,  101,   85,   85,  104,  105,   85,
           85,   88,   65,   91,   96,  112,   89,   70,   71,  121,
          135,   74,   96,  116,   96,   78,   79,  141,   81,  100,
           83,   42,   43,  102,  122,  142,   -1,   90,   -1,   -1,
           93,   94,   95,  140,  141,   98,   99,   -1,  101,  116,
           61,  104,  105,  119,  122,   -1,  121,   68,   69,  112,
          121,   72,  132,   -1,   65,   76,   77,   -1,   -1,   70,
           -1,  135,  135,   74,   -1,  135,  135,   78,   79,  135,
           81,  135,   83,  135,  135,  140,  143,  140,  141,   90,
          139,  139,   93,   94,   95,  139,  141,   98,   99,  140,
          101,  140,  140,  104,  105,    8,    9,   10,  140,  140,
          140,  112,  123,  140,  125,  126,  127,  128,  129,  130,
          131,   24,   25,  140,   27,   28,  137,  138,   65,  141,
          140,  140,  140,   70,  140,  146,  140,   74,  140,  140,
          141,   78,   79,  140,   81,  140,   83,  140,  142,  141,
          141,  141,  141,   90,  141,  141,   93,   94,   95,  141,
           65,   98,   99,  141,  101,   70,  142,  104,  105,   74,
          142,  142,  142,   78,   79,  112,   81,  142,   83,  142,
          142,  142,  142,  142,  142,   90,  142,  144,   93,   94,
           95,  143,   65,   98,   99,  143,  101,   70,  143,  104,
          105,   74,  143,  140,  141,   78,   79,  112,   81,  143,
           83,  143,  143,  143,  143,  143,  143,   90,  143,  143,
           93,   94,   95,   70,  143,   98,   99,  143,  101,  143,
          143,  104,  105,  143,  143,  140,  141,  143,  145,  112,
           12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
           22,   23,   70,  143,  143,  102,  143,  143,  105,  106,
          107,  108,  109,  110,  111,  143,  143,  140,  141,  143,
          145,   70,  119,  120,  143,  145,  144,  144,  144,   51,
           52,  144,  144,  144,  102,  144,  144,  105,  106,  107,
          108,  109,  110,  111,  144,  142,  143,  145,  144,  144,
          144,  119,  120,  102,  144,  144,  105,  106,  107,  108,
          109,  110,  111,  144,  144,  144,   96,   97,  144,  144,
          119,  120,  102,  144,  142,  143,  106,  107,  144,  144,
          144,  144,  144,  144,  144,  115,  116,  117,  118,  144,
          144,  144,  144,  142,  143,   -1,  147,   96,   97,  121,
          147,  147,  147,  102,  147,  147,  136,  106,  107,    8,
            9,   10,  142,  147,  147,  147,  115,  116,  117,  118,
          147,  147,   -1,  148,   -1,   24,   25,   -1,   27,   28,
           29,   30,   31,   -1,   96,   -1,   -1,  136,   96,   -1,
           -1,   -1,   -1,  142,  106,  107,   -1,   -1,  106,  107,
           -1,   96,   -1,  115,  116,  117,  118,  115,  116,  117,
          118,  106,  107,   -1,   -1,   -1,   96,   -1,   -1,   -1,
          115,  116,  117,  118,   -1,   -1,  106,  107,   -1,   96,
          142,   -1,   -1,   96,  142,  115,  116,  117,  118,  106,
          107,   -1,   -1,  106,  107,   -1,   96,  142,  115,  116,
          117,  118,  115,  116,  117,  118,  106,  107,   -1,   -1,
           82,   96,  142,   -1,   -1,  115,  116,  117,  118,   -1,
           -1,  106,  107,   -1,   96,  142,   -1,   84,   -1,  142,
          115,  116,  117,  118,  106,  107,   -1,   -1,   -1,   96,
           -1,   -1,  142,  115,  116,  117,  118,   -1,   -1,  106,
          107,    8,    9,   10,   -1,   -1,   -1,  142,  115,  116,
          117,  118,   -1,   -1,   -1,   -1,   -1,   24,   25,   -1,
           27,   28,   29
    );

    protected static $yybase = array(
            0,  691,  660,  137,  790,  805,    2,  833,  818,  777,
          773,  760,  745,  732,  728,  565,  533,  570,  570,  570,
          570,  285,   -2,   -2,  167,  167,  123,  123,  123,  123,
          123,  123,  123,  123,  343,  167,  123,  343,  503,  439,
          535,  299,  387,  255,  211,  567,  567,  567,  567,  567,
          567,  567,  567,  567,  567,  567,  567,  567,  567,  567,
          567,  567,  567,  567,  567,  567,  567,  567,  567,  567,
          567,  567,  567,  567,  567,  567,  567,  567,  567,  567,
          567,  567,  567,  567,  567,  567,  567,  567,  567,  567,
          567,  567,  567,  567,  567,  567,  567,  567,  567,  567,
          567,  567,  567,  567,  567,  567,  567,  567,  567,  567,
          567,  567,  567,  567,  567,  567,  567,  567,  567,  567,
          567,  567,  567,  567,  567,  567,  567,  567,  567,  567,
          567,  567,  567,  567,  567,  -22,  363,  385,  352,  447,
          445,  443,  438,  574,  573,  572,  581,  594,  578,  469,
          468,  484,  482,  481,  577,  475,  477,  470,  478,  664,
          333,  312,  590,  582,  579,  614,  614,  140,  140,  140,
          140,  140,  140,  140,  140,  140,  140,  105,  318,  199,
          199,  199,  199,  199,  199,  199,  199,  199,  199,  199,
          199,  199,  199,  199,   76,   76,  429,  429,  429,  429,
          429,  429,  429,  429,  429,  429,  429,  429,  429,  106,
          537,  933,    9,  593,  622,  641,  791,   -3,   -3,   -3,
           -3,  668,  119,  119,  119,  119,  220,  -11,  181,  488,
          488,  488,  488,  488,  488,  488,  488,  488,  488,  488,
          488,  366,  335,  187,  187,  226,  226,  151,  151,  151,
          151,  154,   20,  208,   -6,  142,  354,  233,  233,  233,
          357,  370,  359,  -35,  249,  145,  145,  145,   94,   94,
           94,   94,  451,   94,   94,   94,  -52,  -29,  -29,  -28,
          172,  245,  377,   10,   79,  247,  396,  -56,  358,  396,
          275,  -56,  464,  446,  235,  376,  158,   71,  350,  218,
          365,  251,  188,  231,  -38,  206,  197,  198,    1,  364,
          483,  611,  175,  205,  206,  436,  244,   66,  434,  221,
          324,  345,  349,  369,  351,  324,  531,  324,  329,  324,
          308,  295,  554,  329,  324,  374,  329,  345,  356,  324,
          349,  450,  324,  432,  371,  196,  369,  371,  324,  351,
           47,  530,  527,  592,  526,  513,  383,  524,  344,  449,
          347,  373,  512,  511,  510,  346,  342,  571,  391,  348,
          296,  388,  563,  562,  307,  338,  521,  358,  392,  281,
          375,  566,  386,  375,  648,  384,  325,  379,  431,  309,
          320,  448,  391,  596,  665,  311,  428,  509,  596,  375,
          302,  323,  508,  313,  375,  506,  375,  636,  395,  635,
          331,  480,  391,  305,  281,  281,  281,  630,  286,  647,
          553,  629,  628,  657,  644,  627,  643,  551,  639,  553,
          626,  663,  367,  601,  242,  515,  376,  381,  336,  430,
          100,  658,  375,  375,  451,  285,  375,  595,  330,  372,
          645,  370,  339,  495,  600,  375,  327,  389,  332,  368,
          423,  656,  625,  550,  624,  341,  326,  492,  462,  334,
          619,  413,  203,  479,  516,  410,  409,  534,  353,  458,
          408,  337,  615,  610,  355,  638,  499,  402,  135,  637,
          454,  360,  380,  328,  361,  453,  340,  609,  401,  399,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,    0,    0,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,  140,  140,  140,  140,  140,  140,
          140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
          140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
          140,  140,  140,  140,  140,  140,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,  140,  140,  140,  140,
          140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
          140,  140,  140,  140,  140,  226,  226,  226,  226,  226,
          226,  226,  226,  226,  226,  226,  226,  226,  140,  140,
          140,  140,  226,  226,  226,  140,  140,  140,  140,  140,
            0,  145,  145,  145,  145,  226,  226,  226,  226,  226,
          226,  226,  226,  226,  226,  226,  226,  226,  226,  226,
          -95,  -95,  145,  145,    0,    0,  226,  226,  226,  226,
          226,  -29,  -29,  -29,  226,  -29,  124,  124,  124,  -29,
          -29,  -29,  197,  197,    0,    0,    0,  226,  226,  226,
          226,  124,  226,  226,  226,  329,    0,    0,    0,  124,
          100,  206,    0,    0,  391,  329,    0,  356,  329,    0,
            0,  362,  362,    0,  566,    0,    0,  509,    0,  391,
            0,    0,    0,    0,    0,    0,    0,    0,  391,   73,
           73,    0,    0,    0,  100,    0,    0,  100
    );

    protected static $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  357,  357,  114,  114,  114,  114,
          114,  114,  114,  114,32767,  320,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,  352,  352,  352,  352,
          352,  352,  352,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,  228,  230,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,   65,32767,  362,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  175,  174,  235,  236,  238,
          239,  175,  117,  353,  361,  174,   66,  200,  202,  253,
          201,  178,  183,  184,  185,  186,  187,  188,  189,  190,
          191,  192,  193,  177,  227,  229,  317,  317,  320,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  198,
          199,  203,  205,  130,  130,  130,  204,  220,  221,  218,
          219,  176,  222,  223,  224,  225,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,  134,32767,  212,  213,  279,  279,  109,  109,  109,
          109,  109,32767,32767,32767,32767,  287,32767,32767,32767,
        32767,32767,  289,32767,32767,  207,  208,  206,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  288,32767,32767,
        32767,32767,  338,  325,  275,32767,32767,32767,  268,32767,
           99,32767,32767,32767,32767,  306,  343,32767,32767,32767,
           17,32767,32767,32767,  369,  338,32767,  336,32767,   19,
        32767,32767,32767,32767,  342,32767,32767,32767,32767,32767,
           61,32767,32767,32767,32767,   61,  284,   61,32767,   61,
        32767,  319,  290,32767,   61,   74,32767,32767,32767,   61,
        32767,32767,   61,   87,  257,  319,   52,  257,   61,32767,
        32767,32767,32767,    4,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,  270,32767,
          327,32767,  341,  340,  328,32767,32767,  268,32767,  216,
          195,  269,32767,  197,32767,32767,  273,  276,32767,32767,
          126,32767,  271,  181,32767,32767,32767,32767,32767,  364,
          251,32767,32767,32767,  122,32767,   59,  336,32767,32767,
        32767,  336,  272,  337,  209,  210,  211,32767,  113,32767,
          314,32767,32767,32767,32767,32767,32767,  331,32767,32767,
        32767,32767,  336,32767,  103,32767,  306,32767,32767,32767,
           75,32767,  179,  118,32767,32767,  363,32767,32767,  324,
        32767,32767,32767,32767,32767,   60,    4,  167,  336,32767,
        32767,32767,32767,32767,32767,  336,32767,32767,32767,  107,
        32767,32767,  172,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,    4,32767,  153,32767,32767,32767,32767,32767,32767,
           25,   25,    3,  129,    3,  129,  129,   96,   25,   25,
           87,   25,   25,   25,  146,   25,   25,   25,   25
    );

    protected static $yygoto = array(
          138,  138,  172,  172,  172,  172,  172,  172,  172,  172,
          165,  138,  172,  166,  139,  140,  141,  145,  149,  181,
          174,  171,  173,  173,  173,  173,  173,  173,  173,  167,
          168,  169,  170,  179,  733,  734,  379,  736,  759,  760,
          761,  762,  763,  764,  765,  767,  701,  142,  143,  144,
          146,  147,  148,  150,  177,  178,  180,  194,  195,  209,
          210,  211,  212,  216,  217,  218,  219,  220,  222,  223,
          224,  225,  243,  244,  265,  266,  267,  414,  415,  416,
          182,  183,  184,  185,  186,  187,  188,  189,  190,  191,
          192,  151,  152,  153,  154,  155,  175,  156,  157,  158,
          193,  135,  159,  160,  161,  162,  136,  751,  163,  164,
          176,  436,  436,  436,  436,  436,  436,  436,  436,  436,
          436,  436,  436,  436,  527,  527,  527,  409,  381,  381,
          381,  542,  646,  603,  828,  829,  842,  662,  480,  627,
          692,  381,  381,  381,  381,  381,  381,  381,  381,  381,
          381,  381,  381,  381,  381,  381,  526,  526,  526,  878,
          788,  788,  629,  629,  629,  629,  629,  393,  652,  319,
          492,  421,  422,  425,  430,  462,  464,  482,  382,  382,
          382,  860,  860,  595,  595,  595,  595,  635,  471,  596,
          478,  382,  382,  382,  382,  382,  382,  382,  382,  382,
          382,  382,  382,  382,  382,  382,  458,  458,  458,  609,
          385,  385,  423,  424,  426,  428,  431,  461,  297,  442,
          307,  404,  406,  406,  380,  383,  399,  407,  411,  432,
          443,  446,  455,  465,  437,  437,  437,  437,  437,  437,
          437,  437,  437,  437,  437,  437,  437,  826,  826,  826,
          826,  826,  826,  826,  826,  826,  826,  826,  826,  826,
          525,  525,  525,  884,  884,  566,  567,  568,  447,  454,
          497,  887,  884,  470,  613,  599,  597,  597,  597,  597,
          507,  619,  617,  386,  386,    5,  262,  887,  887,    1,
          254,    2,    6,    7,  285,    8,    9,   10,  840,   11,
           12,   13,   14,  311,  300,  859,  859,  300,  298,  745,
          397,  305,  305,  305,  534,  405,  625,  875,  875,  875,
          240,  699,  638,  448,  387,  387,  305,  800,  799,  481,
          214,  215,  858,  779,  314,  281,  315,  318,  540,  602,
          643,  837,  479,  576,  293,    0,  392,  690,    0,    0,
            0,  309,    0,    0,  412,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,  398
    );

    protected static $yygcheck = array(
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   33,   33,   33,   33,   33,   33,   33,   33,   33,
           33,   33,   33,   33,    7,    7,    7,   71,   33,   33,
           33,   12,   12,   12,   12,   12,   12,   12,   12,   12,
           12,   33,   33,   33,   33,   33,   33,   33,   33,   33,
           33,   33,   33,   33,   33,   33,    6,    6,    6,  103,
           33,   33,   33,   33,   33,   33,   33,   72,   57,   57,
           33,   49,   49,   49,   49,   49,   49,   49,   82,   82,
           82,   83,   83,   33,   33,   33,   33,   51,   33,   33,
           33,   82,   82,   82,   82,   82,   82,   82,   82,   82,
           82,   82,   82,   82,   82,   82,   24,   24,   24,   43,
           82,   82,   85,   85,   85,   85,   85,   85,   22,   24,
           24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
           24,   24,   24,   24,   86,   86,   86,   86,   86,   86,
           86,   86,   86,   86,   86,   86,   86,   93,   93,   93,
           93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
            5,    5,    5,  104,  104,   25,   25,   25,   34,   34,
           34,  104,  104,   94,    5,    5,    5,    5,    5,    5,
            5,    5,    5,   86,   86,   13,   92,  104,  104,    2,
           92,    2,   13,   13,    4,   13,   13,   13,   97,   13,
           13,   13,   13,   23,    4,   84,   84,    4,   26,   73,
           26,   90,   90,   90,   10,   26,   47,   84,   84,   84,
           26,   72,   52,   26,   89,   89,   90,   91,   91,   26,
           36,   36,   84,   80,   90,   38,   38,   38,   11,   39,
           53,   96,   77,   32,   40,   -1,    4,   70,   -1,   -1,
           -1,    4,   -1,   -1,    4,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   72
    );

    protected static $yygbase = array(
            0,    0, -213,    0,   18,  259,  155,  123,    0,    0,
           25,    1,  -68, -216,    0,  -24,    0,    0,    0,    0,
            0,    0,  173,   73,   -7,  247,  -19,    0,    0,    0,
            0,    0,   -3,  -85,   20,    0, -175,    0,   66,   -1,
         -166,    0,    0,  172,    0,    0,    0,   65,    0,  144,
            0,  151,   31,    2,    0,    0,    0,  -73,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           -2,  102,   95,   63,    0,    0,    0,   -5,    0,    0,
            8,    0,  -35,  -64,   60,  165,   38,    0,    0,   79,
           54,   69,   30,   51,   76,    0,   -4,  100,    0,    0,
            0,    0,    0,  124,   10,    0
    );

    protected static $yygdefault = array(
        -32768,  350,    3,  521,  368,  545,  546,  547,  301,  299,
          535,  541,  449,    4,  543,  137,  290,  550,  551,  552,
          302,  303,  488,  310,  221,  565,  484,  130,  483,  308,
          569,  346,  575,  295,  433,  369,  213,  408,  440,  601,
          292,  607,  489,  610,  616,-32768,  434,  624,  342,  417,
          418,  634,  639,  644,  647,  459,  241,  651,  324,  316,
          656,  659,  460,  255,  666,  493,  494,-32768,-32768,-32768,
          689,  384,  700,  332,  766,  768,  394,  468,  775,  317,
          778,  370,  371,  372,  373,  419,  796,  793,  284,  845,
          282,  427,  253,  832,  450,  345,  877,  841,  283,  374,
          375,  296,  331,  879,  886,  441
    );

    protected static $yylhs = array(
            0,    1,    2,    2,    4,    4,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    8,    8,   10,   10,   10,
           10,    9,    9,   11,   13,   13,   14,   14,   14,   14,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,   31,   31,   32,   23,
           23,   26,   26,   27,   27,   28,   28,    6,    7,    7,
            7,   35,   35,   35,   37,   37,   38,   38,   25,   25,
           30,   30,   29,   29,   39,   19,   19,   40,   40,   41,
           42,   42,   43,   43,   18,   18,   16,   16,   44,   17,
           17,   45,   45,   34,   34,   46,   46,   47,   47,   48,
           48,   48,   48,   49,   49,   50,   50,   51,   51,   20,
           20,   52,   52,   52,   21,   21,   53,   53,   36,   36,
           55,   55,   56,   56,   58,   58,   54,   54,   54,   54,
           54,   54,   54,   62,   61,   61,   63,   63,   64,   64,
           64,   64,   65,   66,   66,   60,   60,   67,   67,   67,
           67,   69,   69,   68,   57,   57,   57,   57,   57,   57,
           59,   59,   70,   70,   22,   22,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   72,   77,   77,   79,
           79,   80,   81,   81,   81,   81,   81,   81,   86,   86,
           33,   33,   33,   73,   73,   87,   87,   82,   82,   88,
           88,   88,   88,   88,   74,   74,   74,   76,   76,   76,
           78,   78,   93,   93,   93,   93,   93,   93,   93,   93,
           93,   93,   93,   93,   93,   93,   93,   12,   12,   12,
           12,   12,   12,   75,   75,   75,   75,   94,   94,   96,
           96,   95,   95,   97,   97,   24,   24,   24,   24,   99,
           99,   98,   98,   98,   98,   98,  100,  100,   84,   84,
           89,   89,   83,   83,  101,  101,  101,  101,   90,   90,
           90,   90,   85,   85,   91,   91,   91,   71,   71,  102,
          102,  103,  103,  103,  103,   92,   92,   92,   92,  104,
          104,  104,  104,  104,  104,  104,  105,  105,  105
    );

    protected static $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            3,    5,    4,    3,    3,    3,    1,    1,    3,    2,
            4,    3,    1,    3,    2,    0,    1,    1,    1,    1,
            3,    7,    5,    5,    2,    3,    2,    3,    2,    3,
            3,    3,    3,    1,    2,    5,    7,    8,   10,   10,
            5,    1,    5,    3,    3,    2,    1,    2,    8,    1,
            3,    0,    1,    1,    1,    0,    2,    9,    5,    6,
            5,    1,    2,    2,    0,    2,    1,    3,    1,    4,
            1,    4,    1,    3,    3,    3,    4,    0,    2,    7,
            3,    1,    1,    1,    1,    4,    0,    2,    5,    0,
            2,    0,    3,    1,    0,    1,    3,    3,    5,    0,
            1,    1,    1,    1,    0,    1,    3,    1,    2,    3,
            1,    1,    2,    4,    3,    1,    1,    3,    2,    0,
            0,    1,    1,    2,    1,    1,    3,    8,    3,    3,
            3,    4,    2,    3,    1,    3,    0,    2,    4,    5,
            4,    4,    3,    1,    1,    1,    3,    2,    3,    4,
            2,    1,    3,    4,    1,    1,    1,    1,    1,    1,
            1,    3,    1,    3,    3,    1,    1,    5,    3,    4,
            4,    1,    2,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    2,    2,    2,    2,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    2,    2,    2,    2,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    2,    3,
            2,    3,    8,    4,    4,    2,    2,    4,    2,    2,
            2,    2,    2,    2,    2,    2,    2,    2,    2,    1,
            4,    3,    3,    2,    9,   10,    3,    0,    4,    1,
            3,    2,    4,    6,    8,    4,    4,    4,    1,    1,
            1,    2,    3,    1,    1,    1,    1,    1,    1,    0,
            3,    3,    4,    4,    0,    2,    3,    0,    1,    1,
            0,    3,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    3,    2,    1,    1,    3,    2,
            2,    4,    3,    1,    3,    3,    3,    0,    2,    0,
            1,    3,    1,    3,    1,    1,    1,    1,    1,    6,
            4,    3,    6,    4,    4,    4,    1,    3,    1,    2,
            1,    1,    4,    1,    3,    6,    4,    4,    4,    4,
            1,    4,    0,    1,    1,    3,    1,    0,    2,    3,
            1,    3,    1,    4,    2,    2,    2,    1,    2,    1,
            4,    3,    3,    3,    6,    3,    1,    1,    1
    );

    protected $yyval;
    protected $yyastk;
    protected $yysp;
    protected $lexer;

    /**
     * Parses PHP code into a node tree.
     *
     * @param PHPParser_Lexer $lexer A lexer
     *
     * @return array Array of statements
     */
    public function parse(PHPParser_Lexer $lexer) {
        $this->lexer  = $lexer;

        $this->yysp   = 0;                   // Stack pos
        $yysstk       = array($yystate = 0); // State stack
        $this->yyastk = array();             // AST   stack (?)
        $yylstk       = array($yyline  = 1); // Line  stack
        $yydstk       = array($yyDC = null); // Doc comment stack

        $yychar       = -1;

        for (;;) {
            if (self::$yybase[$yystate] == 0) {
                $yyn = self::$yydefault[$yystate];
            } else {
                if ($yychar < 0) {
                    if (($yychar = $lexer->lex($yylval, $yyline, $yyDC)) < 0)
                        $yychar = 0;
                    $yychar = $yychar < self::YYMAXLEX ?
                        self::$yytranslate[$yychar] : self::YYBADCH;
                    $yylstk[$this->yysp] = $yyline;
                    $yydstk[$this->yysp] = $yyDC;
                }
                if ((($yyn = self::$yybase[$yystate] + $yychar) >= 0
                     && $yyn < self::YYLAST && self::$yycheck[$yyn] == $yychar
                     || ($yystate < self::YY2TBLSTATE
                        && ($yyn = self::$yybase[$yystate + self::YYNLSTATES]
                            + $yychar) >= 0
                        && $yyn < self::YYLAST
                        && self::$yycheck[$yyn] == $yychar))
                    && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT) {
                    /*
                     * >= YYNLSTATE: shift and reduce
                     * > 0: shift
                     * = 0: accept
                     * < 0: reduce
                     * = -YYUNEXPECTED: error
                     */
                    if ($yyn > 0) {
                        /* shift */
                        ++$this->yysp;

                        $yysstk[$this->yysp]       = $yystate = $yyn;
                        $this->yyastk[$this->yysp] = $yylval;
                        $yylstk[$this->yysp]       = $yyline;
                        $yydstk[$this->yysp]       = $yyDC;
                        $yychar = -1;

                        if ($yyn < self::YYNLSTATES)
                            continue;

                        /* $yyn >= YYNLSTATES means shift-and-reduce */
                        $yyn -= self::YYNLSTATES;
                    } else {
                        $yyn = -$yyn;
                    }
                } else {
                    $yyn = self::$yydefault[$yystate];
                }
            }

            for (;;) {
                /* reduce/error */
                if ($yyn == 0) {
                    /* accept */
                    return $this->yyval;
                } elseif ($yyn != self::YYUNEXPECTED) {
                    /* reduce */
                    try {
                        $this->{'yyn' . $yyn}(
                            $yylstk[$this->yysp - self::$yylen[$yyn]],
                            $yydstk[$this->yysp - self::$yylen[$yyn]]
                        );
                    } catch (PHPParser_Error $e) {
                        if (-1 === $e->getRawLine()) {
                            $e->setRawLine($yyline);
                        }

                        throw $e;
                    }

                    /* Goto - shift nonterminal */
                    $this->yysp -= self::$yylen[$yyn];
                    $yyn = self::$yylhs[$yyn];
                    if (($yyp = self::$yygbase[$yyn] + $yysstk[$this->yysp]) >= 0
                         && $yyp < self::YYGLAST
                         && self::$yygcheck[$yyp] == $yyn) {
                        $yystate = self::$yygoto[$yyp];
                    } else {
                        $yystate = self::$yygdefault[$yyn];
                    }

                    ++$this->yysp;

                    $yysstk[$this->yysp] = $yystate;
                    $this->yyastk[$this->yysp] = $this->yyval;
                    $yylstk[$this->yysp]       = $yyline;
                    $yydstk[$this->yysp]       = $yyDC;
                } else {
                    /* error */
                    throw new PHPParser_Error(
                        'Unexpected token ' . self::$yyterminals[$yychar],
                        $yyline
                    );
                }

                if ($yystate < self::YYNLSTATES)
                    break;
                /* >= YYNLSTATES means shift-and-reduce */
                $yyn = $yystate - self::YYNLSTATES;
            }
        }
    }

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn1($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Namespace::postprocess($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn2($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn3($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn4($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn5($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn6($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn7($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn8($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn9($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_HaltCompiler($this->lexer->handleHaltCompiler(), $line, $docComment); 
    }

    protected function yyn10($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn11($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(5-2)], $line, $docComment), $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn12($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn13($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Use($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn14($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Const($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn15($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn16($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn17($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn18($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-1)], $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn19($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(2-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn20($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(4-2)], $line, $docComment), $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn21($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn22($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn23($line, $docComment) {
         $this->yyval = new PHPParser_Node_Const($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn24($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn25($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn26($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn27($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn28($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn29($line, $docComment) {
         throw new PHPParser_Error('__halt_compiler() can only be used from the outermost scope'); 
    }

    protected function yyn30($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn31($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(7-3)], array('stmts' => is_array($this->yyastk[$this->yysp-(7-5)]) ? $this->yyastk[$this->yysp-(7-5)] : array($this->yyastk[$this->yysp-(7-5)]), 'elseifs' => $this->yyastk[$this->yysp-(7-6)], 'else' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn32($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_While($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn33($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Switch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn34($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break(null, $line, $docComment); 
    }

    protected function yyn35($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn36($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue(null, $line, $docComment); 
    }

    protected function yyn37($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn38($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return(null, $line, $docComment); 
    }

    protected function yyn39($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn40($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Global($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn41($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Static($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn42($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Echo($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn43($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_InlineHTML($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn44($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn45($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Unset($this->yyastk[$this->yysp-(5-3)], $line, $docComment); 
    }

    protected function yyn46($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-3)], array('keyVar' => null, 'byRef' => false, 'stmts' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn47($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-4)], array('keyVar' => null, 'byRef' => true, 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn48($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(10-8)], $this->yyastk[$this->yysp-(10-6)], array('keyVar' => $this->yyastk[$this->yysp-(10-3)], 'byRef' => $this->yyastk[$this->yysp-(10-5)], 'stmts' => $this->yyastk[$this->yysp-(10-10)]), $line, $docComment); 
    }

    protected function yyn49($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ForNumeric($this->yyastk[$this->yysp-(10-3)], $this->yyastk[$this->yysp-(10-5)], $this->yyastk[$this->yysp-(10-7)], $this->yyastk[$this->yysp-(10-10)], $this->yyastk[$this->yysp-(10-6)], $this->yyastk[$this->yysp-(10-8)], $line, $docComment); 
    }

    protected function yyn50($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Declare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn51($line, $docComment) {
         $this->yyval = array(); /* means: n statement */ 
    }

    protected function yyn52($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TryCatch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn53($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Throw($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn54($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Goto($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn55($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Label($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn56($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn57($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn58($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Catch($this->yyastk[$this->yysp-(8-3)], substr($this->yyastk[$this->yysp-(8-4)], 1), $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn59($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn60($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn61($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn62($line, $docComment) {
         $this->yyval = true; 
    }

    protected function yyn63($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn64($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn65($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn66($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn67($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Function($this->yyastk[$this->yysp-(9-3)], array('byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-5)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn68($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Class($this->yyastk[$this->yysp-(5-2)], array('type' => $this->yyastk[$this->yysp-(5-1)], 'stmts' => $this->yyastk[$this->yysp-(5-4)]), $line, $docComment); 
    }

    protected function yyn69($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Interface($this->yyastk[$this->yysp-(6-2)], array('extends' => $this->yyastk[$this->yysp-(6-3)], 'stmts' => $this->yyastk[$this->yysp-(6-5)]), $line, $docComment); 
    }

    protected function yyn70($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Trait($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn71($line, $docComment) {
         $this->yyval = 0; 
    }

    protected function yyn72($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn73($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn74($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn75($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn76($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn77($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn78($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn79($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn80($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn81($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn82($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn83($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn84($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn85($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn86($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn87($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn88($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn89($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Case($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)], $line, $docComment); 
    }

    protected function yyn90($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn91($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn92($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn93($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('default', $line, $docComment); 
    }

    protected function yyn94($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn95($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn96($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn97($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn98($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(5-3)], is_array($this->yyastk[$this->yysp-(5-5)]) ? $this->yyastk[$this->yysp-(5-5)] : array($this->yyastk[$this->yysp-(5-5)]), $line, $docComment); 
    }

    protected function yyn99($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn100($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(is_array($this->yyastk[$this->yysp-(2-2)]) ? $this->yyastk[$this->yysp-(2-2)] : array($this->yyastk[$this->yysp-(2-2)]), $line, $docComment); 
    }

    protected function yyn101($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn102($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn103($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn104($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn105($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn106($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn107($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn108($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $line, $docComment); 
    }

    protected function yyn109($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn110($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn111($line, $docComment) {
         $this->yyval = 'array'; 
    }

    protected function yyn112($line, $docComment) {
         $this->yyval = 'callable'; 
    }

    protected function yyn113($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn114($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn115($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn116($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn117($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(1-1)], false, $line, $docComment); 
    }

    protected function yyn118($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(2-2)], true, $line, $docComment); 
    }

    protected function yyn119($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn120($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn121($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn122($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn123($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn124($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn125($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn126($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn127($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn128($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn129($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn130($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn131($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn132($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn133($line, $docComment) {
         PHPParser_Node_Stmt_Class::verifyModifier($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); $this->yyval = $this->yyastk[$this->yysp-(2-1)] | $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn134($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn135($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn136($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn137($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassMethod($this->yyastk[$this->yysp-(8-4)], array('type' => $this->yyastk[$this->yysp-(8-1)], 'byRef' => $this->yyastk[$this->yysp-(8-3)], 'params' => $this->yyastk[$this->yysp-(8-6)], 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn138($line, $docComment) {
         $this->yyval = new Snowscript_Node_Stmt_Extends($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn139($line, $docComment) {
         $this->yyval = new Snowscript_Node_Stmt_Implements($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn140($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUse($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn141($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignClassProperty($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn142($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn143($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassConst($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn144($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn145($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn146($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn147($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn148($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Precedence($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn149($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(5-1)][0], $this->yyastk[$this->yysp-(5-1)][1], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn150($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], null, $line, $docComment); 
    }

    protected function yyn151($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn152($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
    }

    protected function yyn153($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn154($line, $docComment) {
         $this->yyval = array(null, $this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn155($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn156($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn157($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn158($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
    }

    protected function yyn159($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
    }

    protected function yyn160($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn161($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn162($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn163($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(4-2)], $line, $docComment); 
    }

    protected function yyn164($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn165($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED; 
    }

    protected function yyn166($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE; 
    }

    protected function yyn167($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_STATIC; 
    }

    protected function yyn168($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn169($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn170($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn171($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn172($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn173($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn174($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn175($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn176($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn177($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignList($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn178($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn179($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignRef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn180($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn181($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn182($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Clone($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn183($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignPlus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn184($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMinus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn185($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn186($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignDiv($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn187($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignConcat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn188($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn189($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn190($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn191($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn192($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn193($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn194($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostInc($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn195($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreInc($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn196($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostDec($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn197($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreDec($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn198($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn199($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn200($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn201($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn202($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn203($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn204($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn205($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn206($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Concat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn207($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Plus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn208($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Minus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn209($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn210($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Div($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn211($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn212($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn213($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn214($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn215($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn216($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn217($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn218($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Identical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn219($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotIdentical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn220($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Equal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn221($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn222($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Smaller($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn223($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_SmallerOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn224($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Greater($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn225($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_GreaterOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn226($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Instanceof($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn227($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceIsset($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn228($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceIsset($this->yyastk[$this->yysp-(2-1)], false, $line, $docComment); 
    }

    protected function yyn229($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceNotEmpty($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn230($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceNotEmpty($this->yyastk[$this->yysp-(2-1)], false, $line, $docComment); 
    }

    protected function yyn231($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn232($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-8)], $line, $docComment); 
    }

    protected function yyn233($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Isset($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn234($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Empty($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn235($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE, $line, $docComment); 
    }

    protected function yyn236($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE_ONCE, $line, $docComment); 
    }

    protected function yyn237($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Eval($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn238($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE, $line, $docComment); 
    }

    protected function yyn239($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE_ONCE, $line, $docComment); 
    }

    protected function yyn240($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Int($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn241($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Double($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn242($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_String($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn243($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Array($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn244($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Object($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn245($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Bool($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn246($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Unset($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn247($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Exit($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn248($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ErrorSuppress($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn249($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn250($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn251($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn252($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShellExec($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn253($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Print($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn254($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => false, 'byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-4)], 'uses' => $this->yyastk[$this->yysp-(9-6)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn255($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => true, 'byRef' => $this->yyastk[$this->yysp-(10-3)], 'params' => $this->yyastk[$this->yysp-(10-5)], 'uses' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-9)]), $line, $docComment); 
    }

    protected function yyn256($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn257($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn258($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn259($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn260($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn261($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(2-2)], 1), $this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn262($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn263($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn264($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn265($line, $docComment) {
        
            if ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_StaticPropertyFetch) {
                $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(4-1)]->class, new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-1)]->name, $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
            } elseif ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                $tmp = $this->yyastk[$this->yysp-(4-1)];
                while ($tmp->var instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new PHPParser_Node_Expr_StaticCall($tmp->var->class, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
                $tmp->var = new PHPParser_Node_Expr_Variable($tmp->var->name, $line, $docComment);
            } else {
                throw new Exception;
            }
          
    }

    protected function yyn266($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn267($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn268($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('static', $line, $docComment); 
    }

    protected function yyn269($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn270($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn271($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_FullyQualified($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn272($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_Relative($this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn273($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn274($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn275($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn276($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn277($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn278($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn279() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn280($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn281($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn282($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn283($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn284($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn285($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn286($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn287($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn288($line, $docComment) {
         $this->yyval = array(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(1-1)], '`')); 
    }

    protected function yyn289($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(1-1)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn290($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn291($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn292($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber(PHPParser_Node_Scalar_LNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn293($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DNumber(PHPParser_Node_Scalar_DNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn294($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], "'", $line, $docComment); 
    }

    protected function yyn295($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], '"', $line, $docComment); 
    }

    protected function yyn296($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LineConst($line, $docComment); 
    }

    protected function yyn297($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FileConst($line, $docComment); 
    }

    protected function yyn298($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DirConst($line, $docComment); 
    }

    protected function yyn299($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_ClassConst($line, $docComment); 
    }

    protected function yyn300($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_TraitConst($line, $docComment); 
    }

    protected function yyn301($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_MethodConst($line, $docComment); 
    }

    protected function yyn302($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FuncConst($line, $docComment); 
    }

    protected function yyn303($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_NSConst($line, $docComment); 
    }

    protected function yyn304($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String(PHPParser_Node_Scalar_String::parseDocString($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]), $line, $docComment); 
    }

    protected function yyn305($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String('', $line, $docComment); 
    }

    protected function yyn306($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn307($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn308($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn309($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn310($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn311($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn312($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn313($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn314($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn315($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '"'); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn316($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, null); } } $s = preg_replace('~(\r\n|\n|\r)$~', '', $s); if ('' === $s) array_pop($this->yyastk[$this->yysp-(3-2)]);; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn317($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn318($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn319() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn320() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn321($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn322($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn323($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn324($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn325($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn326($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn327($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn328($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn329($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn330($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn331($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn332($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_MethodCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn333($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn334($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn335($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn336($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn337($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn338($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn339($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn340($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn341($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn342($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn343($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn344($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment); 
    }

    protected function yyn345($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn346($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn347($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn348($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn349($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn350($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn351($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn352($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn353($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn354($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn355($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn356($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn357($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn358($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn359($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn360($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn361($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn362($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn363($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-1)], true, $line, $docComment); 
    }

    protected function yyn364($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(2-2)], null, true, $line, $docComment); 
    }

    protected function yyn365($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn366($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn367($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn368($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn369($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn370($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(4-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn371($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(3-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn372($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn373($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn374($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(6-2)], $line, $docComment), $this->yyastk[$this->yysp-(6-4)], $line, $docComment); 
    }

    protected function yyn375($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn376($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn377($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn378($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }
}
