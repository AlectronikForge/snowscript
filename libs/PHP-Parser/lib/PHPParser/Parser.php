<?php

/* This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *  * the grammar file grammar/zend_language_parser.phpy
 *  * the parser skeleton grammar/kymacc.php.parser
 *  * the preprocessing script grammar/rebuildParser.php
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */
class PHPParser_Parser
{
    const YYBADCH      = 155;
    const YYMAXLEX     = 395;
    const YYTERMS      = 155;
    const YYNONTERMS   = 113;
    const YYLAST       = 892;
    const YY2TBLSTATE  = 327;
    const YYGLAST      = 434;
    const YYSTATES     = 786;
    const YYNLSTATES   = 530;
    const YYINTERRTOK  = 1;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    // {{{ Tokens
    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_FROM = 262;
    const T_IMPORT = 263;
    const T_LOGICAL_OR = 264;
    const T_LOGICAL_XOR = 265;
    const T_LOGICAL_AND = 266;
    const T_PRINT = 267;
    const T_PLUS_EQUAL = 268;
    const T_MINUS_EQUAL = 269;
    const T_MUL_EQUAL = 270;
    const T_DIV_EQUAL = 271;
    const T_CONCAT_EQUAL = 272;
    const T_MOD_EQUAL = 273;
    const T_AND_EQUAL = 274;
    const T_OR_EQUAL = 275;
    const T_XOR_EQUAL = 276;
    const T_SL_EQUAL = 277;
    const T_SR_EQUAL = 278;
    const T_DOUBLE_QUESTION_MARK = 279;
    const T_RECEIVER = 280;
    const T_THEN = 281;
    const T_BOOLEAN_OR = 282;
    const T_BOOLEAN_AND = 283;
    const T_IS_EQUAL = 284;
    const T_IS_NOT_EQUAL = 285;
    const T_IS_IDENTICAL = 286;
    const T_IS_NOT_IDENTICAL = 287;
    const T_IS_SMALLER_OR_EQUAL = 288;
    const T_IS_GREATER_OR_EQUAL = 289;
    const T_SL = 290;
    const T_SR = 291;
    const T_INSTANCEOF = 292;
    const T_INC = 293;
    const T_DEC = 294;
    const T_INT_CAST = 295;
    const T_DOUBLE_CAST = 296;
    const T_STRING_CAST = 297;
    const T_ARRAY_CAST = 298;
    const T_OBJECT_CAST = 299;
    const T_BOOL_CAST = 300;
    const T_UNSET_CAST = 301;
    const T_LBRACE = 302;
    const T_NEW = 303;
    const T_CLONE = 304;
    const T_EXIT = 305;
    const T_IF = 306;
    const T_ELSEIF = 307;
    const T_ELSE = 308;
    const T_ENDIF = 309;
    const T_LNUMBER = 310;
    const T_DNUMBER = 311;
    const T_STRING = 312;
    const T_STRING_VARNAME = 313;
    const T_VARIABLE = 314;
    const T_NUM_STRING = 315;
    const T_INLINE_HTML = 316;
    const T_CHARACTER = 317;
    const T_BAD_CHARACTER = 318;
    const T_ENCAPSED_AND_WHITESPACE = 319;
    const T_STRING_SINGLE = 320;
    const T_STRING_DOUBLE = 321;
    const T_ECHO = 322;
    const T_DO = 323;
    const T_WHILE = 324;
    const T_ENDWHILE = 325;
    const T_ENDFOR = 326;
    const T_FOR = 327;
    const T_ENDFOREACH = 328;
    const T_DECLARE = 329;
    const T_ENDDECLARE = 330;
    const T_AS = 331;
    const T_TO = 332;
    const T_DOWNTO = 333;
    const T_STEP = 334;
    const T_IN = 335;
    const T_SWITCH = 336;
    const T_ENDSWITCH = 337;
    const T_CASE = 338;
    const T_DEFAULT = 339;
    const T_BREAK = 340;
    const T_CONTINUE = 341;
    const T_GOTO = 342;
    const T_FUNCTION = 343;
    const T_CONST = 344;
    const T_RETURN = 345;
    const T_TRY = 346;
    const T_CATCH = 347;
    const T_THROW = 348;
    const T_USE = 349;
    const T_INSTEADOF = 350;
    const T_GLOBAL = 351;
    const T_STATIC = 352;
    const T_ABSTRACT = 353;
    const T_FINAL = 354;
    const T_PRIVATE = 355;
    const T_PROTECTED = 356;
    const T_PUBLIC = 357;
    const T_VAR = 358;
    const T_UNSET = 359;
    const T_ISSET = 360;
    const T_EMPTY = 361;
    const T_HALT_COMPILER = 362;
    const T_CLASS = 363;
    const T_TRAIT = 364;
    const T_INTERFACE = 365;
    const T_EXTENDS = 366;
    const T_IMPLEMENTS = 367;
    const T_OBJECT_OPERATOR = 368;
    const T_DOUBLE_ARROW = 369;
    const T_LIST = 370;
    const T_ARRAY = 371;
    const T_CALLABLE = 372;
    const T_CLASS_C = 373;
    const T_TRAIT_C = 374;
    const T_METHOD_C = 375;
    const T_FUNC_C = 376;
    const T_LINE = 377;
    const T_FILE = 378;
    const T_COMMENT = 379;
    const T_DOC_COMMENT = 380;
    const T_OPEN_TAG = 381;
    const T_OPEN_TAG_WITH_ECHO = 382;
    const T_CLOSE_TAG = 383;
    const T_WHITESPACE = 384;
    const T_START_HEREDOC = 385;
    const T_END_HEREDOC = 386;
    const T_DOLLAR_OPEN_CURLY_BRACES = 387;
    const T_CURLY_OPEN = 388;
    const T_PAAMAYIM_NEKUDOTAYIM = 389;
    const T_NAMESPACE = 390;
    const T_NS_C = 391;
    const T_DIR = 392;
    const T_NS_SEPARATOR = 393;
    const T_RBRACE = 394;
    // }}}

    protected static $yyterminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "T_FROM",
        "T_IMPORT",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "'?'",
        "T_DOUBLE_QUESTION_MARK",
        "T_RECEIVER",
        "T_THEN",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "'['",
        "T_LBRACE",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_STRING_SINGLE",
        "T_STRING_DOUBLE",
        "T_ECHO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_TO",
        "T_DOWNTO",
        "T_STEP",
        "T_IN",
        "T_SWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "T_RBRACE",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "':'",
        "'$'",
        "']'",
        "'`'",
        "'\"'"
        , "???"
    );

    protected static $yytranslate = array(
            0,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,   51,  154,  155,  151,   50,   34,  155,
          148,  149,   48,   45,    9,   46,   47,   49,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  150,  145,
           39,   14,   41,   26,   63,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,   64,  155,  152,   33,  155,  153,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  146,   32,  147,   53,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
          155,  155,  155,  155,  155,  155,    1,    2,    3,    4,
            5,    6,    7,    8,   10,   11,   12,   13,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   24,   25,   27,
           28,   29,   30,   31,   35,   36,   37,   38,   40,   42,
           43,   44,   52,   54,   55,   56,   57,   58,   59,   60,
           61,   62,   65,   66,   67,   68,   69,   70,   71,  155,
           72,   73,   74,   75,   76,   77,   78,  155,  155,   79,
           80,   81,   82,  155,   83,   84,  155,   85,   86,   87,
           88,   89,   90,   91,   92,   93,   94,  155,   95,   96,
           97,   98,   99,  100,  101,  102,  103,  104,  105,  106,
          107,  108,  109,  110,  111,  112,  113,  114,  115,  116,
          117,  118,  119,  120,  121,  122,  123,  124,  125,  126,
          155,  127,  128,  129,  130,  131,  132,  133,  134,  155,
          155,  155,  155,  155,  155,  135,  136,  137,  138,  139,
          140,  141,  142,  143,  144
    );

    protected static $yyaction = array(
           54,   55,  360,   56,   57,-32766,-32766,-32766,   52,  602,
          603,   58,  706,  707,  708,  705,  704,  703,-32766,-32766,
        -32766,-32766,-32766,-32766,  660,-32766,-32766,-32766,-32766,-32766,
        -32767,-32767,-32767,-32767,-32766,-32766,-32766,  909,-32766,-32766,
        -32766,-32766,-32766,   59,   60,-32766,-32766,-32766,  311,   61,
            0,   62,  234,  235,   63,   64,   65,   66,   67,   68,
           69,   70,   41,   42,  246,   71,  334,  361,   17,  260,
          833,  834,  362,  122,  891,-32766,  582,  510,  835,  836,
           44,  363,  238,  364,  276,  365,  486,  102,  103,  104,
          121,  247,  366,   50,  857,   35,   36,  367,  337,  231,
           37,  368,  335,   72,  253,  349,  290,  291,-32766,   39,
          237,  346,  369,  370,  371,  372,  373,-32766,-32766,-32766,
        -32766,  568,  610,  374,  375,  376,  333,  840,  841,  842,
          843,  837,  838,  254,-32766,-32766,-32766,  292,  387,  844,
          839,  336,  348,  590,  511,  358,   73,   47,  689,  274,
        -32766,  258,  262,   79,   80,   81,   99,  100,  101,  239,
        -32767,-32767,-32767,-32767,   97,   98,   99,  100,  101,   82,
           83,  248,  293,   84,   85,   86,   87,   88,   89,   90,
           91,   92,   93,   94,   95,   96,   97,   98,   99,  100,
          101,  102,  103,  104,  385,  247,  338,  297,  201,  534,
        -32766,-32766,-32766,-32766,  229,   33,  462,-32766,-32766,  581,
        -32766,  534,-32766,  891,   51,  885,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,-32766,-32766,  263,  127,-32766,-32766,  117,
        -32766,   27,   34,-32766,  386,  919,  347,  921,  920,  385,
          335,-32766,  296,  128,  534,   16,  809,  544,-32766,  432,
          369,  370,-32766,-32766,  295,-32766,  895,-32766,  281,  568,
          610,  374,  375,  846,-32766,  441,  799,-32766,-32766,-32766,
        -32766,-32766,-32766,-32766,   49,-32766,  240,  387,-32766,  386,
          336,  675,  846,  208,  385,  335,-32766,  597,  274,  534,
          282,  246,  891,-32766,  130,  369,  370,-32766,-32766,   46,
        -32766,  123,-32766,  338,  568,  610,  374,  375,  543,-32766,
          909,  209,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  419,
        -32766,  124,  129,-32766,  386,  210,  916,  456,  125,  385,
          335,-32766,  796,  545,  534,  319,  345,  124,-32766,  513,
          369,  370,-32766,-32766,  549,-32766,  548,-32766,  204,  568,
          610,  374,  375,  553,-32766,  552,  118,-32766,-32766,-32766,
        -32766,-32766,-32766,-32766,  826,-32766,  211,  274,-32766,  386,
        -32766,-32766,  580,  338,  385,  203,-32766,  795,  579,  534,
          202,  116,  502,-32766,-32766,  856,  126,-32766,-32766,  601,
        -32766,  247,-32766,  485,   22,   45,  205,  206,  246,-32766,
           53,  632,-32766,-32766,-32766,-32766,-32766,-32766,-32766,   48,
        -32766,  683,  525,-32766,  386,  199,  534,-32766,-32766,-32766,
        -32766,-32766,  509,  833,  834,  694,  529,-32766,  385,  540,
          515,  835,  836,  534,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,  535,-32766,  133,-32766,  497,  136,  557,
        -32766,-32766,  914,-32766,  559,  684,-32766,-32766,-32766,-32766,
          849,-32766,-32766,-32766,-32766,  691,  344,-32766,  386,  398,
          399,-32766,-32766,-32766,  401,-32766,  406,  410,  447,  411,
          840,  841,  842,  843,  837,  838,  321,-32766,-32766,-32766,
          496,-32766,  844,  839,  385,  802,-32766,  400,  480,  534,
          483,  243,-32766,-32766,  577,-32766,  909,-32766,-32766,  279,
        -32766,  280,-32766,  131,  650,  651,-32766, -163,  450,-32766,
          412,  488,-32766,-32766,-32766,  273,  385,-32766,-32766,  134,
        -32766,  534,  270,-32766,  386,-32766, -113,  343,-32766,-32766,
        -32766,-32766,-32766, -140,-32766,  357,  464,  478,  259,-32766,
         -289,-32766,  845,  611,-32766,-32766,-32766,  792,  612,-32766,
        -32766,  120,-32766,  498, -347,-32766,  386,  650,  651,  261,
          573,-32766,  207,-32766,    0,    0,  385,  335,    0,  583,
            0,  534,    0,    0,    0,-32766, -279,  369,  370,-32766,
        -32766,-32766,-32766, -280,-32766, -288,  568,  610,  374,  375,
          688,-32766,  575,-32766,-32766,-32766,-32766,  467,  289,-32766,
        -32766,  507,-32766,  463,  313,-32766,  386,  266,  265,  345,
          876,  522,  887,-32766,   40,  105,  106,  107,  108,  109,
          110,  111,  112,  113,  114,  115,  467,  342,  405,  271,
          289,  690,  468,  707,  708,  705,  704,  703,  674,  618,
          680,  620,-32766,-32766,  634,  467,  275,  272,  677,  681,
          584,  593,  521,  289,  733,  735,  687,  678,  271,  592,
          578,  468,  707,  708,  705,  704,  703,  674,  335,  576,
          607,  338,  574,  624,  523,  275,  272,  271,  369,  370,
          468,  707,  708,  705,  704,  703,  674,  568,  610,  374,
          375,  335,  329,  517,  275,  272,  516,  288,  890,  609,
          338,  369,  370,  514,  512,  352,   78,  528,  527,  526,
          539,  610,  374,  375,  892,  628,  524,  232,  608,  338,
          915,  474,  662,  335,  329, -347,  896,  886,  917,  288,
          918,  278,  824,  369,  370,  888,  625,  520,  542,  451,
          338,  330,  539,  610,  374,  375,  335,  329,  827,  328,
          277,  252,  288,  251,  250,  249,  369,  370,-32766,-32766,
        -32766,  236,  233,  278,  230,  539,  610,  374,  375,  200,
          541,  777,  335,  135,-32766,-32766,-32766,  335,-32766,-32766,
        -32766,-32766,  369,  370,  119,   77,  278,  369,  370,   76,
          335,  568,  610,  374,  375,  335,  568,  610,  374,  375,
          369,  370,   75,   74,   43,  369,  370,   38,   32,  568,
          610,  374,  375,  487,  568,  610,  374,  375,   31,  569,
          771,   30,   29,   28,  331,  335,   26,   25,   24,  793,
          457,  350,   23,   21,   19,  369,  370,  695,   18,  871,
          477,   15,  606,  422,  568,  610,  374,  375,  356,  353,
          300,   20,  773, -101,  805,  852,  873,  804,  832,  874,
          807,  806,  803,  790,  774,  506,  501,    0,  594,  519,
            0,    0,  875,  853,  808,  409,  870,    0,  889,  913,
          823,  484
    );

    protected static $yycheck = array(
            2,    3,    4,    5,    6,   10,   11,   12,   64,   90,
           91,   13,  109,  110,  111,  112,  113,  114,   10,   11,
           12,   26,   27,   28,   76,   30,   31,   32,   33,   34,
           35,   36,   37,   38,   26,   27,   28,   79,   30,   31,
           32,   33,   34,   45,   46,   10,   11,   12,   76,   51,
            0,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   64,   65,   66,   67,   68,   69,  149,  125,
           72,   73,   74,    9,   76,   76,   78,   74,   80,   81,
           82,   83,   34,   85,    9,   87,   84,   48,   49,   50,
          146,   52,   94,    9,  136,   97,   98,   99,  100,  151,
          102,  103,  100,  105,    9,    9,  108,  109,  109,  137,
          138,    9,  110,  111,  116,  117,  118,   10,   10,   11,
           12,  119,  120,  121,  122,  127,    9,  129,  130,  131,
          132,  133,  134,  135,   26,   27,   28,    8,  140,  141,
          142,  143,    9,  145,  146,    9,  148,   64,  145,  151,
          151,  153,  154,   10,   11,   12,   45,   46,   47,   34,
           39,   40,   41,   42,   43,   44,   45,   46,   47,   26,
           27,   28,    9,   30,   31,   32,   33,   34,   35,   36,
           37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
           47,   48,   49,   50,   69,   52,  148,    9,    9,   74,
           10,   11,   12,   78,   34,    9,   79,   82,   83,  145,
           85,   74,   87,   76,    9,   76,   26,   27,   28,   94,
           30,   31,   97,   98,   99,   79,   93,  102,  103,  146,
          105,  148,    9,  108,  109,   74,    9,   76,   77,   69,
          100,  116,    9,   64,   74,  149,  109,  145,   78,   74,
          110,  111,   82,   83,  125,   85,   74,   87,   64,  119,
          120,  121,  122,  136,   94,   74,  149,   97,   98,   99,
          145,  146,  102,  103,   64,  105,    9,  140,  108,  109,
          143,  145,  136,   14,   69,  100,  116,  147,  151,   74,
          151,   66,   76,   78,   29,  110,  111,   82,   83,   64,
           85,  146,   87,  148,  119,  120,  121,  122,  145,   94,
           79,   14,   97,   98,   99,  145,  146,  102,  103,  125,
          105,  146,  146,  108,  109,   14,  147,  151,  146,   69,
          100,  116,  147,  145,   74,   75,  143,  146,   78,  146,
          110,  111,   82,   83,   74,   85,   76,   87,   14,  119,
          120,  121,  122,   74,   94,   76,  146,   97,   98,   99,
          145,  146,  102,  103,  149,  105,   14,  151,  108,  109,
           10,   11,  145,  148,   69,   14,  116,  147,  145,   74,
           14,  146,   74,   78,   76,  154,   14,   82,   83,   34,
           85,   52,   87,   70,   71,   64,   45,   46,   66,   94,
           64,   96,   97,   98,   99,  145,  146,  102,  103,   64,
          105,  145,  146,  108,  109,   64,   74,  109,   10,   11,
           12,  116,   74,   72,   73,  145,  146,   76,   69,  145,
          146,   80,   81,   74,   26,   27,   28,   78,   30,   31,
           32,   82,   83,   74,   85,   71,   87,   74,   92,   74,
          145,  146,   74,   94,   74,  147,   97,   98,   99,  151,
           74,  102,  103,   76,  105,   74,   74,  108,  109,   74,
           74,   10,   11,   12,   74,  116,   74,   74,  127,   74,
          129,  130,  131,  132,  133,  134,  135,   26,   27,   28,
           76,   30,  141,  142,   69,   76,  109,   76,   76,   74,
           76,   89,  151,   78,  145,  146,   79,   82,   83,   79,
           85,   79,   87,   93,  127,  128,   76,   89,   89,   94,
           89,   95,   97,   98,   99,  107,   69,  102,  103,   93,
          105,   74,  123,  108,  109,   78,  149,  100,  151,   82,
           83,  116,   85,  100,   87,  100,  104,  106,  125,  109,
          139,   94,  136,  120,   97,   98,   99,  144,  120,  102,
          103,  126,  105,   86,  125,  108,  109,  127,  128,  125,
          145,  146,  126,  116,   -1,   -1,   69,  100,   -1,  145,
           -1,   74,   -1,   -1,   -1,   78,  139,  110,  111,   82,
           83,  151,   85,  139,   87,  139,  119,  120,  121,  122,
          145,   94,  145,  146,   97,   98,   99,   74,    7,  102,
          103,  139,  105,  139,  139,  108,  109,  139,  139,  143,
          147,  150,  152,  116,   14,   15,   16,   17,   18,   19,
           20,   21,   22,   23,   24,   25,   74,  143,  143,  106,
            7,  145,  109,  110,  111,  112,  113,  114,  115,  145,
          145,  145,  145,  146,  145,   74,  123,  124,  145,  145,
          145,  145,  145,    7,   54,   55,  145,  145,  106,  145,
          145,  109,  110,  111,  112,  113,  114,  115,  100,  145,
          147,  148,  145,  147,  146,  123,  124,  106,  110,  111,
          109,  110,  111,  112,  113,  114,  115,  119,  120,  121,
          122,  100,  101,  146,  123,  124,  146,  106,  147,  147,
          148,  110,  111,  146,  146,  146,  146,  146,  146,  146,
          119,  120,  121,  122,  147,  147,  146,  148,  147,  148,
          147,  147,  147,  100,  101,  125,  147,  147,  147,  106,
          147,  140,  147,  110,  111,  147,  147,  150,  147,  149,
          148,  148,  119,  120,  121,  122,  100,  101,  149,  148,
          148,  148,  106,  148,  148,  148,  110,  111,   10,   11,
           12,  148,  148,  140,  148,  119,  120,  121,  122,  148,
          147,  149,  100,  148,   26,   27,   28,  100,   30,   31,
           32,   33,  110,  111,  148,  148,  140,  110,  111,  148,
          100,  119,  120,  121,  122,  100,  119,  120,  121,  122,
          110,  111,  148,  148,  148,  110,  111,  148,  148,  119,
          120,  121,  122,   88,  119,  120,  121,  122,  148,  147,
          149,  148,  148,  148,  147,  100,  148,  148,  148,  153,
          149,  149,  149,  149,  149,  110,  111,  147,  149,  152,
          149,  149,  147,  149,  119,  120,  121,  122,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,   -1,  150,  150,
           -1,   -1,  152,  152,  152,  152,  152,   -1,  152,  152,
          152,  152
    );

    protected static $yybase = array(
            0,  601,  633,  656,  682,  687,    2,  735,  477,  705,
          230,  185,  140,  578,  700,  729,  597,  471,  471,  471,
          471,  265,   -2,   -2,  125,  125,  125,  125,  125,  125,
          125,  125,  305,  125,  305,  425,  457,  359,  215,  260,
          170,  507,  507,  507,  507,  507,  507,  507,  507,  507,
          507,  507,  507,  507,  507,  507,  507,  507,  507,  507,
          507,  507,  507,  507,  507,  507,  507,  507,  507,  507,
          507,  507,  507,  507,  507,  507,  507,  507,  507,  507,
          507,  507,  507,  507,  507,  507,  507,  507,  507,  507,
          507,  507,  507,  507,  507,  507,  507,  507,  507,  507,
          507,  507,  507,  507,  507,  507,  507,  507,  507,  507,
          507,  507,  507,  507,  507,  507,  507,  507,  507,  507,
          507,  507,  507,  507,  507,  507,  507,  507,  507,  507,
          507,  507,  507,  507,  507,  507,  507,  -81,  356,  434,
          435,  537,  534,  525,  524,  681,  632,  609,  694,  702,
          692,  583,  577,  561,  473,  598,  691,  595,  585,  584,
          589,  739,  590,  374,  699,  695,  693,  714,  714,  143,
          143,  143,  143,  143,  143,  143,  143,  143,  143,  143,
          107,  360,   35,   35,   35,   35,   35,   35,   35,   35,
           35,   35,   35,   35,   35,   35,   35,  108,  108,  351,
          351,  351,  351,  351,  351,  351,  351,  351,  351,  351,
          351,  351,  461,  190,  408,  758,  562,  533,  581,    8,
           -5,   -5,   -5,   -5,  610,  121,  121,  121,  121,  225,
           48,  155,  602,  602,  602,  602,  602,  602,  602,  602,
          602,  602,  443,  348,  111,  111,  137,  137,  137,  387,
          387,  387,  387,  440,  146,  -42,  231,  308,  430,  182,
          182,  182,  432,  416,  427,  175,  191,   39,   39,   39,
           -1,   -1,   -1,   -1,  570,   -1,   -1,   -1,  193,  -28,
          -28,  161,  176,  266,  411,   83,  -56,  284,  494,  270,
          -52,  437,  279,  494,  323,  270,  -52,  279,  536,  599,
          280,  454,  210,  129,   64,  405,  102,  431,  163,  233,
          227,  194,  235,  139,  133,   96,  429,  600,  713,  179,
          188,  127,  235,  522,  136,  117,  521,    3,  355,  396,
          403,  442,  424,  355,  669,  355,  342,  355,  332,   84,
          205,  685,  342,  355,  409,  342,  396,  421,  355,  403,
          569,  355,  517,  441,  189,  442,  441,  355,  424,   50,
          665,  664,  728,  651,  626,  603,  647,  395,  568,  433,
          438,  579,  624,  623,  400,  392,  666,  495,  402,  331,
          479,  689,  688,  345,  423,  646,  437,  476,  339,  439,
          690,  478,  439,  733,  413,  475,  456,  444,  516,  366,
          361,  567,  495,  704,  686,  369,  560,  617,  704,  372,
          334,  616,  375,  439,  615,  439,  725,  557,  724,  378,
          593,  495,  336,  331,  689,  688,  339,  339,  339,  723,
          196,  732,  684,  722,  721,  736,  730,  720,  697,  683,
          470,  684,  719,  738,  420,  710,   95,  631,  454,  474,
          380,  515,   75,  737,  439,  439,  570,  265,  701,  422,
          446,  731,  416,  386,  612,  709,  439,  269,  447,  297,
          445,  514,  734,  718,  680,  717,  436,  538,  611,  580,
          311,  716,  513,  352,  591,  635,  509,  506,  670,  414,
          573,  505,  373,  715,  712,  419,  727,  613,  504,  223,
          726,  572,  428,  472,  418,  412,  571,  391,  711,  496,
          455,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,    0,    0,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,  143,  143,  143,
          143,  143,  143,  143,  143,  143,  143,  143,  143,  143,
          143,  143,  143,  143,  143,  143,  143,  143,  143,  143,
          143,  143,  143,  143,  143,  143,  143,  143,  143,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          143,  143,  143,  143,  143,  143,  143,  143,  143,  143,
          143,  143,  143,  143,  143,  143,  143,  143,  143,  137,
          137,  137,  137,  137,  137,  137,  137,  137,  137,  137,
          137,  137,  143,  143,  143,  143,  137,  137,  137,  143,
          143,  143,  143,  143,    0,   39,   39,   39,   39,  137,
          137,  137,  137,  137,  137,  137,  137,  137,  137,  137,
          137,  137,  -97,  -97,   39,   39,    0,    0,    0,  137,
          137,  137,  137,  137,  -28,  -28,  -28,  137,  -28,  216,
          216,  216,  -28,  -28,  -28,  139,  139,    0,    0,    0,
          137,  137,  137,  137,  216,  137,  137,  137,  342,    0,
            0,    0,  216,   75,  235,    0,    0,  495,  342,    0,
            0,  421,    0,  342,    0,    0,    0,    0,  426,  426,
            0,  690,    0,    0,    0,  617,    0,  495,    0,    0,
            0,    0,    0,    0,    0,    0,  495,  267,  267,    0,
            0,    0,    0,   75,    0,    0,   75
    );

    protected static $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  123,  123,  123,  123,  123,  123,
          123,  123,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,  368,  373,  368,32767,  363,  363,  363,  363,  363,
          331,  331,  363,  363,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,  238,  240,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,   74,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  184,  183,  245,
          246,  248,  249,  372,  184,  126,  364,  377,  183,   75,
          209,  211,  264,  210,  187,  192,  193,  194,  195,  196,
          197,  198,  199,  200,  201,  202,  186,  237,  239,  328,
          328,  331,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,  207,  208,  212,  214,  139,  139,  139,  213,
          229,  230,  227,  228,  185,  231,  232,  233,  234,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,  143,32767,  221,  222,  290,  290,32767,  118,
          118,  118,  118,  118,32767,32767,32767,32767,  298,32767,
        32767,32767,32767,32767,  300,32767,32767,  216,  217,  215,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  299,
        32767,32767,32767,32767,  349,  336,  286,32767,32767,32767,
        32767,  279,32767,32767,  108,32767,32767,32767,32767,32767,
        32767,  317,  354,32767,32767,32767,32767,   26,32767,32767,
        32767,  382,  349,32767,  347,32767,   28,32767,32767,32767,
        32767,32767,  353,32767,32767,32767,32767,32767,   70,32767,
        32767,32767,32767,   70,  295,   70,32767,   70,32767,  330,
          330,  301,32767,   70,   83,32767,32767,32767,   70,32767,
        32767,   70,   96,  268,  330,   61,  268,   70,32767,32767,
        32767,32767,    4,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  281,32767,  338,
        32767,  352,  351,  339,32767,32767,  279,32767,  225,  204,
          280,32767,  206,32767,32767,32767,  284,  287,32767,32767,
          135,32767,  282,  190,32767,32767,32767,32767,32767,  261,
        32767,32767,32767,  131,32767,   68,  347,32767,32767,32767,
          347,  283,  348,  236,32767,32767,  218,  219,  220,32767,
          122,32767,  325,32767,32767,32767,32767,32767,32767,  342,
        32767,32767,32767,32767,  347,32767,  112,32767,  317,32767,
        32767,32767,   84,32767,  188,  127,32767,32767,32767,32767,
          335,32767,32767,32767,32767,32767,   69,    4,  176,  347,
        32767,32767,32767,32767,32767,32767,  347,32767,32767,32767,
          116,32767,32767,  181,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,    4,32767,  162,32767,32767,32767,32767,32767,
        32767,   34,   34,    3,  138,    3,  138,  138,  105,   34,
           34,   96,   34,   34,   34,  155,   34,   34,   34,   34
    );

    protected static $yygoto = array(
          175,  175,  175,  175,  175,  175,  175,  175,  167,  175,
          168,  141,  142,  143,  147,  151,  184,  173,  140,  173,
          174,  176,  176,  176,  176,  176,  173,  140,  176,  176,
          169,  170,  171,  172,  182,  753,  754,  388,  756,  780,
          781,  782,  783,  784,  785,  786,  788,  721,  144,  145,
          146,  148,  149,  150,  152,  180,  181,  183,  197,  198,
          212,  213,  214,  215,  219,  220,  221,  222,  223,  225,
          226,  227,  228,  244,  245,  267,  268,  269,  426,  427,
          428,  185,  186,  187,  188,  189,  190,  191,  192,  193,
          194,  195,  153,  154,  155,  156,  177,  157,  178,  158,
          159,  160,  196,  137,  161,  162,  163,  164,  138,  772,
          165,  166,  179,  448,  448,  448,  448,  448,  448,  448,
          448,  448,  448,  448,  448,  448,  538,  538,  538,  655,
          390,  390,  390,  562,  666,  623,  850,  851,  864,  682,
          491,  647,  712,  390,  390,  390,  390,  390,  390,  390,
          390,  390,  390,  390,  390,  390,  537,  537,  537,  418,
          810,  810,  390,  649,  649,  649,  649,  649,  403,  904,
          629,  503,  433,  434,  437,  442,  473,  475,  493,  391,
          391,  391,  304,  859,  615,  615,  615,  615,  905,  482,
          616,  489,  391,  391,  391,  391,  391,  391,  391,  391,
          391,  391,  391,  391,  391,  469,  469,  469,  900,  395,
          395,  391,  586,  587,  588,  882,  882,  424,  454,  314,
          413,  415,  415,  389,  392,  416,  420,  444,  455,  466,
          476,  449,  449,  449,  449,  449,  449,  449,  449,  449,
          449,  449,  449,  449,  848,  848,  848,  848,  848,  848,
          848,  848,  848,  848,  848,  848,  848,  264,    1,  287,
            2,  256,  881,  881,  425,  481,  536,  536,  536,  307,
          458,  465,  508,  318,  307,  897,  897,  897,  396,  396,
          633,  619,  617,  617,  617,  617,  518,  639,  637,    5,
          880,  862,  283,  323,  326,  765,    6,    7,  423,    8,
            9,   10,  645,   11,   12,   13,   14,  908,  908,  672,
          327,  554,  305,  658,  407,  911,  908,  402,  397,  397,
          414,  822,  821,  316,  719,  241,  421,  550,  459,  217,
          218,  911,  911,  546,  492,  435,  436,  438,  440,  801,
          560,  443,  472,  312,  312,  312,  622,  596,  663,  490,
            0,  299,    0,  710,    0,    0,    0,    0,  312,    0,
            0,    0,    0,    0,    0,    0,  322,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,  408
    );

    protected static $yygcheck = array(
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   37,   37,   37,   37,   37,   37,   37,
           37,   37,   37,   37,   37,   37,    7,    7,    7,   55,
           37,   37,   37,   16,   16,   16,   16,   16,   16,   16,
           16,   16,   16,   37,   37,   37,   37,   37,   37,   37,
           37,   37,   37,   37,   37,   37,    6,    6,    6,   75,
           37,   37,   37,   37,   37,   37,   37,   37,   76,  101,
           47,   37,   53,   53,   53,   53,   53,   53,   53,   87,
           87,   87,   26,  101,   37,   37,   37,   37,  110,   37,
           37,   37,   87,   87,   87,   87,   87,   87,   87,   87,
           87,   87,   87,   87,   87,   28,   28,   28,  108,   87,
           87,   87,   29,   29,   29,   88,   88,   88,   28,   28,
           28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
           28,   91,   91,   91,   91,   91,   91,   91,   91,   91,
           91,   91,   91,   91,   98,   98,   98,   98,   98,   98,
           98,   98,   98,   98,   98,   98,   98,   97,    2,    4,
            2,   97,   89,   89,   89,   99,    5,    5,    5,    4,
           38,   38,   38,   27,    4,   89,   89,   89,   91,   91,
            5,    5,    5,    5,    5,    5,    5,    5,    5,   17,
           89,  102,   42,   42,   42,   77,   17,   17,   78,   17,
           17,   17,   51,   17,   17,   17,   17,  111,  111,   61,
           61,   14,   30,   56,   30,  111,  111,    4,   94,   94,
           30,   96,   96,    4,   76,   30,    4,   13,   30,   40,
           40,  111,  111,   12,   30,   90,   90,   90,   90,   86,
           15,   90,   90,   95,   95,   95,   43,   36,   57,   83,
           -1,   44,   -1,   74,   -1,   -1,   -1,   -1,   95,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   95,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   76
    );

    protected static $yygbase = array(
            0,    0, -255,    0,  -19,  265,  155,  125,    0,    0,
            0,    0,   38,   30,   18,   -6,  -69, -223,    0,  -24,
            0,    0,    0,    0,    0,    0,  138,   40,  -11,  194,
          -23,    0,    0,    0,    0,    0,   -8,  -86,   20,    0,
         -187,    0,   21,   -3, -170,    0,    0,  136,    0,    0,
            0,   49,    0,  147,    0,   96,   17,    1,    0,    0,
            0,   67,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,   -5,  116,   95,   48,   50,    0,
            0,    0,    0,   -7,    0,    0,    6,  -37,  -31,   16,
          289,   32,    0,    0,   72,   84,   61,   -1,   45,   65,
            0, -171,   90,    0,    0,    0,    0,    0,  158,    0,
          137,   52,    0
    );

    protected static $yygdefault = array(
        -32768,  359,    3,  532,  377,  565,  566,  567,  308,  306,
          303,  320,  547,  551,  555,  561,  460,    4,  563,  139,
          294,  570,  571,  572,  309,  310,  499,  317,  224,  585,
          495,  132,  494,  315,  589,  355,  595,  301,  445,  378,
          216,  417,  452,  621,  298,  627,  500,  630,  636,-32768,
          446,  644,  351,  429,  430,  654,  659,  664,  667,  470,
          242,  671,  332,  324,  676,  679,  471,  257,  686,  504,
          505,-32768,-32768,-32768,  709,  393,  720,  341,  379,  787,
          789,  394,  404,  479,  797,  325,  800,  380,  381,  382,
          431,  818,  815,  286,  867,  284,  439,  255,  854,  461,
          354,  899,  863,  285,  383,  384,  302,  339,  901,  340,
          906,  910,  453
    );

    protected static $yylhs = array(
            0,    1,    2,    2,    4,    4,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,   10,   10,   12,   12,
           11,   11,   13,   13,    8,    8,   14,   14,   14,   14,
            9,    9,   15,   17,   17,   18,   18,   18,   18,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,   35,   35,   36,   27,   27,
           30,   30,   31,   31,   32,   32,    6,    7,    7,    7,
           39,   39,   39,   41,   41,   42,   42,   29,   29,   34,
           34,   33,   33,   43,   23,   23,   44,   44,   45,   46,
           46,   47,   47,   22,   22,   20,   20,   48,   21,   21,
           49,   49,   38,   38,   50,   50,   51,   51,   52,   52,
           52,   52,   53,   53,   54,   54,   55,   55,   24,   24,
           56,   56,   56,   25,   25,   57,   57,   40,   40,   59,
           59,   60,   60,   62,   62,   58,   58,   58,   58,   58,
           58,   58,   66,   65,   65,   67,   67,   68,   68,   68,
           68,   69,   70,   70,   64,   64,   71,   71,   71,   71,
           73,   73,   72,   61,   61,   61,   61,   61,   61,   63,
           63,   74,   74,   26,   26,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   76,   83,   83,
           85,   85,   86,   78,   78,   78,   78,   78,   78,   91,
           91,   37,   37,   37,   77,   77,   92,   92,   87,   87,
           93,   93,   93,   93,   93,   79,   79,   79,   82,   82,
           82,   84,   84,   98,   98,   98,   98,   98,   98,   98,
           98,   98,   98,   98,   98,   98,   98,   98,   16,   16,
           16,   16,   16,   16,   80,   80,   80,   80,   99,   99,
          101,  101,  100,  100,  102,  102,   28,   28,   28,   28,
          104,  104,  103,  103,  103,  103,  103,  105,  105,   89,
           89,   94,   94,   88,   88,  106,  106,  106,  106,   95,
           95,   95,   95,   90,   90,   96,   96,   96,   75,   75,
          107,  107,  108,   81,   81,  109,  109,  110,   97,   97,
           97,   97,  111,  111,  111,  111,  111,  111,  111,  112,
          112,  112
    );

    protected static $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            3,    5,    4,    3,    3,    5,    3,    1,    1,    1,
            3,    1,    1,    1,    3,    1,    1,    3,    2,    4,
            3,    1,    3,    2,    0,    1,    1,    1,    1,    3,
            7,    5,    5,    2,    3,    2,    3,    2,    3,    3,
            3,    3,    1,    2,    5,    7,    8,   10,   10,    5,
            1,    5,    3,    3,    2,    1,    2,    8,    1,    3,
            0,    1,    1,    1,    0,    2,    9,    5,    6,    5,
            1,    2,    2,    0,    2,    1,    3,    1,    4,    1,
            4,    1,    3,    3,    3,    4,    0,    2,    7,    3,
            1,    1,    1,    1,    4,    0,    2,    5,    0,    2,
            0,    3,    1,    0,    1,    3,    3,    5,    0,    1,
            1,    1,    1,    0,    1,    3,    1,    2,    3,    1,
            1,    2,    4,    3,    1,    1,    3,    2,    0,    0,
            1,    1,    2,    1,    1,    3,    8,    3,    3,    3,
            4,    2,    3,    1,    3,    0,    2,    4,    5,    4,
            4,    3,    1,    1,    1,    3,    2,    3,    4,    2,
            1,    3,    4,    1,    1,    1,    1,    1,    1,    1,
            3,    1,    3,    3,    1,    1,    5,    3,    4,    4,
            1,    2,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    2,    2,    2,    2,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    2,    2,    2,    2,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    2,    3,
            2,    3,    8,    4,    4,    2,    2,    4,    2,    2,
            2,    2,    2,    2,    2,    2,    2,    2,    2,    1,
            4,    3,    3,    3,    2,    9,   10,    3,    0,    4,
            1,    3,    2,    4,    6,    8,    4,    4,    4,    1,
            1,    1,    2,    3,    1,    1,    1,    1,    1,    1,
            0,    3,    3,    4,    4,    0,    2,    3,    0,    1,
            1,    0,    3,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    3,    2,    1,    1,    3,
            2,    2,    4,    3,    1,    3,    3,    3,    0,    2,
            0,    1,    3,    1,    3,    1,    1,    1,    1,    1,
            6,    4,    3,    6,    4,    4,    4,    1,    3,    1,
            2,    1,    1,    4,    1,    3,    6,    4,    4,    4,
            4,    1,    4,    0,    1,    1,    3,    1,    0,    2,
            3,    1,    1,    0,    2,    3,    1,    3,    2,    2,
            1,    2,    1,    4,    3,    3,    3,    6,    3,    1,
            1,    1
    );

    protected $yyval;
    protected $yyastk;
    protected $yysp;
    protected $lexer;

    /**
     * Parses PHP code into a node tree.
     *
     * @param PHPParser_Lexer $lexer A lexer
     *
     * @return array Array of statements
     */
    public function parse(PHPParser_Lexer $lexer) {
        $this->lexer  = $lexer;

        $this->yysp   = 0;                   // Stack pos
        $yysstk       = array($yystate = 0); // State stack
        $this->yyastk = array();             // AST   stack (?)
        $yylstk       = array($yyline  = 1); // Line  stack
        $yydstk       = array($yyDC = null); // Doc comment stack

        $yychar       = -1;

        for (;;) {
            if (self::$yybase[$yystate] == 0) {
                $yyn = self::$yydefault[$yystate];
            } else {
                if ($yychar < 0) {
                    if (($yychar = $lexer->lex($yylval, $yyline, $yyDC)) < 0)
                        $yychar = 0;
                    $yychar = $yychar < self::YYMAXLEX ?
                        self::$yytranslate[$yychar] : self::YYBADCH;
                    $yylstk[$this->yysp] = $yyline;
                    $yydstk[$this->yysp] = $yyDC;
                }
                if ((($yyn = self::$yybase[$yystate] + $yychar) >= 0
                     && $yyn < self::YYLAST && self::$yycheck[$yyn] == $yychar
                     || ($yystate < self::YY2TBLSTATE
                        && ($yyn = self::$yybase[$yystate + self::YYNLSTATES]
                            + $yychar) >= 0
                        && $yyn < self::YYLAST
                        && self::$yycheck[$yyn] == $yychar))
                    && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT) {
                    /*
                     * >= YYNLSTATE: shift and reduce
                     * > 0: shift
                     * = 0: accept
                     * < 0: reduce
                     * = -YYUNEXPECTED: error
                     */
                    if ($yyn > 0) {
                        /* shift */
                        ++$this->yysp;

                        $yysstk[$this->yysp]       = $yystate = $yyn;
                        $this->yyastk[$this->yysp] = $yylval;
                        $yylstk[$this->yysp]       = $yyline;
                        $yydstk[$this->yysp]       = $yyDC;
                        $yychar = -1;

                        if ($yyn < self::YYNLSTATES)
                            continue;

                        /* $yyn >= YYNLSTATES means shift-and-reduce */
                        $yyn -= self::YYNLSTATES;
                    } else {
                        $yyn = -$yyn;
                    }
                } else {
                    $yyn = self::$yydefault[$yystate];
                }
            }

            for (;;) {
                /* reduce/error */
                if ($yyn == 0) {
                    /* accept */
                    return $this->yyval;
                } elseif ($yyn != self::YYUNEXPECTED) {
                    /* reduce */
                    try {
                        $this->{'yyn' . $yyn}(
                            $yylstk[$this->yysp - self::$yylen[$yyn]],
                            $yydstk[$this->yysp - self::$yylen[$yyn]]
                        );
                    } catch (PHPParser_Error $e) {
                        if (-1 === $e->getRawLine()) {
                            $e->setRawLine($yyline);
                        }

                        throw $e;
                    }

                    /* Goto - shift nonterminal */
                    $this->yysp -= self::$yylen[$yyn];
                    $yyn = self::$yylhs[$yyn];
                    if (($yyp = self::$yygbase[$yyn] + $yysstk[$this->yysp]) >= 0
                         && $yyp < self::YYGLAST
                         && self::$yygcheck[$yyp] == $yyn) {
                        $yystate = self::$yygoto[$yyp];
                    } else {
                        $yystate = self::$yygdefault[$yyn];
                    }

                    ++$this->yysp;

                    $yysstk[$this->yysp] = $yystate;
                    $this->yyastk[$this->yysp] = $this->yyval;
                    $yylstk[$this->yysp]       = $yyline;
                    $yydstk[$this->yysp]       = $yyDC;
                } else {
                    /* error */
                    throw new PHPParser_Error(
                        'Unexpected token ' . self::$yyterminals[$yychar],
                        $yyline
                    );
                }

                if ($yystate < self::YYNLSTATES)
                    break;
                /* >= YYNLSTATES means shift-and-reduce */
                $yyn = $yystate - self::YYNLSTATES;
            }
        }
    }

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn1($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Namespace::postprocess($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn2($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn3($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn4($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn5($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn6($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn7($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn8($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn9($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_HaltCompiler($this->lexer->handleHaltCompiler(), $line, $docComment); 
    }

    protected function yyn10($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn11($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(5-2)], $line, $docComment), $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn12($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn13($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Use($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn14($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Const($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn15($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Imports($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn16($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn17($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn18($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ImportPath($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn19($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ImportPath($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn20($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn21($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn22($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Import($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn23($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Import($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn24($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn25($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn26($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn27($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-1)], $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn28($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(2-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn29($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(4-2)], $line, $docComment), $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn30($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn31($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn32($line, $docComment) {
         $this->yyval = new PHPParser_Node_Const($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn33($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn34($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn35($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn36($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn37($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn38($line, $docComment) {
         throw new PHPParser_Error('__halt_compiler() can only be used from the outermost scope'); 
    }

    protected function yyn39($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn40($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(7-3)], array('stmts' => is_array($this->yyastk[$this->yysp-(7-5)]) ? $this->yyastk[$this->yysp-(7-5)] : array($this->yyastk[$this->yysp-(7-5)]), 'elseifs' => $this->yyastk[$this->yysp-(7-6)], 'else' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn41($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_While($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn42($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Switch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn43($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break(null, $line, $docComment); 
    }

    protected function yyn44($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn45($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue(null, $line, $docComment); 
    }

    protected function yyn46($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn47($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return(null, $line, $docComment); 
    }

    protected function yyn48($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn49($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Global($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn50($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Static($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn51($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Echo($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn52($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_InlineHTML($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn53($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn54($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Unset($this->yyastk[$this->yysp-(5-3)], $line, $docComment); 
    }

    protected function yyn55($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-3)], array('keyVar' => null, 'byRef' => false, 'stmts' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn56($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-4)], array('keyVar' => null, 'byRef' => true, 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn57($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(10-8)], $this->yyastk[$this->yysp-(10-6)], array('keyVar' => $this->yyastk[$this->yysp-(10-3)], 'byRef' => $this->yyastk[$this->yysp-(10-5)], 'stmts' => $this->yyastk[$this->yysp-(10-10)]), $line, $docComment); 
    }

    protected function yyn58($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ForNumeric($this->yyastk[$this->yysp-(10-3)], $this->yyastk[$this->yysp-(10-5)], $this->yyastk[$this->yysp-(10-7)], $this->yyastk[$this->yysp-(10-10)], $this->yyastk[$this->yysp-(10-6)], $this->yyastk[$this->yysp-(10-8)], $line, $docComment); 
    }

    protected function yyn59($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Declare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn60($line, $docComment) {
         $this->yyval = array(); /* means: n statement */ 
    }

    protected function yyn61($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TryCatch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn62($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Throw($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn63($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Goto($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn64($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Label($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn65($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn66($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn67($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Catch($this->yyastk[$this->yysp-(8-3)], substr($this->yyastk[$this->yysp-(8-4)], 1), $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn68($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn69($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn70($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn71($line, $docComment) {
         $this->yyval = true; 
    }

    protected function yyn72($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn73($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn74($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn75($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn76($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Function($this->yyastk[$this->yysp-(9-3)], array('byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-5)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn77($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Class($this->yyastk[$this->yysp-(5-2)], array('type' => $this->yyastk[$this->yysp-(5-1)], 'stmts' => $this->yyastk[$this->yysp-(5-4)]), $line, $docComment); 
    }

    protected function yyn78($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Interface($this->yyastk[$this->yysp-(6-2)], array('extends' => $this->yyastk[$this->yysp-(6-3)], 'stmts' => $this->yyastk[$this->yysp-(6-5)]), $line, $docComment); 
    }

    protected function yyn79($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Trait($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn80($line, $docComment) {
         $this->yyval = 0; 
    }

    protected function yyn81($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn82($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn83($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn84($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn85($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn86($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn87($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn88($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn89($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn90($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn91($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn92($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn93($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn94($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn95($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn96($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn97($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn98($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Case($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)], $line, $docComment); 
    }

    protected function yyn99($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn100($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn101($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn102($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('default', $line, $docComment); 
    }

    protected function yyn103($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn104($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn105($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn106($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn107($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(5-3)], is_array($this->yyastk[$this->yysp-(5-5)]) ? $this->yyastk[$this->yysp-(5-5)] : array($this->yyastk[$this->yysp-(5-5)]), $line, $docComment); 
    }

    protected function yyn108($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn109($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(is_array($this->yyastk[$this->yysp-(2-2)]) ? $this->yyastk[$this->yysp-(2-2)] : array($this->yyastk[$this->yysp-(2-2)]), $line, $docComment); 
    }

    protected function yyn110($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn111($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn112($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn113($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn114($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn115($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn116($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn117($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $line, $docComment); 
    }

    protected function yyn118($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn119($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn120($line, $docComment) {
         $this->yyval = 'array'; 
    }

    protected function yyn121($line, $docComment) {
         $this->yyval = 'callable'; 
    }

    protected function yyn122($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn123($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn124($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn125($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn126($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(1-1)], false, $line, $docComment); 
    }

    protected function yyn127($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(2-2)], true, $line, $docComment); 
    }

    protected function yyn128($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn129($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn130($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn131($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn132($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn133($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn134($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn135($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn136($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn137($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn138($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn139($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn140($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn141($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn142($line, $docComment) {
         PHPParser_Node_Stmt_Class::verifyModifier($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); $this->yyval = $this->yyastk[$this->yysp-(2-1)] | $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn143($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn144($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn145($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn146($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassMethod($this->yyastk[$this->yysp-(8-4)], array('type' => $this->yyastk[$this->yysp-(8-1)], 'byRef' => $this->yyastk[$this->yysp-(8-3)], 'params' => $this->yyastk[$this->yysp-(8-6)], 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn147($line, $docComment) {
         $this->yyval = new Snowscript_Node_Stmt_Extends($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn148($line, $docComment) {
         $this->yyval = new Snowscript_Node_Stmt_Implements($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn149($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUse($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn150($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignClassProperty($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn151($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn152($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassConst($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn153($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn154($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn155($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn156($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn157($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Precedence($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn158($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(5-1)][0], $this->yyastk[$this->yysp-(5-1)][1], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn159($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], null, $line, $docComment); 
    }

    protected function yyn160($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn161($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
    }

    protected function yyn162($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn163($line, $docComment) {
         $this->yyval = array(null, $this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn164($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn165($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn166($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn167($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
    }

    protected function yyn168($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
    }

    protected function yyn169($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn170($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn171($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn172($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(4-2)], $line, $docComment); 
    }

    protected function yyn173($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn174($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED; 
    }

    protected function yyn175($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE; 
    }

    protected function yyn176($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_STATIC; 
    }

    protected function yyn177($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn178($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn179($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn180($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn181($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn182($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn183($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn184($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn185($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn186($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignList($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn187($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn188($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignRef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn189($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn190($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn191($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Clone($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn192($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignPlus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn193($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMinus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn194($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn195($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignDiv($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn196($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignConcat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn197($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn198($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn199($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn200($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn201($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn202($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn203($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostInc($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn204($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreInc($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn205($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostDec($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn206($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreDec($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn207($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn208($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn209($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn210($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn211($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn212($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn213($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn214($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn215($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Concat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn216($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Plus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn217($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Minus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn218($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn219($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Div($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn220($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn221($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn222($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn223($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn224($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn225($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn226($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn227($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Identical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn228($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotIdentical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn229($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Equal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn230($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn231($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Smaller($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn232($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_SmallerOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn233($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Greater($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn234($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_GreaterOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn235($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Instanceof($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn236($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_Receiver($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn237($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceIsset($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn238($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceIsset($this->yyastk[$this->yysp-(2-1)], false, $line, $docComment); 
    }

    protected function yyn239($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceNotEmpty($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn240($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceNotEmpty($this->yyastk[$this->yysp-(2-1)], false, $line, $docComment); 
    }

    protected function yyn241($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn242($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-8)], $line, $docComment); 
    }

    protected function yyn243($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Isset($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn244($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Empty($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn245($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE, $line, $docComment); 
    }

    protected function yyn246($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE_ONCE, $line, $docComment); 
    }

    protected function yyn247($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Eval($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn248($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE, $line, $docComment); 
    }

    protected function yyn249($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE_ONCE, $line, $docComment); 
    }

    protected function yyn250($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Int($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn251($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Double($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn252($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_String($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn253($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Array($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn254($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Object($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn255($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Bool($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn256($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Unset($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn257($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Exit($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn258($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ErrorSuppress($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn259($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn260($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn261($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn262($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_Dict($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn263($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShellExec($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn264($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Print($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn265($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => false, 'byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-4)], 'uses' => $this->yyastk[$this->yysp-(9-6)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn266($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => true, 'byRef' => $this->yyastk[$this->yysp-(10-3)], 'params' => $this->yyastk[$this->yysp-(10-5)], 'uses' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-9)]), $line, $docComment); 
    }

    protected function yyn267($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn268($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn269($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn270($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn271($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn272($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(2-2)], 1), $this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn273($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn274($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn275($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn276($line, $docComment) {
        
            if ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_StaticPropertyFetch) {
                $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(4-1)]->class, new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-1)]->name, $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
            } elseif ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                $tmp = $this->yyastk[$this->yysp-(4-1)];
                while ($tmp->var instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new PHPParser_Node_Expr_StaticCall($tmp->var->class, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
                $tmp->var = new PHPParser_Node_Expr_Variable($tmp->var->name, $line, $docComment);
            } else {
                throw new Exception;
            }
          
    }

    protected function yyn277($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn278($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn279($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('static', $line, $docComment); 
    }

    protected function yyn280($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn281($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn282($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_FullyQualified($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn283($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_Relative($this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn284($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn285($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn286($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn287($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn288($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn289($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn290() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn291($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn292($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn293($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn294($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn295($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn296($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn297($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn298($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn299($line, $docComment) {
         $this->yyval = array(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(1-1)], '`')); 
    }

    protected function yyn300($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(1-1)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn301($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn302($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn303($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber(PHPParser_Node_Scalar_LNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn304($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DNumber(PHPParser_Node_Scalar_DNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn305($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], "'", $line, $docComment); 
    }

    protected function yyn306($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], '"', $line, $docComment); 
    }

    protected function yyn307($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LineConst($line, $docComment); 
    }

    protected function yyn308($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FileConst($line, $docComment); 
    }

    protected function yyn309($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DirConst($line, $docComment); 
    }

    protected function yyn310($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_ClassConst($line, $docComment); 
    }

    protected function yyn311($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_TraitConst($line, $docComment); 
    }

    protected function yyn312($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_MethodConst($line, $docComment); 
    }

    protected function yyn313($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FuncConst($line, $docComment); 
    }

    protected function yyn314($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_NSConst($line, $docComment); 
    }

    protected function yyn315($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String(PHPParser_Node_Scalar_String::parseDocString($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]), $line, $docComment); 
    }

    protected function yyn316($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String('', $line, $docComment); 
    }

    protected function yyn317($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn318($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn319($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn320($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn321($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn322($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn323($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn324($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn325($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn326($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '"'); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn327($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, null); } } $s = preg_replace('~(\r\n|\n|\r)$~', '', $s); if ('' === $s) array_pop($this->yyastk[$this->yysp-(3-2)]);; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn328($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn329($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn330() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn331() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn332($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn333($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn334($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn335($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn336($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn337($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn338($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn339($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn340($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn341($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn342($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn343($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_MethodCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn344($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn345($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn346($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn347($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn348($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn349($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn350($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn351($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn352($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn353($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn354($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn355($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment); 
    }

    protected function yyn356($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn357($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn358($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn359($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn360($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn361($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn362($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn363($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn364($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn365($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn366($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn367($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn368($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn369($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn370($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn371($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn372($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn373($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn374($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn375($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn376($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn377($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_DictItem($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn378($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn379($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn380($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn381($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn382($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn383($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(4-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn384($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(3-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn385($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn386($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn387($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(6-2)], $line, $docComment), $this->yyastk[$this->yysp-(6-4)], $line, $docComment); 
    }

    protected function yyn388($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn389($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn390($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn391($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }
}
