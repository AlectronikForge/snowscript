<?php

/* This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *  * the grammar file grammar/zend_language_parser.phpy
 *  * the parser skeleton grammar/kymacc.php.parser
 *  * the preprocessing script grammar/rebuildParser.php
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */
class PHPParser_Parser
{
    const YYBADCH      = 149;
    const YYMAXLEX     = 387;
    const YYTERMS      = 149;
    const YYNONTERMS   = 106;
    const YYLAST       = 886;
    const YY2TBLSTATE  = 326;
    const YYGLAST      = 429;
    const YYSTATES     = 776;
    const YYNLSTATES   = 534;
    const YYINTERRTOK  = 1;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    // {{{ Tokens
    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_LOGICAL_OR = 262;
    const T_LOGICAL_XOR = 263;
    const T_LOGICAL_AND = 264;
    const T_PRINT = 265;
    const T_PLUS_EQUAL = 266;
    const T_MINUS_EQUAL = 267;
    const T_MUL_EQUAL = 268;
    const T_DIV_EQUAL = 269;
    const T_CONCAT_EQUAL = 270;
    const T_MOD_EQUAL = 271;
    const T_AND_EQUAL = 272;
    const T_OR_EQUAL = 273;
    const T_XOR_EQUAL = 274;
    const T_SL_EQUAL = 275;
    const T_SR_EQUAL = 276;
    const T_BOOLEAN_OR = 277;
    const T_BOOLEAN_AND = 278;
    const T_IS_EQUAL = 279;
    const T_IS_NOT_EQUAL = 280;
    const T_IS_IDENTICAL = 281;
    const T_IS_NOT_IDENTICAL = 282;
    const T_IS_SMALLER_OR_EQUAL = 283;
    const T_IS_GREATER_OR_EQUAL = 284;
    const T_SL = 285;
    const T_SR = 286;
    const T_INSTANCEOF = 287;
    const T_INC = 288;
    const T_DEC = 289;
    const T_INT_CAST = 290;
    const T_DOUBLE_CAST = 291;
    const T_STRING_CAST = 292;
    const T_ARRAY_CAST = 293;
    const T_OBJECT_CAST = 294;
    const T_BOOL_CAST = 295;
    const T_UNSET_CAST = 296;
    const T_NEW = 297;
    const T_CLONE = 298;
    const T_EXIT = 299;
    const T_IF = 300;
    const T_ELSEIF = 301;
    const T_ELSE = 302;
    const T_ENDIF = 303;
    const T_LNUMBER = 304;
    const T_DNUMBER = 305;
    const T_STRING = 306;
    const T_STRING_VARNAME = 307;
    const T_VARIABLE = 308;
    const T_NUM_STRING = 309;
    const T_INLINE_HTML = 310;
    const T_CHARACTER = 311;
    const T_BAD_CHARACTER = 312;
    const T_ENCAPSED_AND_WHITESPACE = 313;
    const T_CONSTANT_ENCAPSED_STRING = 314;
    const T_ECHO = 315;
    const T_DO = 316;
    const T_WHILE = 317;
    const T_ENDWHILE = 318;
    const T_ENDFOR = 319;
    const T_FOR = 320;
    const T_ENDFOREACH = 321;
    const T_DECLARE = 322;
    const T_ENDDECLARE = 323;
    const T_AS = 324;
    const T_TO = 325;
    const T_DOWNTO = 326;
    const T_STEP = 327;
    const T_IN = 328;
    const T_SWITCH = 329;
    const T_ENDSWITCH = 330;
    const T_CASE = 331;
    const T_DEFAULT = 332;
    const T_BREAK = 333;
    const T_CONTINUE = 334;
    const T_GOTO = 335;
    const T_FUNCTION = 336;
    const T_CONST = 337;
    const T_RETURN = 338;
    const T_TRY = 339;
    const T_CATCH = 340;
    const T_THROW = 341;
    const T_USE = 342;
    const T_INSTEADOF = 343;
    const T_GLOBAL = 344;
    const T_STATIC = 345;
    const T_ABSTRACT = 346;
    const T_FINAL = 347;
    const T_PRIVATE = 348;
    const T_PROTECTED = 349;
    const T_PUBLIC = 350;
    const T_VAR = 351;
    const T_UNSET = 352;
    const T_ISSET = 353;
    const T_EMPTY = 354;
    const T_HALT_COMPILER = 355;
    const T_CLASS = 356;
    const T_TRAIT = 357;
    const T_INTERFACE = 358;
    const T_EXTENDS = 359;
    const T_IMPLEMENTS = 360;
    const T_OBJECT_OPERATOR = 361;
    const T_DOUBLE_ARROW = 362;
    const T_LIST = 363;
    const T_ARRAY = 364;
    const T_CALLABLE = 365;
    const T_CLASS_C = 366;
    const T_TRAIT_C = 367;
    const T_METHOD_C = 368;
    const T_FUNC_C = 369;
    const T_LINE = 370;
    const T_FILE = 371;
    const T_COMMENT = 372;
    const T_DOC_COMMENT = 373;
    const T_OPEN_TAG = 374;
    const T_OPEN_TAG_WITH_ECHO = 375;
    const T_CLOSE_TAG = 376;
    const T_WHITESPACE = 377;
    const T_START_HEREDOC = 378;
    const T_END_HEREDOC = 379;
    const T_DOLLAR_OPEN_CURLY_BRACES = 380;
    const T_CURLY_OPEN = 381;
    const T_PAAMAYIM_NEKUDOTAYIM = 382;
    const T_NAMESPACE = 383;
    const T_NS_C = 384;
    const T_DIR = 385;
    const T_NS_SEPARATOR = 386;
    // }}}

    protected static $yyterminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "'?'",
        "':'",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_ENDIF",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_CONSTANT_ENCAPSED_STRING",
        "T_ECHO",
        "T_DO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_TO",
        "T_DOWNTO",
        "T_STEP",
        "T_IN",
        "T_SWITCH",
        "T_CASE",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_LIST",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "'$'",
        "']'",
        "'`'",
        "'\"'"
        , "???"
    );

    protected static $yytranslate = array(
            0,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,   47,  148,  149,  145,   46,   30,  149,
          143,  144,   44,   41,    7,   42,   43,   45,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,   25,  140,
           35,   12,   37,   24,   59,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,   60,  149,  146,   29,  149,  147,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  141,   28,  142,   49,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,    1,    2,    3,    4,
            5,    6,    8,    9,   10,   11,   13,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   26,   27,   31,
           32,   33,   34,   36,   38,   39,   40,   48,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   61,   62,   63,
           64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
           74,  149,  149,   75,   76,   77,   78,   79,   80,  149,
           81,   82,   83,   84,   85,   86,   87,   88,   89,   90,
          149,   91,  149,   92,   93,   94,   95,   96,   97,   98,
           99,  100,  101,  102,  103,  104,  105,  106,  107,  108,
          109,  110,  111,  112,  113,  114,  115,  116,  117,  118,
          119,  120,  121,  122,  123,  124,  125,  126,  127,  128,
          129,  130,  149,  149,  149,  149,  149,  149,  131,  132,
          133,  134,  135,  136,  137,  138,  139
    );

    protected static $yyaction = array(
           57,   58,  361,   59,   60,-32766,-32766,-32766,   38,   61,
          695,  696,  697,  694,  693,  692,-32766,-32766,-32766,    0,
          538,-32766,   51,-32766,-32766,-32766,-32766,-32766,-32767,-32767,
        -32767,-32767,-32766,   39,-32766,-32766,-32766,-32766,-32766,   62,
           63,  333,  599,  600,  344,   64,  514,   65,  234,  235,
           66,   67,   68,   69,   70,   71,   72,   73,   28,  248,
           74,  334,  362,-32766,-32766,-32766,  817,  818,  363,  895,
          874,  201,  579,  292,  819,   48,   25,  364,  295,  365,
          350,  366,-32766,-32766,-32766,-32766,  388,  254,  367,  336,
           40,   41,  368,  337,  277,   42,  369,  335,   75,-32766,
           20,  290,  291,  118,  347,   33,  349,  370,  371,  372,
          373,  374,  905,  128,  907,  906,  563,  607,  375,  376,
          377,  378,   54,  823,  824,  825,  826,  820,  821,  255,
          132,   82,   83,   84,  388,  827,  822,  336,  587,  512,
          123,   76,  839,  275,  330,  259,  263,   45,  346,   85,
           86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
           96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
          308,  249,  660,  103,  104,  105,  228,  249,  783,-32766,
          335,  328,  261,  650,  651,  538,  289,  359,  127,-32766,
          370,  371,-32766,-32766,-32766,  902,-32766,   50,-32766,  543,
          607,  375,  376,  120, -109,-32766,  547,-32766,-32766,-32766,
        -32766,  576,-32766,-32766,  242,-32766,  538,   19,-32766,  387,
        -32766,  279,  229,-32766,-32766,-32766,-32766,-32766,  236,-32766,
          511,   44,  238,  100,  101,  102,-32766,  577,-32766,-32766,
        -32766,-32766,-32766,-32766,-32766,  231,-32766,   53,  485,-32766,
          387,-32766,-32766,-32766,  432,-32766,-32766,-32766,  868,  240,
          464,  874,-32766,  335,  502,  121,  441,-32766,  538,-32766,
        -32766,-32766,-32766,  370,  371,-32766,-32766,-32766,  117,-32766,
          202,-32766,  563,  607,  375,  376,-32766,-32766,-32766,  203,
        -32766,-32766,-32766,-32766,  335,-32766,-32766,  264,-32766,  538,
          679,-32766,  387,-32766,  370,  371,-32766,-32766,-32766,-32766,
        -32766,  241,-32766,  563,  607,  375,  376,  829,  204,-32766,
          669,-32766,-32766,-32766,  529,  124,-32766,-32766,  119,-32766,
          878,  283,-32766,  387,  275,  486,  674,  124,-32766,-32766,
        -32766,  564,  208,  282,  130,-32766,  335,  209,  458,  532,
          895,  538,  484,   26,  829,-32766,  370,  371,-32766,-32766,
        -32766,  591,-32766,  129,-32766,  563,  607,  375,  376,-32766,
        -32766,-32766,  518,-32766,-32766,-32766,-32766,  335,-32766,-32766,
          520,-32766,  538,  521,-32766,  387,-32766,  370,  371,-32766,
        -32766,-32766,-32766,-32766,  524,-32766,  563,  607,  375,  376,
          239,  125,-32766,  422,-32766,-32766,-32766,  840,  598,-32766,
        -32766,  249,-32766,  492,  493,-32766,  387,  650,  651,  684,
          533,-32766,-32766,-32766,  603,  544,  516,   49,   52,-32766,
          343,-32766,-32766,-32766,   55,  538,  317,  673,  527,-32766,
          248,  345,-32766,-32766,-32766,  399,-32766,-32766,-32766,-32766,
        -32766,  499,-32766,-32766, -152,-32766,  810,-32766,-32766,-32766,
        -32766,  335,-32766,-32766,  400,-32766,  538,  402,-32766,  387,
        -32766,  370,  371,-32766,-32766,-32766,-32766,-32766,  411,-32766,
          563,  607,  375,  376,  412,  498,-32766,  510,-32766,-32766,
        -32766,  538,  539,-32766,-32766,  552,-32766,  900,  554,-32766,
          387,-32766,-32766,-32766,  832,-32766,-32766,-32766,  779,  681,
          401,  280,-32766,  480,-32766,-32766,-32766,-32766,  538,-32766,
          281,  482,-32766,  497,  786,-32766,-32766,-32766,  895,-32766,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  410,
        -32766,-32766,-32766,-32766, -149,-32766,-32766,  245,-32766,  538,
          413,-32766,  387,-32766,  450,  136,-32766,-32766,-32766,-32766,
        -32766,  131,-32766,  134,  487,  205,  206,  466,  274,-32766,
          342,-32766,-32766,-32766,  271,  358,-32766,-32766,  478,-32766,
          331,  276,-32766,  387,  199,  273,  608,  828,  570,-32766,
        -32766,  609,  817,  818,  687,-32766,-32766,  331, -326,  331,
          819,  538,  273,  260,  273,-32766,  272,  207,-32766,-32766,
        -32766,  687,-32766,  687,-32766,  262,  419,   47,    0,  572,
        -32766,-32766,  523,-32766,-32766,-32766,  606, -268,-32766,-32766,
          344,-32766, -260,  266,-32766,  387,  776,  267,  406,  310,
          465,   81,-32766,  605,  507,  604, -269,  447,  590,  823,
          824,  825,  826,  820,  821,  318,  341,  353,  581,  568,
          631,  827,  822,  621,  904,  566,  619,-32766,  680,-32766,
          678,  574,-32766,   46,  106,  107,  108,  109,  110,  111,
          112,  113,  114,  115,  116,  335,  328,  580,  571,  573,
          575,  289,  589,  578,  677,  370,  371,  548,  670,   29,
          513,  515,  517,  522,  543,  607,  375,  376,  335,  328,
          525,  722,  724,  526,  289,  528,  530,  531,  370,  371,
          122,   30,  903,  625,  626,  473,  279,  543,  607,  375,
          376,  901,  546,-32767,-32767,-32767,-32767,   98,   99,  100,
          101,  102,  335,  875,  873,  859,  335,  871,  538,  279,
          874,  808,  370,  371,  662,  545,  370,  371,  879,  869,
          792,  563,  607,  375,  376,  563,  607,  375,  376,   31,
           32,   34,   35,   36,   37,  335,   43,   56,   77,   78,
          335, -326,  793,   79,   80,  370,  371,  126,  135,  780,
          370,  371,  137,  594,  563,  607,  375,  376,  200,  563,
          607,  375,  376,  226,  872,  500,  227,  230,  232,  233,
          237,  250,  251,  252,  388,  253,  278,  336,  335,  327,
          329,  338,  629,  275,  335,-32766,  777,  685,  370,  371,
           23,  298,  354,  357,  370,  371,  425,  563,  607,  375,
          376,  477,  858,  563,  607,  375,  376,  501,  759,  775,
          787,  790,  791,  857,  816,  788,  856,  835,  789,   18,
           21,   22,   24,   27,  351,  475,  509,    0,  755,  762,
          811,  506,  453,    0,  884,  451,  758,    0,    0,  854,
          870,  807,  899,  836,  853,  483
    );

    protected static $yycheck = array(
            2,    3,    4,    5,    6,    8,    9,   10,    7,   11,
          104,  105,  106,  107,  108,  109,    8,    9,   10,    0,
           70,   24,   60,   26,   27,   28,   29,   30,   31,   32,
           33,   34,   24,    7,   26,   27,   28,   29,   30,   41,
           42,    7,   86,   87,  139,   47,  141,   49,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   64,    8,    9,   10,   68,   69,   70,   75,
           72,    7,   74,    7,   76,   77,   78,   79,    7,   81,
            7,   83,    8,    8,    9,   10,  136,    7,   90,  139,
           92,   93,   94,   95,    7,   97,   98,   95,  100,   24,
          144,  103,  104,  141,    7,  143,    7,  105,  106,  111,
          112,  113,   70,   60,   72,   73,  114,  115,  116,  117,
          122,  123,   60,  125,  126,  127,  128,  129,  130,  131,
           12,    8,    9,   10,  136,  137,  138,  139,  140,  141,
           25,  143,  148,  145,  142,  147,  148,   24,    7,   26,
           27,   28,   29,   30,   31,   32,   33,   34,   35,   36,
           37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
           72,   48,   72,   44,   45,   46,   30,   48,  144,   64,
           95,   96,  120,  123,  124,   70,  101,    7,   89,   74,
          105,  106,   77,   78,   79,  142,   81,   60,   83,  114,
          115,  116,  117,  141,  144,   90,  140,   92,   93,   94,
           64,  140,   97,   98,    7,  100,   70,  144,  103,  104,
           74,  136,    7,   77,   78,   79,  111,   81,   30,   83,
           70,  133,  134,   41,   42,   43,   90,  140,   92,   93,
           94,    8,    9,   97,   98,  145,  100,   60,   80,  103,
          104,    8,    9,   10,   70,  140,  141,  111,   72,   30,
           75,   72,   64,   95,   70,    7,   70,   24,   70,   26,
           27,   28,   74,  105,  106,   77,   78,   79,  141,   81,
           12,   83,  114,  115,  116,  117,  140,  141,   90,   12,
           92,   93,   94,   64,   95,   97,   98,   75,  100,   70,
          140,  103,  104,   74,  105,  106,   77,   78,   79,  111,
           81,   30,   83,  114,  115,  116,  117,  132,   12,   90,
          140,   92,   93,   94,   25,  141,   97,   98,  141,  100,
           70,  145,  103,  104,  145,   84,  142,  141,  140,  141,
          111,  142,   12,   60,  141,   64,   95,   12,  145,   25,
           75,   70,   65,   66,  132,   74,  105,  106,   77,   78,
           79,   25,   81,   25,   83,  114,  115,  116,  117,  140,
          141,   90,   25,   92,   93,   94,   64,   95,   97,   98,
           25,  100,   70,   25,  103,  104,   74,  105,  106,   77,
           78,   79,  111,   81,   25,   83,  114,  115,  116,  117,
           30,  141,   90,  120,   92,   93,   94,  132,   30,   97,
           98,   48,  100,   65,   66,  103,  104,  123,  124,  140,
          141,  140,  141,  111,  142,  140,  141,   60,   60,   64,
           70,    8,    9,   10,   60,   70,   71,  140,  141,   74,
           61,   70,   77,   78,   79,   70,   81,   24,   83,   26,
           27,   67,  140,  141,   72,   90,  144,   92,   93,   94,
           64,   95,   97,   98,   70,  100,   70,   70,  103,  104,
           74,  105,  106,   77,   78,   79,  111,   81,   70,   83,
          114,  115,  116,  117,   70,   70,   90,   70,   92,   93,
           94,   70,   70,   97,   98,   70,  100,   70,   70,  103,
          104,    8,    9,   10,   70,  140,  141,  111,  142,   70,
           72,   75,   64,   72,    8,    9,   10,   24,   70,   26,
           75,   72,   74,   72,   72,   77,   78,   79,   75,   81,
           24,   83,   26,   27,   28,   29,  140,  141,   90,   79,
           92,   93,   94,   64,   85,   97,   98,   85,  100,   70,
           85,  103,  104,   74,   85,   88,   77,   78,   79,  111,
           81,   89,   83,   89,   91,   41,   42,   99,  102,   90,
           95,   92,   93,   94,  118,   95,   97,   98,  101,  100,
           96,  118,  103,  104,   60,  101,  115,  132,  140,  141,
          111,  115,   68,   69,  110,   64,   72,   96,  120,   96,
           76,   70,  101,  120,  101,   74,  119,  121,   77,   78,
           79,  110,   81,  110,   83,  120,  122,  121,   -1,  140,
          141,   90,  140,   92,   93,   94,  142,  135,   97,   98,
          139,  100,  135,  135,  103,  104,  146,  135,  139,  135,
          135,  141,  111,  142,  135,  142,  135,  123,  140,  125,
          126,  127,  128,  129,  130,  131,  139,  141,  140,  140,
          140,  137,  138,  140,  142,  140,  140,  143,  140,  145,
          140,  140,  141,   12,   13,   14,   15,   16,   17,   18,
           19,   20,   21,   22,   23,   95,   96,  140,  140,  140,
          140,  101,  140,  140,  140,  105,  106,  140,  140,  143,
          141,  141,  141,  141,  114,  115,  116,  117,   95,   96,
          141,   50,   51,  141,  101,  141,  141,  141,  105,  106,
          141,  143,  142,  142,  142,  142,  136,  114,  115,  116,
          117,  142,  142,   35,   36,   37,   38,   39,   40,   41,
           42,   43,   95,  142,  142,  142,   95,  142,   70,  136,
           72,  142,  105,  106,  142,  142,  105,  106,  142,  142,
          146,  114,  115,  116,  117,  114,  115,  116,  117,  143,
          143,  143,  143,  143,  143,   95,  143,  143,  143,  143,
           95,  120,  104,  143,  143,  105,  106,  143,  143,  142,
          105,  106,  143,  142,  114,  115,  116,  117,  143,  114,
          115,  116,  117,  143,  146,   82,  143,  143,  143,  143,
          143,  143,  143,  143,  136,  143,  143,  139,   95,  143,
          143,  143,  142,  145,   95,  143,  147,  142,  105,  106,
          144,  144,  144,  144,  105,  106,  144,  114,  115,  116,
          117,  144,  146,  114,  115,  116,  117,  144,  144,  144,
          144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
          144,  144,  144,  144,  144,  144,  144,   -1,  144,  144,
          144,  144,  144,   -1,  144,  144,  144,   -1,   -1,  146,
          146,  146,  146,  146,  146,  146
    );

    protected static $yybase = array(
            0,  590,  613,   85,  199,    2,  168,  251,  723,  282,
          366,  647,  651,  680,  685,  729,  729,  729,  355,  358,
          369,  369,  369,  369,  347,   -2,   -2,   -2,  198,  198,
          229,  229,  229,  229,  229,  229,  229,  229,  198,  229,
          448,  479,  531,  312,  365,  115,  146,  281,  396,  396,
          396,  396,  396,  396,  396,  396,  396,  396,  396,  396,
          396,  396,  396,  396,  396,  396,  396,  396,  396,  396,
          396,  396,  396,  396,  396,  396,  396,  396,  396,  396,
          396,  396,  396,  396,  396,  396,  396,  396,  396,  396,
          396,  396,  396,  396,  396,  396,  396,  396,  396,  396,
          396,  396,  396,  396,  396,  396,  396,  396,  396,  396,
          396,  396,  396,  396,  396,  396,  396,  396,  396,  396,
          396,  396,  396,  396,  396,  396,  396,  396,  396,  396,
          396,  396,  396,  396,  396,  396,  396,  396,  -44,  467,
          547,  496,  548,  549,  550,  552,  724,  725,  726,  718,
          715,  720,  589,  601,  338,  602,  603,  605,  609,  612,
          583,  616,  721,  739,  617,  716,  717,  719,  722,  123,
          123,  123,  123,  123,  123,  123,  123,  123,  123,   74,
          233,   55,   55,   55,   55,   55,   55,   55,   55,   55,
           55,   55,   55,   55,   55,   55,   75,   75,  493,  524,
          524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
          423,  243,  506,    8,   -3,   -3,   -3,   -3,  661,  698,
          698,  698,  698,  484,  501,  503,  494,  494,  379,  494,
          370,  579,  678,  678,  678,  678,  678,  678,  678,  678,
          678,  678,  678,  678,  382,  417,  192,  192,  682,  682,
           60,   60,   60,   60,  294,  222,  275,   -6,  194,  436,
          260,  260,  260,  445,  455,  453,  184,  196,  129,  129,
          129,  -50,  -50,  -50,  -50,  500,  -50,  -50,  -50,  -95,
           98,   98,   42,  203,  297,  511,  -38,   62,  285,  517,
          100,  475,  517,  287,  348,  100,  581,  582,  279,  497,
          187,  553,  414,  557,  465,   66,   71,   97,  283,  137,
          186,   99,   73,  469,  731,  732,  728,   53,  185,  137,
          730,  558,  180,   34,  727,  554,  160,  378,  394,  408,
          468,  394,  449,  378,  633,  378,  421,  378,  379,    1,
          628,  421,  378,  456,  421,  463,  394,  438,  487,  378,
          408,  516,  378,  482,  477,   64,  468,  477,  378,  449,
           19,  635,  636,  336,  640,  664,  677,  641,  375,  559,
          471,  476,  665,  666,  667,  397,  360,  660,  556,  499,
          371,  367,  498,  626,  627,  368,  483,  475,  491,  363,
          478,  578,  502,  478,  490,  504,  492,  495,  460,  508,
          268,  277,  560,  499,  692,  679,  422,  668,  692,  478,
          644,  306,  669,  425,  478,  670,  478,  704,  561,  663,
          478,  705,  427,  522,  499,  374,  363,  363,  363,  706,
           26,  614,  629,  707,  708,  658,  696,  709,  733,  630,
          734,  629,  710,  735,  472,  688,   80,  655,  497,  505,
          428,  518,   87,  118,  736,  478,  478,  562,  500,  478,
          697,  441,  486,  737,  455,  434,  673,  689,  478,  480,
          738,   87,  711,  631,  712,  519,  474,  569,  676,  572,
          330,  713,  335,  580,  645,  520,  523,  634,  451,  574,
          415,  714,  649,  299,  384,  686,  452,  703,  672,  525,
          526,  575,  459,  509,  466,  462,  576,  439,  687,  324,
          528,  530,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,    0,
            0,    0,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,  678,  678,  678,  678,  678,  678,  678,
          678,  678,  678,  678,  123,  123,  123,  123,  123,  123,
          123,  123,    0,  129,  129,  129,  129,  -94,  -94,  -94,
          678,  678,  678,  678,  678,  678,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,  -94,  -94,
          129,  129,  678,  678,  -50,  -50,  -50,  -50,  -50,   98,
           98,   98,  -50,   98,  189,  189,  189,   98,   98,   98,
          186,  186,    0,    0,    0,    0,    0,    0,    0,  189,
            0,    0,    0,  421,    0,    0,    0,  189,   87,  137,
            0,    0,  499,  421,    0,  438,  421,    0,    0,    0,
          473,  473,    0,  578,    0,  258,  668,  141,  499,    0,
            0,    0,    0,    0,    0,    0,    0,  499,  207,  207,
          215,    0,    0,    0,  215,  141,    0,    0,  258,   87
    );

    protected static $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  101,  107,  103,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,  352,  352,
          119,  119,  119,  119,  119,  119,  119,  119,  310,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  342,
          342,  342,  342,  342,  342,  342,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,   67,
        32767,  357,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  226,
          227,  229,  230,  169,  122,  343,  356,  168,   68,  194,
          196,  244,  195,  172,  177,  178,  179,  180,  181,  182,
          183,  184,  185,  186,  187,  171,  223,  222,  192,  307,
          307,  310,32767,32767,32767,32767,32767,32767,32767,32767,
          193,  197,  199,  198,  214,  215,  212,  213,  170,  216,
          217,  218,  219,  154,  154,  154,  351,  351,32767,  351,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  155,32767,  206,  207,  270,  270,
          114,  114,  114,  114,  114,32767,32767,32767,32767,  278,
        32767,32767,32767,32767,32767,  280,32767,32767,  201,  202,
          200,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          279,32767,32767,32767,32767,  328,  315,  266,32767,32767,
        32767,  259,32767,  104,  106,32767,32767,32767,32767,  296,
          333,32767,32767,32767,   17,32767,32767,32767,  364,  328,
        32767,  326,32767,   19,32767,32767,32767,32767,32767,  332,
        32767,32767,32767,32767,32767,32767,32767,   63,32767,32767,
        32767,32767,32767,   63,  275,   63,32767,   63,32767,  309,
          281,32767,   63,   78,32767,   76,32767,32767,   80,   63,
        32767,32767,   63,   93,  248,  309,   54,  248,   63,32767,
        32767,32767,32767,    4,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  261,
        32767,  317,32767,  331,  330,  318,32767,  259,32767,  210,
          189,  260,32767,  191,32767,32767,  264,  267,32767,32767,
        32767,  131,32767,  262,  175,32767,32767,32767,32767,  359,
        32767,32767,32767,32767,  127,32767,   61,  326,32767,32767,
          349,32767,32767,  326,  263,  327,  203,  204,  205,32767,
          118,32767,  304,32767,32767,32767,32767,32767,32767,  321,
        32767,32767,32767,32767,  326,32767,  108,32767,  296,32767,
        32767,32767,   79,32767,32767,  173,  123,32767,32767,  358,
        32767,32767,  314,32767,32767,32767,32767,32767,   62,32767,
        32767,   81,32767,32767,32767,32767,  326,32767,32767,32767,
          112,32767,  166,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,    4,32767,  148,32767,32767,32767,32767,32767,
        32767,32767,   25,   25,    3,  134,    3,  134,   25,   98,
           25,   25,  134,   93,   25,   25,   25,  141,   25,   25,
           25,   25,   25,   25
    );

    protected static $yygoto = array(
          141,  141,  174,  174,  174,  174,  174,  174,  174,  174,
          141,  174,  142,  143,  144,  148,  152,  154,  183,  176,
          173,  175,  175,  175,  175,  175,  175,  175,  173,  169,
          170,  171,  172,  181,  742,  743,  389,  745,  765,  766,
          767,  768,  769,  770,  771,  773,  710,  145,  146,  147,
          149,  150,  151,  153,  179,  180,  182,  198,  210,  211,
          212,  213,  214,  215,  216,  217,  219,  220,  221,  222,
          246,  247,  268,  269,  270,  426,  427,  428,  184,  185,
          186,  187,  188,  189,  190,  191,  192,  193,  194,  155,
          156,  157,  158,  177,  159,  196,  160,  161,  162,  138,
          163,  197,  164,  165,  195,  139,  166,  167,  178,  168,
          448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
          448,  449,  449,  449,  449,  449,  449,  449,  449,  449,
          449,  449,  541,  541,  541,  691,  326,  391,  391,  391,
          391,  391,  391,  391,  391,  391,  391,  391,  391,  391,
          391,  391,  391,  391,  391,  540,  540,  540,  421,  794,
          794,  649,  649,  649,  649,  649,  404,  865,  865,  503,
          396,  396,  630,  620,  618,  618,  618,  618,  519,  398,
          639,  634,  616,  616,  616,  616,  888,  611,  617,  488,
          392,  392,  392,  392,  392,  392,  392,  392,  392,  392,
          392,  392,  392,  392,  392,  392,  392,  392,  542,  542,
          542,  655,  395,  395,  420,  420,  455,  420,  311,  414,
          416,  416,  390,  393,  409,  417,  423,  444,  456,  459,
          468,  476,    5,  583,  584,  585,  324,   15,  265,    6,
            7,  224,  257,    8,    9,   10,  225,   11,   16,   12,
           13,   17,   14,  831,  831,  831,  831,  831,  831,  831,
          831,  831,  831,  831,  557,  666,  624,  833,  834,  847,
          647,  701,  433,  434,  437,  442,  472,  474,  491,    1,
          288,    2,  864,  864,  435,  436,  438,  440,  443,  470,
          304,  894,  894,  304,  880,  880,  880,  397,  397,  897,
          894,  806,  805,  302,  481,  407,  309,  309,  309,  863,
          415,  460,  467,  508,  845,  897,  897,  243,  708,  320,
          461,  309,  471,  284,  325,  881,  490,  315,  754,  319,
          645,  549,  658,  321,  663,  555,  785,  403,  842,  489,
          623,  593,  313,  699,  297,  424,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,  408
    );

    protected static $yygcheck = array(
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
           35,   85,   85,   85,   85,   85,   85,   85,   85,   85,
           85,   85,    6,    6,    6,   66,   66,   35,   35,   35,
           35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
           35,   35,   35,   35,   35,    5,    5,    5,   74,   35,
           35,   35,   35,   35,   35,   35,   70,   82,   82,   35,
           85,   85,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,   35,   35,   35,   35,  103,   35,   35,   35,
           81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
           81,   81,   81,   81,   81,   81,   81,   81,    7,    7,
            7,   53,   81,   81,   26,   26,   26,   26,   26,   26,
           26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
           26,   26,   13,   27,   27,   27,   24,   13,   91,   13,
           13,   40,   91,   13,   13,   13,   40,   13,   13,   13,
           13,   13,   13,   92,   92,   92,   92,   92,   92,   92,
           92,   92,   92,   92,   12,   12,   12,   12,   12,   12,
           12,   12,   51,   51,   51,   51,   51,   51,   51,    2,
            4,    2,   83,   83,   84,   84,   84,   84,   84,   84,
            4,  104,  104,    4,   83,   83,   83,   88,   88,  104,
          104,   90,   90,   28,   93,   28,   89,   89,   89,   83,
           28,   36,   36,   36,   96,  104,  104,   28,   70,   69,
           28,   89,   42,   42,   42,  101,   28,   25,   71,   89,
           49,   10,   54,    9,   55,   11,   79,    4,   95,   76,
           43,   34,    4,   68,   44,    4,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   70
    );

    protected static $yygbase = array(
            0,    0, -235,    0,    1,  154,  131,  207,    0,    2,
           39,  -11,   62, -281,    0,  -28,    0,    0,    0,    0,
            0,    0,    0,    0,  180,   94,  -12,  212,  -32,    0,
            0,    0,    0,    0,  -15,  -89,   60,    0,    0,    0,
         -276,    0,   50,  -10, -179,    0,    0,    0,    0,   76,
            0,  241,    0,  172,   37,  -13,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0, -109,    0,  -16,   92,
           90,   79,    0,    0,  129,    0,  -18,    0,    0,    3,
            0,  -36,  -81,   34,  234,  -78,    0,    0,   49,   46,
           40,  -21,   54,  104,    0,  -17,  113,    0,    0,    0,
            0,   96,    0,  148,   35,    0
    );

    protected static $yygdefault = array(
        -32768,  360,    3,  536,  379,  560,  561,  562,  305,  303,
          550,  556,  462,    4,  558,  140,  293,  565,  294,  494,
          567,  569,  306,  307,  301,  314,  218,  582,  496,  133,
          495,  312,  586,  356,  592,  299,  445,  380,  348,  457,
          223,  418,  452,  622,  296,  628,  633,  636,  446,  644,
          352,  429,  430,  654,  659,  664,  667,  332,  322,  469,
          671,  672,  258,  676,  504,  505,  690,  244,  698,  316,
          709,  340,  772,  774,  394,  405,  479,  781,  323,  784,
          381,  382,  383,  384,  431,  802,  799,  287,  850,  285,
          439,  256,  837,  463,  355,  887,  846,  286,  385,  386,
          300,  882,  339,  889,  896,  454
    );

    protected static $yylhs = array(
            0,    1,    2,    2,    4,    4,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    8,    8,   10,   10,   10,
           10,    9,    9,   11,   13,   13,   14,   14,   14,   14,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,   33,   33,
           34,   25,   25,   28,   28,   29,   29,   30,   30,    6,
            7,    7,    7,   37,   37,   37,   38,   38,   41,   41,
           39,   39,   42,   42,   27,   27,   32,   32,   31,   31,
           43,   21,   21,   44,   44,   45,   20,   20,   16,   16,
           46,   18,   18,   47,   17,   17,   19,   19,   36,   36,
           48,   48,   49,   49,   50,   50,   50,   50,   51,   51,
           52,   52,   53,   53,   22,   22,   54,   54,   54,   23,
           23,   55,   55,   40,   40,   56,   56,   56,   56,   61,
           61,   62,   62,   63,   63,   63,   63,   64,   65,   65,
           60,   60,   57,   57,   59,   59,   67,   67,   66,   66,
           66,   66,   66,   66,   58,   58,   68,   68,   24,   24,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   70,   76,   76,
           78,   78,   79,   80,   80,   80,   80,   80,   80,   85,
           85,   35,   35,   35,   71,   71,   86,   86,   81,   81,
           87,   87,   87,   87,   87,   72,   72,   72,   75,   75,
           75,   77,   77,   92,   92,   92,   92,   92,   92,   92,
           92,   92,   92,   92,   92,   92,   92,   12,   12,   12,
           12,   12,   12,   73,   73,   73,   73,   93,   93,   95,
           95,   94,   94,   96,   96,   26,   26,   26,   26,   98,
           98,   97,   97,   97,   97,   97,   99,   99,   83,   83,
           88,   88,   82,   82,  100,  100,  100,  100,   89,   89,
           89,   89,   84,   84,   90,   90,   90,   69,   69,  101,
          101,  101,   74,   74,  102,  102,  103,  103,  103,  103,
           91,   91,   91,   91,  104,  104,  104,  104,  104,  104,
          104,  105,  105,  105
    );

    protected static $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            3,    5,    4,    3,    3,    3,    1,    1,    3,    2,
            4,    3,    1,    3,    2,    0,    1,    1,    1,    1,
            3,    7,   10,    5,    7,    5,    2,    3,    2,    3,
            2,    3,    3,    3,    3,    1,    2,    5,    7,    8,
           10,   10,    5,    1,    5,    3,    3,    2,    1,    2,
            8,    1,    3,    0,    1,    1,    1,    0,    2,    9,
            7,    6,    5,    1,    2,    2,    0,    2,    0,    2,
            0,    2,    1,    3,    1,    4,    1,    4,    1,    3,
            3,    3,    4,    0,    2,    7,    1,    4,    0,    2,
            5,    0,    2,    6,    0,    2,    0,    3,    1,    0,
            1,    3,    3,    5,    0,    1,    1,    1,    1,    0,
            1,    3,    1,    2,    3,    1,    1,    2,    4,    3,
            1,    1,    3,    2,    0,    3,    3,    8,    3,    1,
            3,    0,    2,    4,    5,    4,    4,    3,    1,    1,
            1,    3,    1,    1,    0,    1,    1,    2,    1,    1,
            1,    1,    1,    1,    1,    3,    1,    3,    3,    1,
            1,    6,    3,    4,    4,    1,    2,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    2,    2,
            2,    2,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    2,    2,
            2,    2,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    5,    4,    4,    4,    2,    2,    4,    2,
            2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
            1,    4,    3,    3,    2,    9,   10,    3,    0,    4,
            1,    3,    2,    4,    6,    8,    4,    4,    4,    1,
            1,    1,    2,    3,    1,    1,    1,    1,    1,    1,
            0,    3,    3,    4,    4,    0,    2,    3,    0,    1,
            1,    0,    3,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    3,    2,    1,    1,    3,    2,
            2,    4,    3,    1,    3,    3,    3,    0,    2,    0,
            1,    3,    1,    3,    1,    1,    1,    1,    1,    6,
            4,    3,    6,    4,    4,    4,    1,    3,    1,    2,
            1,    1,    4,    1,    3,    6,    4,    4,    4,    4,
            1,    4,    0,    1,    1,    3,    1,    3,    1,    1,
            4,    0,    0,    2,    3,    1,    3,    1,    4,    2,
            2,    2,    1,    2,    1,    4,    3,    3,    3,    6,
            3,    1,    1,    1
    );

    protected $yyval;
    protected $yyastk;
    protected $yysp;
    protected $lexer;

    /**
     * Parses PHP code into a node tree.
     *
     * @param PHPParser_Lexer $lexer A lexer
     *
     * @return array Array of statements
     */
    public function parse(PHPParser_Lexer $lexer) {
        $this->lexer  = $lexer;

        $this->yysp   = 0;                   // Stack pos
        $yysstk       = array($yystate = 0); // State stack
        $this->yyastk = array();             // AST   stack (?)
        $yylstk       = array($yyline  = 1); // Line  stack
        $yydstk       = array($yyDC = null); // Doc comment stack

        $yychar       = -1;

        for (;;) {
            if (self::$yybase[$yystate] == 0) {
                $yyn = self::$yydefault[$yystate];
            } else {
                if ($yychar < 0) {
                    if (($yychar = $lexer->lex($yylval, $yyline, $yyDC)) < 0)
                        $yychar = 0;
                    $yychar = $yychar < self::YYMAXLEX ?
                        self::$yytranslate[$yychar] : self::YYBADCH;
                    $yylstk[$this->yysp] = $yyline;
                    $yydstk[$this->yysp] = $yyDC;
                }
                if ((($yyn = self::$yybase[$yystate] + $yychar) >= 0
                     && $yyn < self::YYLAST && self::$yycheck[$yyn] == $yychar
                     || ($yystate < self::YY2TBLSTATE
                        && ($yyn = self::$yybase[$yystate + self::YYNLSTATES]
                            + $yychar) >= 0
                        && $yyn < self::YYLAST
                        && self::$yycheck[$yyn] == $yychar))
                    && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT) {
                    /*
                     * >= YYNLSTATE: shift and reduce
                     * > 0: shift
                     * = 0: accept
                     * < 0: reduce
                     * = -YYUNEXPECTED: error
                     */
                    if ($yyn > 0) {
                        /* shift */
                        ++$this->yysp;

                        $yysstk[$this->yysp]       = $yystate = $yyn;
                        $this->yyastk[$this->yysp] = $yylval;
                        $yylstk[$this->yysp]       = $yyline;
                        $yydstk[$this->yysp]       = $yyDC;
                        $yychar = -1;

                        if ($yyn < self::YYNLSTATES)
                            continue;

                        /* $yyn >= YYNLSTATES means shift-and-reduce */
                        $yyn -= self::YYNLSTATES;
                    } else {
                        $yyn = -$yyn;
                    }
                } else {
                    $yyn = self::$yydefault[$yystate];
                }
            }

            for (;;) {
                /* reduce/error */
                if ($yyn == 0) {
                    /* accept */
                    return $this->yyval;
                } elseif ($yyn != self::YYUNEXPECTED) {
                    /* reduce */
                    try {
                        $this->{'yyn' . $yyn}(
                            $yylstk[$this->yysp - self::$yylen[$yyn]],
                            $yydstk[$this->yysp - self::$yylen[$yyn]]
                        );
                    } catch (PHPParser_Error $e) {
                        if (-1 === $e->getRawLine()) {
                            $e->setRawLine($yyline);
                        }

                        throw $e;
                    }

                    /* Goto - shift nonterminal */
                    $this->yysp -= self::$yylen[$yyn];
                    $yyn = self::$yylhs[$yyn];
                    if (($yyp = self::$yygbase[$yyn] + $yysstk[$this->yysp]) >= 0
                         && $yyp < self::YYGLAST
                         && self::$yygcheck[$yyp] == $yyn) {
                        $yystate = self::$yygoto[$yyp];
                    } else {
                        $yystate = self::$yygdefault[$yyn];
                    }

                    ++$this->yysp;

                    $yysstk[$this->yysp] = $yystate;
                    $this->yyastk[$this->yysp] = $this->yyval;
                    $yylstk[$this->yysp]       = $yyline;
                    $yydstk[$this->yysp]       = $yyDC;
                } else {
                    /* error */
                    throw new PHPParser_Error(
                        'Unexpected token ' . self::$yyterminals[$yychar],
                        $yyline
                    );
                }

                if ($yystate < self::YYNLSTATES)
                    break;
                /* >= YYNLSTATES means shift-and-reduce */
                $yyn = $yystate - self::YYNLSTATES;
            }
        }
    }

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn1($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Namespace::postprocess($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn2($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn3($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn4($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn5($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn6($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn7($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn8($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn9($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_HaltCompiler($this->lexer->handleHaltCompiler(), $line, $docComment); 
    }

    protected function yyn10($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn11($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(5-2)], $line, $docComment), $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn12($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn13($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Use($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn14($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Const($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn15($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn16($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn17($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn18($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-1)], $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn19($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(2-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn20($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(4-2)], $line, $docComment), $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn21($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn22($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn23($line, $docComment) {
         $this->yyval = new PHPParser_Node_Const($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn24($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn25($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn26($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn27($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn28($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn29($line, $docComment) {
         throw new PHPParser_Error('__halt_compiler() can only be used from the outermost scope'); 
    }

    protected function yyn30($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn31($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(7-3)], array('stmts' => is_array($this->yyastk[$this->yysp-(7-5)]) ? $this->yyastk[$this->yysp-(7-5)] : array($this->yyastk[$this->yysp-(7-5)]), 'elseifs' => $this->yyastk[$this->yysp-(7-6)], 'else' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn32($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(10-3)], array('stmts' => $this->yyastk[$this->yysp-(10-6)], 'elseifs' => $this->yyastk[$this->yysp-(10-7)], 'else' => $this->yyastk[$this->yysp-(10-8)]), $line, $docComment); 
    }

    protected function yyn33($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_While($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn34($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Do($this->yyastk[$this->yysp-(7-5)], is_array($this->yyastk[$this->yysp-(7-2)]) ? $this->yyastk[$this->yysp-(7-2)] : array($this->yyastk[$this->yysp-(7-2)]), $line, $docComment); 
    }

    protected function yyn35($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Switch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn36($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break(null, $line, $docComment); 
    }

    protected function yyn37($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn38($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue(null, $line, $docComment); 
    }

    protected function yyn39($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn40($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return(null, $line, $docComment); 
    }

    protected function yyn41($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn42($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Global($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn43($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Static($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn44($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Echo($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn45($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_InlineHTML($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn46($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn47($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Unset($this->yyastk[$this->yysp-(5-3)], $line, $docComment); 
    }

    protected function yyn48($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-3)], array('keyVar' => null, 'byRef' => false, 'stmts' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn49($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-4)], array('keyVar' => null, 'byRef' => true, 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn50($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(10-8)], $this->yyastk[$this->yysp-(10-6)], array('keyVar' => $this->yyastk[$this->yysp-(10-3)], 'byRef' => $this->yyastk[$this->yysp-(10-5)], 'stmts' => $this->yyastk[$this->yysp-(10-10)]), $line, $docComment); 
    }

    protected function yyn51($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ForNumeric($this->yyastk[$this->yysp-(10-3)], $this->yyastk[$this->yysp-(10-5)], $this->yyastk[$this->yysp-(10-7)], $this->yyastk[$this->yysp-(10-10)], $this->yyastk[$this->yysp-(10-6)], $this->yyastk[$this->yysp-(10-8)], $line, $docComment); 
    }

    protected function yyn52($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Declare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn53($line, $docComment) {
         $this->yyval = array(); /* means: n statement */ 
    }

    protected function yyn54($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TryCatch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn55($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Throw($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn56($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Goto($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn57($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Label($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn58($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn59($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn60($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Catch($this->yyastk[$this->yysp-(8-3)], substr($this->yyastk[$this->yysp-(8-4)], 1), $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn61($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn62($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn63($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn64($line, $docComment) {
         $this->yyval = true; 
    }

    protected function yyn65($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn66($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn67($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn68($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn69($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Function($this->yyastk[$this->yysp-(9-3)], array('byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-5)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn70($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Class($this->yyastk[$this->yysp-(7-2)], array('type' => $this->yyastk[$this->yysp-(7-1)], 'extends' => $this->yyastk[$this->yysp-(7-3)], 'implements' => $this->yyastk[$this->yysp-(7-4)], 'stmts' => $this->yyastk[$this->yysp-(7-6)]), $line, $docComment); 
    }

    protected function yyn71($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Interface($this->yyastk[$this->yysp-(6-2)], array('extends' => $this->yyastk[$this->yysp-(6-3)], 'stmts' => $this->yyastk[$this->yysp-(6-5)]), $line, $docComment); 
    }

    protected function yyn72($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Trait($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn73($line, $docComment) {
         $this->yyval = 0; 
    }

    protected function yyn74($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn75($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn76($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn77($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn78($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn79($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn80($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn81($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn82($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn83($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn84($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn85($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn86($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn87($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn88($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn89($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn90($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn91($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn92($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn93($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn94($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn95($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Case($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)], $line, $docComment); 
    }

    protected function yyn96($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn97($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn98($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn99($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn100($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(5-3)], is_array($this->yyastk[$this->yysp-(5-5)]) ? $this->yyastk[$this->yysp-(5-5)] : array($this->yyastk[$this->yysp-(5-5)]), $line, $docComment); 
    }

    protected function yyn101($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn102($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn103($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)], $line, $docComment); 
    }

    protected function yyn104($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn105($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(is_array($this->yyastk[$this->yysp-(2-2)]) ? $this->yyastk[$this->yysp-(2-2)] : array($this->yyastk[$this->yysp-(2-2)]), $line, $docComment); 
    }

    protected function yyn106($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn107($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else($this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn108($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn109($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn110($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn111($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn112($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn113($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $line, $docComment); 
    }

    protected function yyn114($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn115($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn116($line, $docComment) {
         $this->yyval = 'array'; 
    }

    protected function yyn117($line, $docComment) {
         $this->yyval = 'callable'; 
    }

    protected function yyn118($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn119($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn120($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn121($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn122($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(1-1)], false, $line, $docComment); 
    }

    protected function yyn123($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(2-2)], true, $line, $docComment); 
    }

    protected function yyn124($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn125($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn126($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn127($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn128($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn129($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn130($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn131($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn132($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn133($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn134($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn135($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn136($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassConst($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn137($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassMethod($this->yyastk[$this->yysp-(8-4)], array('type' => $this->yyastk[$this->yysp-(8-1)], 'byRef' => $this->yyastk[$this->yysp-(8-3)], 'params' => $this->yyastk[$this->yysp-(8-6)], 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn138($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUse($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn139($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn140($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn141($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn142($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn143($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Precedence($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn144($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(5-1)][0], $this->yyastk[$this->yysp-(5-1)][1], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn145($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], null, $line, $docComment); 
    }

    protected function yyn146($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn147($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
    }

    protected function yyn148($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn149($line, $docComment) {
         $this->yyval = array(null, $this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn150($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn151($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn152($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn153($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn154($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn155($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn156($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn157($line, $docComment) {
         PHPParser_Node_Stmt_Class::verifyModifier($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); $this->yyval = $this->yyastk[$this->yysp-(2-1)] | $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn158($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn159($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED; 
    }

    protected function yyn160($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE; 
    }

    protected function yyn161($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_STATIC; 
    }

    protected function yyn162($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn163($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn164($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn165($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn166($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn167($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn168($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn169($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn170($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn171($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignList($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)], $line, $docComment); 
    }

    protected function yyn172($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn173($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignRef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn174($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn175($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn176($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Clone($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn177($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignPlus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn178($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMinus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn179($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn180($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignDiv($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn181($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignConcat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn182($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn183($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn184($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn185($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn186($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn187($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn188($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostInc($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn189($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreInc($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn190($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostDec($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn191($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreDec($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn192($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn193($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn194($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn195($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn196($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn197($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn198($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn199($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn200($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Concat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn201($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Plus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn202($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Minus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn203($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn204($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Div($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn205($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn206($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn207($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn208($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn209($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn210($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn211($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn212($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Identical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn213($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotIdentical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn214($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Equal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn215($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn216($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Smaller($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn217($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_SmallerOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn218($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Greater($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn219($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_GreaterOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn220($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Instanceof($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn221($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn222($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn223($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn224($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Isset($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn225($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Empty($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn226($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE, $line, $docComment); 
    }

    protected function yyn227($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE_ONCE, $line, $docComment); 
    }

    protected function yyn228($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Eval($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn229($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE, $line, $docComment); 
    }

    protected function yyn230($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE_ONCE, $line, $docComment); 
    }

    protected function yyn231($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Int($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn232($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Double($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn233($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_String($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn234($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Array($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn235($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Object($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn236($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Bool($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn237($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Unset($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn238($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Exit($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn239($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ErrorSuppress($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn240($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn241($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn242($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn243($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShellExec($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn244($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Print($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn245($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => false, 'byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-4)], 'uses' => $this->yyastk[$this->yysp-(9-6)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn246($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => true, 'byRef' => $this->yyastk[$this->yysp-(10-3)], 'params' => $this->yyastk[$this->yysp-(10-5)], 'uses' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-9)]), $line, $docComment); 
    }

    protected function yyn247($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn248($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn249($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn250($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn251($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn252($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(2-2)], 1), $this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn253($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn254($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn255($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn256($line, $docComment) {
        
            if ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_StaticPropertyFetch) {
                $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(4-1)]->class, new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-1)]->name, $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
            } elseif ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                $tmp = $this->yyastk[$this->yysp-(4-1)];
                while ($tmp->var instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new PHPParser_Node_Expr_StaticCall($tmp->var->class, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
                $tmp->var = new PHPParser_Node_Expr_Variable($tmp->var->name, $line, $docComment);
            } else {
                throw new Exception;
            }
          
    }

    protected function yyn257($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn258($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn259($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('static', $line, $docComment); 
    }

    protected function yyn260($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn261($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn262($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_FullyQualified($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn263($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_Relative($this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn264($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn265($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn266($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn267($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn268($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn269($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn270() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn271($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn272($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn273($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn274($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn275($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn276($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn277($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn278($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn279($line, $docComment) {
         $this->yyval = array(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(1-1)], '`')); 
    }

    protected function yyn280($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(1-1)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn281($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn282($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn283($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber(PHPParser_Node_Scalar_LNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn284($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DNumber(PHPParser_Node_Scalar_DNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn285($line, $docComment) {
         $this->yyval = PHPParser_Node_Scalar_String::create($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn286($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LineConst($line, $docComment); 
    }

    protected function yyn287($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FileConst($line, $docComment); 
    }

    protected function yyn288($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DirConst($line, $docComment); 
    }

    protected function yyn289($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_ClassConst($line, $docComment); 
    }

    protected function yyn290($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_TraitConst($line, $docComment); 
    }

    protected function yyn291($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_MethodConst($line, $docComment); 
    }

    protected function yyn292($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FuncConst($line, $docComment); 
    }

    protected function yyn293($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_NSConst($line, $docComment); 
    }

    protected function yyn294($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String(PHPParser_Node_Scalar_String::parseDocString($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]), $line, $docComment); 
    }

    protected function yyn295($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String('', $line, $docComment); 
    }

    protected function yyn296($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn297($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn298($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn299($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn300($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn301($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn302($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn303($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn304($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn305($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '"'); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn306($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, null); } } $s = preg_replace('~(\r\n|\n|\r)$~', '', $s); if ('' === $s) array_pop($this->yyastk[$this->yysp-(3-2)]);; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn307($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn308($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn309() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn310() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn311($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn312($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn313($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn314($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn315($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn316($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn317($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn318($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn319($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn320($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn321($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn322($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_MethodCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn323($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn324($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn325($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn326($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn327($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn328($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn329($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn330($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn331($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn332($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn333($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn334($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment); 
    }

    protected function yyn335($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn336($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn337($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn338($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn339($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn340($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn341($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn342($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn343($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn344($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn345($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn346($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn347($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn348($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn349($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn350($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn351($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn352($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn353($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn354($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn355($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn356($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn357($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn358($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-1)], true, $line, $docComment); 
    }

    protected function yyn359($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(2-2)], null, true, $line, $docComment); 
    }

    protected function yyn360($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn361($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn362($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn363($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn364($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn365($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(4-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn366($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(3-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn367($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn368($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn369($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(6-2)], $line, $docComment), $this->yyastk[$this->yysp-(6-4)], $line, $docComment); 
    }

    protected function yyn370($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn371($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn372($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn373($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }
}
