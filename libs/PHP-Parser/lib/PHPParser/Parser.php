<?php

/* This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *  * the grammar file grammar/zend_language_parser.phpy
 *  * the parser skeleton grammar/kymacc.php.parser
 *  * the preprocessing script grammar/rebuildParser.php
 *
 * The skeleton for this parser was written by Moriyoshi Koizumi and is based on
 * the work by Masato Bito and is in the PUBLIC DOMAIN.
 */
class PHPParser_Parser
{
    const YYBADCH      = 152;
    const YYMAXLEX     = 392;
    const YYTERMS      = 152;
    const YYNONTERMS   = 110;
    const YYLAST       = 880;
    const YY2TBLSTATE  = 323;
    const YYGLAST      = 419;
    const YYSTATES     = 773;
    const YYNLSTATES   = 521;
    const YYINTERRTOK  = 1;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    // {{{ Tokens
    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_FROM = 262;
    const T_IMPORT = 263;
    const T_LOGICAL_OR = 264;
    const T_LOGICAL_XOR = 265;
    const T_LOGICAL_AND = 266;
    const T_PRINT = 267;
    const T_PLUS_EQUAL = 268;
    const T_MINUS_EQUAL = 269;
    const T_MUL_EQUAL = 270;
    const T_DIV_EQUAL = 271;
    const T_CONCAT_EQUAL = 272;
    const T_MOD_EQUAL = 273;
    const T_AND_EQUAL = 274;
    const T_OR_EQUAL = 275;
    const T_XOR_EQUAL = 276;
    const T_SL_EQUAL = 277;
    const T_SR_EQUAL = 278;
    const T_DOUBLE_QUESTION_MARK = 279;
    const T_THEN = 280;
    const T_BOOLEAN_OR = 281;
    const T_BOOLEAN_AND = 282;
    const T_IS_EQUAL = 283;
    const T_IS_NOT_EQUAL = 284;
    const T_IS_IDENTICAL = 285;
    const T_IS_NOT_IDENTICAL = 286;
    const T_IS_SMALLER_OR_EQUAL = 287;
    const T_IS_GREATER_OR_EQUAL = 288;
    const T_SL = 289;
    const T_SR = 290;
    const T_INSTANCEOF = 291;
    const T_INC = 292;
    const T_DEC = 293;
    const T_INT_CAST = 294;
    const T_DOUBLE_CAST = 295;
    const T_STRING_CAST = 296;
    const T_ARRAY_CAST = 297;
    const T_OBJECT_CAST = 298;
    const T_BOOL_CAST = 299;
    const T_UNSET_CAST = 300;
    const T_NEW = 301;
    const T_CLONE = 302;
    const T_EXIT = 303;
    const T_IF = 304;
    const T_ELSEIF = 305;
    const T_ELSE = 306;
    const T_ENDIF = 307;
    const T_LNUMBER = 308;
    const T_DNUMBER = 309;
    const T_STRING = 310;
    const T_STRING_VARNAME = 311;
    const T_VARIABLE = 312;
    const T_NUM_STRING = 313;
    const T_INLINE_HTML = 314;
    const T_CHARACTER = 315;
    const T_BAD_CHARACTER = 316;
    const T_ENCAPSED_AND_WHITESPACE = 317;
    const T_STRING_SINGLE = 318;
    const T_STRING_DOUBLE = 319;
    const T_ECHO = 320;
    const T_DO = 321;
    const T_WHILE = 322;
    const T_ENDWHILE = 323;
    const T_ENDFOR = 324;
    const T_FOR = 325;
    const T_ENDFOREACH = 326;
    const T_DECLARE = 327;
    const T_ENDDECLARE = 328;
    const T_AS = 329;
    const T_TO = 330;
    const T_DOWNTO = 331;
    const T_STEP = 332;
    const T_IN = 333;
    const T_SWITCH = 334;
    const T_ENDSWITCH = 335;
    const T_CASE = 336;
    const T_DEFAULT = 337;
    const T_BREAK = 338;
    const T_CONTINUE = 339;
    const T_GOTO = 340;
    const T_FUNCTION = 341;
    const T_CONST = 342;
    const T_RETURN = 343;
    const T_TRY = 344;
    const T_CATCH = 345;
    const T_THROW = 346;
    const T_USE = 347;
    const T_INSTEADOF = 348;
    const T_GLOBAL = 349;
    const T_STATIC = 350;
    const T_ABSTRACT = 351;
    const T_FINAL = 352;
    const T_PRIVATE = 353;
    const T_PROTECTED = 354;
    const T_PUBLIC = 355;
    const T_VAR = 356;
    const T_UNSET = 357;
    const T_ISSET = 358;
    const T_EMPTY = 359;
    const T_HALT_COMPILER = 360;
    const T_CLASS = 361;
    const T_TRAIT = 362;
    const T_INTERFACE = 363;
    const T_EXTENDS = 364;
    const T_IMPLEMENTS = 365;
    const T_OBJECT_OPERATOR = 366;
    const T_DOUBLE_ARROW = 367;
    const T_LIST = 368;
    const T_ARRAY = 369;
    const T_CALLABLE = 370;
    const T_CLASS_C = 371;
    const T_TRAIT_C = 372;
    const T_METHOD_C = 373;
    const T_FUNC_C = 374;
    const T_LINE = 375;
    const T_FILE = 376;
    const T_COMMENT = 377;
    const T_DOC_COMMENT = 378;
    const T_OPEN_TAG = 379;
    const T_OPEN_TAG_WITH_ECHO = 380;
    const T_CLOSE_TAG = 381;
    const T_WHITESPACE = 382;
    const T_START_HEREDOC = 383;
    const T_END_HEREDOC = 384;
    const T_DOLLAR_OPEN_CURLY_BRACES = 385;
    const T_CURLY_OPEN = 386;
    const T_PAAMAYIM_NEKUDOTAYIM = 387;
    const T_NAMESPACE = 388;
    const T_NS_C = 389;
    const T_DIR = 390;
    const T_NS_SEPARATOR = 391;
    // }}}

    protected static $yyterminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "T_FROM",
        "T_IMPORT",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "'?'",
        "T_DOUBLE_QUESTION_MARK",
        "T_THEN",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_STRING_SINGLE",
        "T_STRING_DOUBLE",
        "T_ECHO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_TO",
        "T_DOWNTO",
        "T_STEP",
        "T_IN",
        "T_SWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "':'",
        "'$'",
        "']'",
        "'`'",
        "'\"'"
        , "???"
    );

    protected static $yytranslate = array(
            0,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,   50,  151,  152,  148,   49,   33,  152,
          145,  146,   47,   44,    9,   45,   46,   48,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  147,  142,
           38,   14,   40,   26,   62,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,   63,  152,  149,   32,  152,  150,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  143,   31,  144,   52,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,  152,  152,    1,    2,    3,    4,
            5,    6,    7,    8,   10,   11,   12,   13,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   24,   25,   27,
           28,   29,   30,   34,   35,   36,   37,   39,   41,   42,
           43,   51,   53,   54,   55,   56,   57,   58,   59,   60,
           61,   64,   65,   66,   67,   68,   69,  152,   70,   71,
           72,   73,   74,   75,   76,  152,  152,   77,   78,   79,
           80,  152,   81,   82,  152,   83,   84,   85,   86,   87,
           88,   89,   90,   91,   92,  152,   93,   94,   95,   96,
           97,   98,   99,  100,  101,  102,  103,  104,  105,  106,
          107,  108,  109,  110,  111,  112,  113,  114,  115,  116,
          117,  118,  119,  120,  121,  122,  123,  124,  152,  125,
          126,  127,  128,  129,  130,  131,  132,  152,  152,  152,
          152,  152,  152,  133,  134,  135,  136,  137,  138,  139,
          140,  141
    );

    protected static $yyaction = array(
           52,   53,  355,   54,   55,-32766,-32766,-32766,  593,  594,
          493,   56,-32766,  904,  353,  906,  905,-32766,-32766,-32766,
            0,-32766,-32766,  651,-32766,-32766,-32766,-32766,-32766,-32767,
        -32767,-32767,-32767,-32766,-32766,   45,-32766,-32766,-32766,-32766,
        -32766,  307,   57,   58,  127,-32766,-32766,-32766,   59,  447,
           60,  231,  232,   61,   62,   63,   64,   65,   66,   67,
           68,   41,  243,   69,  330,  356,   17,  237,  822,  823,
          357,  874,  880,   46,  573,  272,  824,  825,   43,  358,
          329,  359,  675,  360,  477,-32766,-32766,  100,  101,  102,
          361,  244,  288,   35,   36,  362,  333,  228,   37,  363,
          331,   70,   39,  234,  286,  287,-32766,-32766,-32766,  235,
          364,  365,  366,  367,  368,  114,-32766,-32766,-32766,  559,
          601,  369,  370,  371,  126,  829,  830,  831,  832,  826,
          827,  250,-32766,-32766,  344,-32766,  382,  833,  828,  332,
          581,  502,   50,   71,  285,  278,  270,  666,  254,  258,
           77,   78,   79,  115,  198,   27,  226,-32767,-32767,-32767,
        -32767,   95,   96,   97,   98,   99,   80,   81,-32766,   82,
           83,   84,   85,   86,   87,   88,   89,   90,   91,   92,
           93,   94,   95,   96,   97,   98,   99,  100,  101,  102,
          380,  244,   97,   98,   99,  525,  289,  120,  880,-32766,
          236,-32766,  256,-32766,-32766,  901,-32766,  291,-32766,  697,
          698,  699,  696,  695,  694,-32766,  292,  788,-32766,-32766,
        -32766,  334,  119,-32766,-32766,-32766,-32766,  293,-32766,-32766,
          381,  343,  341,  277,  380,  331,  325,-32766,  243,  525,
          342,  284,-32766,-32766,   48,  364,  365,-32766,-32766,  894,
        -32766,  544,-32766,  543,  530,  601,  369,  370,-32766,-32766,
           49,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  501,
        -32766,   16,  270,-32766,  381,  274,  641,  642,  380,  641,
          642,-32766,  540,  525,  539,  259,  453,-32766,-32766,-32766,
        -32766,-32766,-32766,  413,-32766,   33,-32766, -113,  525,-32766,
          880,  432,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,  125,-32766,   34,  423,-32766,  381,  334,
          894,  884,  380,  845,  116,-32766,  249,  525,  315,  534,
          572,-32766,  340,  798,  504,-32766,-32766,  200,-32766,  680,
        -32766,  124,  835,  835,  121,  199,  334,-32766,  201,  570,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,  815,-32766,  205,
          536,-32766,  381,  206,  382,  535,  380,  332,  207,-32766,
          208,  525,  122,  571,  270,-32766,  128,  846,   44,-32766,
        -32766,  244,-32766,  592,-32766,  202,  203,  122,  476,   22,
          243,-32766,  123,  623,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,   51,-32766,   47,  196,-32766,  381,  531,  506,  685,
          520,  822,  823,-32766,  395,-32766,  674,  516,  380,  824,
          825,  131, -163,  525,  894,  400,  240,-32766,  129,  404,
          899,-32766,-32766,  550,-32766,  488,-32766,  838,  392,  682,
          525,-32766,-32766,-32766,  405,  548,-32766,-32766,-32766,  500,
          526,-32766,-32766,  339,-32766,  393,  474,-32766,  381,-32766,
        -32766,-32766,  394,  791,  471,-32766,  438,  487,  829,  830,
          831,  832,  826,  827,  317,-32766,-32766,  276,-32766,-32766,
          833,  828,  380,  275,  406,  441,  134,  525,  479,-32766,
          132,-32766,  338,  568,-32766,-32766,-32766,  269,-32766, -140,
        -32766,  352,  602,  603,  455,  834, -286,-32766,  469,  255,
        -32766,-32766,-32766, -278,  380,-32766,-32766, -287,-32766,  525,
          399,-32766,  381,-32766,  498,  782,  266,-32766,-32766,-32766,
        -32766, -345,-32766,  257,  514,  118,  204,    0,    0,-32766,
            0,    0,-32766,-32766,-32766,    0,  380,-32766,-32766,  574,
        -32766,  525,  508,-32766,  381,-32766,  454,-32766,-32766,-32766,
        -32766,-32766,-32766,  309,-32766,  262,  261, -277,  340,  875,
          442,-32766,  337,    0,-32766,-32766,-32766,  458,  679,-32766,
        -32766,  681,-32766,  609,  671,-32766,  381,  611,  625,  564,
        -32766,  507,  668,-32766,   40,  103,  104,  105,  106,  107,
          108,  109,  110,  111,  112,  113,  458,  672,  285,  267,
          575,  584,  459,  698,  699,  696,  695,  694,  665,  512,
          678,  566,-32766,  669,  583,  458,  271,  268,  569,  567,
          565,  285,  505,  724,  726,  503,  347,   76,  267,  519,
          518,  459,  698,  699,  696,  695,  694,  665,  616,  598,
          334,-32766,-32766,-32766,  517,  271,  268,  267,  515,  326,
          459,  698,  699,  696,  695,  694,  665,-32766,-32766,  615,
        -32766,-32766,-32766,-32766,  271,  268,  881,  900,  600,  334,
          465,  813,  653,  885,  902,  903,  877,  865,  879,    0,
          334,  324,  273,  248,  247,  246,  245,  599,  334,  331,
          325,  233,  230, -345,  229,  284,  227,  197,  133,  364,
          365,  117,   75,   74,   73,  331,   72,   42,  530,  601,
          369,  370,  331,  325,   38,  364,  365,   32,  284,   31,
           30,   29,  364,  365,  559,  601,  369,  370,  331,  274,
           28,  530,  601,  369,  370,  532,  816,   26,  364,  365,
           25,   24,  876,  331,  767,  761,  448,  559,  601,  369,
          370,  619,  274,  364,  365,  345,  331,   23,  533,   21,
          331,   19,  559,  601,  369,  370,  364,  365,   18,   15,
          364,  365,  468,  331,  588,  559,  601,  369,  370,  559,
          601,  369,  370,  364,  365,  416,  351,  348,  331,  785,
          296,  489,  559,  601,  369,  370,   20,  763,  364,  365,
         -101,  331,  784,  794,  860,  331,  597,  559,  601,  369,
          370,  364,  365,  841,  862,  364,  365,  478,  793,  560,
          559,  601,  369,  370,  559,  601,  369,  370,  821,  331,
          863,  796,  795,  792,  327,  780,-32766,-32766,-32766,  364,
          365,  764,  497,  492,    0,  513,  511,  686,  559,  601,
          369,  370,-32766,-32766,  864,-32766,-32766,-32766,  585,  510,
            0,    0,  842,  797,  403,  859,  878,  898,  812,  475
    );

    protected static $yycheck = array(
            2,    3,    4,    5,    6,   10,   11,   12,   88,   89,
           72,   13,   74,   72,    9,   74,   75,   10,   11,   12,
            0,   26,   27,   74,   29,   30,   31,   32,   33,   34,
           35,   36,   37,   26,   27,   63,   29,   30,   31,   32,
           33,   74,   44,   45,  143,  107,   10,   11,   50,  148,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   64,   65,   66,   67,  146,    9,   70,   71,
           72,   74,   74,   63,   76,    9,   78,   79,   80,   81,
            9,   83,  144,   85,   82,   10,  148,   47,   48,   49,
           92,   51,    8,   95,   96,   97,   98,  148,  100,  101,
           98,  103,  135,  136,  106,  107,   10,   11,   12,   33,
          108,  109,  114,  115,  116,  143,   10,   11,   12,  117,
          118,  119,  120,  125,   63,  127,  128,  129,  130,  131,
          132,  133,   26,   27,    9,   29,  138,  139,  140,  141,
          142,  143,   63,  145,    7,  148,  148,  142,  150,  151,
           10,   11,   12,  143,    9,  145,   33,   38,   39,   40,
           41,   42,   43,   44,   45,   46,   26,   27,   74,   29,
           30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
           40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
           67,   51,   44,   45,   46,   72,    9,    9,   74,   76,
           33,  107,  123,   80,   81,  144,   83,  123,   85,  107,
          108,  109,  110,  111,  112,   92,    9,  146,   95,   96,
           97,  145,  143,  100,  101,   74,  103,    9,   74,  106,
          107,    9,    9,   63,   67,   98,   99,  114,   64,   72,
            9,  104,  148,   76,   63,  108,  109,   80,   81,   77,
           83,   72,   85,   74,  117,  118,  119,  120,  107,   92,
            9,  107,   95,   96,   97,  142,  143,  100,  101,   72,
          103,  146,  148,  106,  107,  138,  125,  126,   67,  125,
          126,  114,   72,   72,   74,   77,   77,   76,   10,   11,
           12,   80,   81,  123,   83,    9,   85,  146,   72,  148,
           74,   72,  148,   92,   26,   27,   95,   96,   97,  142,
          143,  100,  101,   91,  103,    9,   72,  106,  107,  145,
           77,   72,   67,  151,  143,  114,    9,   72,   73,  142,
          142,   76,  141,  107,  143,   80,   81,   14,   83,  142,
           85,   14,  134,  134,  143,   14,  145,   92,   14,  142,
           95,   96,   97,  142,  143,  100,  101,  146,  103,   14,
          142,  106,  107,   14,  138,  142,   67,  141,   14,  114,
           14,   72,  143,  142,  148,   76,   28,  134,   63,   80,
           81,   51,   83,   33,   85,   44,   45,  143,   68,   69,
           64,   92,  143,   94,   95,   96,   97,  142,  143,  100,
          101,   63,  103,   63,   63,  106,  107,  142,  143,  142,
          143,   70,   71,  114,   72,   74,  142,  143,   67,   78,
           79,   69,   87,   72,   77,   72,   87,   76,   91,   72,
           72,   80,   81,   72,   83,   72,   85,   72,   72,   72,
           72,  142,  143,   92,   72,   72,   95,   96,   97,   72,
           72,  100,  101,   72,  103,   72,   74,  106,  107,   10,
           11,   12,   74,   74,   74,  114,  125,   74,  127,  128,
          129,  130,  131,  132,  133,   26,   27,   77,   29,   30,
          139,  140,   67,   77,   87,   87,   90,   72,   93,  148,
           91,   76,   98,  142,  143,   80,   81,  105,   83,   98,
           85,   98,  118,  118,  102,  134,  137,   92,  104,  123,
           95,   96,   97,  137,   67,  100,  101,  137,  103,   72,
          141,  106,  107,   76,  137,  150,  121,   80,   81,  114,
           83,  123,   85,  123,  143,  124,  124,   -1,   -1,   92,
           -1,   -1,   95,   96,   97,   -1,   67,  100,  101,  142,
          103,   72,  143,  106,  107,   76,  137,  142,  143,   80,
           81,  114,   83,  137,   85,  137,  137,  137,  141,  144,
          146,   92,  141,   -1,   95,   96,   97,   72,  142,  100,
          101,  142,  103,  142,  142,  106,  107,  142,  142,  142,
          143,  143,  142,  114,   14,   15,   16,   17,   18,   19,
           20,   21,   22,   23,   24,   25,   72,  142,    7,  104,
          142,  142,  107,  108,  109,  110,  111,  112,  113,  142,
          142,  142,  143,  142,  142,   72,  121,  122,  142,  142,
          142,    7,  143,   53,   54,  143,  143,  143,  104,  143,
          143,  107,  108,  109,  110,  111,  112,  113,  144,  144,
          145,   10,   11,   12,  143,  121,  122,  104,  143,  145,
          107,  108,  109,  110,  111,  112,  113,   26,   27,  144,
           29,   30,   31,   32,  121,  122,  144,  144,  144,  145,
          144,  144,  144,  144,  144,  144,  144,  144,  144,   -1,
          145,  145,  145,  145,  145,  145,  145,  144,  145,   98,
           99,  145,  145,  123,  145,  104,  145,  145,  145,  108,
          109,  145,  145,  145,  145,   98,  145,  145,  117,  118,
          119,  120,   98,   99,  145,  108,  109,  145,  104,  145,
          145,  145,  108,  109,  117,  118,  119,  120,   98,  138,
          145,  117,  118,  119,  120,  144,  146,  145,  108,  109,
          145,  145,  149,   98,  146,  146,  146,  117,  118,  119,
          120,  144,  138,  108,  109,  146,   98,  146,  144,  146,
           98,  146,  117,  118,  119,  120,  108,  109,  146,  146,
          108,  109,  146,   98,  144,  117,  118,  119,  120,  117,
          118,  119,  120,  108,  109,  146,  146,  146,   98,  144,
          146,   84,  117,  118,  119,  120,  146,  146,  108,  109,
          146,   98,  144,  146,  149,   98,  144,  117,  118,  119,
          120,  108,  109,  146,  146,  108,  109,   86,  146,  144,
          117,  118,  119,  120,  117,  118,  119,  120,  146,   98,
          146,  146,  146,  146,  144,  146,   10,   11,   12,  108,
          109,  146,  146,  146,   -1,  147,  147,  144,  117,  118,
          119,  120,   26,   27,  149,   29,   30,   31,  147,  147,
           -1,   -1,  149,  149,  149,  149,  149,  149,  149,  149
    );

    protected static $yybase = array(
            0,  624,  601,  137,  685,  700,    2,  741,  717,  672,
          668,  655,  640,  617,  713,  722,  709,  708,  708,  708,
          708,  348,   -2,   -2,  167,  167,  167,  167,  167,  167,
          167,  167,  299,  167,  299,  447,  479,  351,  211,  255,
          123,  415,  415,  415,  415,  415,  415,  415,  415,  415,
          415,  415,  415,  415,  415,  415,  415,  415,  415,  415,
          415,  415,  415,  415,  415,  415,  415,  415,  415,  415,
          415,  415,  415,  415,  415,  415,  415,  415,  415,  415,
          415,  415,  415,  415,  415,  415,  415,  415,  415,  415,
          415,  415,  415,  415,  415,  415,  415,  415,  415,  415,
          415,  415,  415,  415,  415,  415,  415,  415,  415,  415,
          415,  415,  415,  415,  415,  415,  415,  415,  415,  415,
          415,  415,  415,  415,  415,  415,  415,  415,  415,  415,
          415,  415,  415,  415,  415,  -80,  396,  407,  411,  488,
          487,  486,  482,  609,  608,  600,  623,  633,  619,  533,
          532,  544,  543,  542,  610,  537,  538,  536,  539,  730,
          425,  352,  632,  625,  621,  664,  664,  140,  140,  140,
          140,  140,  140,  140,  140,  140,  140,   75,   36,   96,
           96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
           96,   96,   96,   96,  278,  278,  341,  341,  341,  341,
          341,  341,  341,  341,  341,  341,  341,  341,  341,  106,
          449,  836,  641,  534,  505,  553,    7,   -5,   -5,   -5,
           -5,  580,  119,  119,  119,  119,  174,   76,  201,  545,
          545,  545,  545,  545,  545,  545,  545,  545,  545,  401,
          377,  148,  148,  226,  226,  151,  151,  151,  151,  154,
          208,  243,  172,  -62,  406,  249,  249,  249,  400,  371,
          347,  244,  229,   40,   40,   40,   94,   94,   94,   94,
          494,   94,   94,   94,  191,  -33,  -33,  -59,  -99,  274,
          380,   10,   79,  265,  431,  210,  -51,  394,  179,  431,
          320,  210,  -51,  179,  525,  504,  267,  376,  181,   84,
          188,  372,  223,  397,  187,  207,  231,  170,  -28,   -3,
          222,  125,  398,  424,  661,   61,  218,  209,  -28,  481,
            5,   71,  478,  197,  350,  383,  357,  402,  382,  350,
          579,  350,  368,  350,  326,  251,  595,  368,  350,  405,
          368,  383,  388,  350,  357,  493,  350,  477,  404,  145,
          402,  404,  350,  382,   20,  571,  569,  721,  568,  561,
          514,  567,  366,  492,  384,  385,  559,  557,  556,  342,
          381,  572,  379,  353,  315,  429,  605,  602,  340,  386,
          566,  394,  427,  330,  408,  606,  428,  408,  725,  426,
          369,  410,  469,  331,  323,  489,  379,  649,  375,  378,
          448,  551,  649,  327,  334,  550,  373,  408,  549,  408,
          705,  409,  699,  358,  541,  379,  338,  330,  330,  330,
          697,  286,  724,  586,  696,  695,  727,  715,  694,  665,
          585,  603,  586,  692,  729,  337,  651,  317,  562,  376,
          419,  361,  468,   66,  728,  408,  408,  494,  348,  636,
          390,  412,  723,  371,  365,  547,  650,  408,  345,  430,
          349,  403,  465,  726,  682,  584,  678,  399,  391,  546,
          515,  354,  677,  450,  356,  540,  563,  446,  445,  582,
          393,  511,  442,  363,  667,  660,  389,  707,  548,  441,
          306,  706,  497,  335,  387,  392,  339,  496,  367,  654,
          439,  436,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,    0,    0,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,  140,  140,  140,  140,
          140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
          140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
          140,  140,  140,  140,  140,  140,  140,  140,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,  140,  140,
          140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
          140,  140,  140,  140,  140,  140,  140,  226,  226,  226,
          226,  226,  226,  226,  226,  226,  226,  226,  226,  226,
          140,  140,  140,  140,  226,  226,  226,  140,  140,  140,
          140,  140,    0,   40,   40,   40,   40,  226,  226,  226,
          226,  226,  226,  226,  226,  226,  226,  226,  226,  226,
          102,  102,   40,   40,    0,    0,  226,  226,  226,  226,
          226,  -33,  -33,  -33,  226,  -33,  124,  124,  124,  -33,
          -33,  -33,   -3,   -3,    0,    0,    0,  226,  226,  226,
          226,  124,  226,  226,  226,  368,    0,    0,    0,  124,
           66,  -28,    0,    0,  379,  368,    0,    0,  388,    0,
          368,    0,    0,    0,    0,  395,  395,    0,  606,    0,
            0,    0,  551,    0,  379,    0,    0,    0,    0,    0,
            0,    0,    0,  379,   58,   58,    0,    0,    0,    0,
           66,    0,    0,   66
    );

    protected static $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  123,  123,  123,  123,  123,  123,
          123,  123,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,  366,  366,32767,  361,  361,  361,  361,  361,  329,
          361,  361,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          237,  239,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,   74,32767,  371,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  184,  183,  244,  245,  247,
          248,  184,  126,  362,  370,  183,   75,  209,  211,  262,
          210,  187,  192,  193,  194,  195,  196,  197,  198,  199,
          200,  201,  202,  186,  236,  238,  326,  326,  329,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  207,
          208,  212,  214,  139,  139,  139,  213,  229,  230,  227,
          228,  185,  231,  232,  233,  234,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  143,
        32767,  221,  222,  288,  288,  118,  118,  118,  118,  118,
        32767,32767,32767,32767,  296,32767,32767,32767,32767,32767,
          298,32767,32767,  216,  217,  215,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  297,32767,32767,32767,32767,
          347,  334,  284,32767,32767,32767,32767,  277,32767,32767,
          108,32767,32767,32767,32767,32767,32767,  315,  352,32767,
        32767,32767,32767,   26,32767,32767,32767,  376,  347,32767,
          345,32767,   28,32767,32767,32767,32767,32767,  351,32767,
        32767,32767,32767,32767,   70,32767,32767,32767,32767,   70,
          293,   70,32767,   70,32767,  328,  299,32767,   70,   83,
        32767,32767,32767,   70,32767,32767,   70,   96,  266,  328,
           61,  266,   70,32767,32767,32767,32767,    4,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,  279,32767,  336,32767,  350,  349,  337,32767,
        32767,  277,32767,  225,  204,  278,32767,  206,32767,32767,
          282,  285,32767,32767,  135,32767,  280,  190,32767,32767,
        32767,32767,32767,  260,32767,32767,32767,  131,32767,   68,
          345,32767,32767,32767,  345,  281,  346,  218,  219,  220,
        32767,  122,32767,  323,32767,32767,32767,32767,32767,32767,
          340,32767,32767,32767,32767,  345,32767,  112,32767,  315,
        32767,32767,32767,   84,32767,  188,  127,32767,32767,32767,
        32767,  333,32767,32767,32767,32767,32767,   69,    4,  176,
          345,32767,32767,32767,32767,32767,32767,  345,32767,32767,
        32767,  116,32767,32767,  181,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,    4,32767,  162,32767,32767,32767,32767,
        32767,32767,   34,   34,    3,  138,    3,  138,  138,  105,
           34,   34,   96,   34,   34,   34,  155,   34,   34,   34,
           34
    );

    protected static $yygoto = array(
          172,  172,  172,  172,  172,  172,  172,  172,  165,  172,
          166,  139,  140,  141,  145,  149,  181,  138,  138,  171,
          173,  173,  173,  173,  173,  138,  173,  173,  167,  168,
          169,  170,  179,  744,  745,  383,  747,  770,  771,  772,
          773,  774,  775,  776,  778,  712,  142,  143,  144,  146,
          147,  148,  150,  177,  178,  180,  194,  195,  209,  210,
          211,  212,  216,  217,  218,  219,  220,  222,  223,  224,
          225,  241,  242,  263,  264,  265,  417,  418,  419,  182,
          183,  184,  185,  186,  187,  188,  189,  190,  191,  192,
          151,  152,  153,  154,  174,  155,  175,  156,  157,  158,
          193,  135,  159,  160,  161,  162,  136,  762,  163,  164,
          176,  439,  439,  439,  439,  439,  439,  439,  439,  439,
          439,  439,  439,  439,  529,  529,  529,  646,  385,  385,
          385,  553,  657,  614,  839,  840,  853,  673,  482,  638,
          703,  385,  385,  385,  385,  385,  385,  385,  385,  385,
          385,  385,  385,  385,    1,  397,    2,  412,  799,  799,
          640,  640,  640,  640,  640,  528,  528,  528,  494,  424,
          425,  428,  433,  464,  466,  484,  386,  386,  386,  663,
          323,  606,  606,  606,  606,  620,  473,  607,  480,  386,
          386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
          386,  386,  460,  460,  460,  300,  389,  389,  426,  427,
          429,  431,  472,  434,  463,  445,  310,  407,  409,  409,
          384,  387,  410,  414,  435,  446,  457,  467,  440,  440,
          440,  440,  440,  440,  440,  440,  440,  440,  440,  440,
          440,  837,  837,  837,  837,  837,  837,  837,  837,  837,
          837,  837,  837,  837,  871,  871,  283,  577,  578,  579,
          870,  870,  889,  527,  527,  527,  303,  449,  456,  499,
          851,  303,  886,  886,  886,  390,  390,  624,  610,  608,
          608,  608,  608,  509,  630,  628,    5,  869,  260,  279,
          319,  322,  252,    6,    7,  314,    8,    9,   10,  756,
           11,   12,   13,   14,  893,  893,  391,  391,  636,  301,
          710,  401,  896,  893,  396,  545,  408,  811,  810,  312,
          537,  238,  415,  649,  450,  308,  308,  308,  896,  896,
          483,  214,  215,  541,  790,  551,  613,  654,  587,  848,
          308,  295,  481,    0,    0,    0,  701,    0,  318,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,  402
    );

    protected static $yygcheck = array(
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   37,   37,   37,   37,   37,   37,   37,   37,   37,
           37,   37,   37,   37,    7,    7,    7,   55,   37,   37,
           37,   16,   16,   16,   16,   16,   16,   16,   16,   16,
           16,   37,   37,   37,   37,   37,   37,   37,   37,   37,
           37,   37,   37,   37,    2,   76,    2,   75,   37,   37,
           37,   37,   37,   37,   37,    6,    6,    6,   37,   53,
           53,   53,   53,   53,   53,   53,   86,   86,   86,   61,
           61,   37,   37,   37,   37,   47,   37,   37,   37,   86,
           86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
           86,   86,   28,   28,   28,   26,   86,   86,   89,   89,
           89,   89,   98,   89,   89,   28,   28,   28,   28,   28,
           28,   28,   28,   28,   28,   28,   28,   28,   90,   90,
           90,   90,   90,   90,   90,   90,   90,   90,   90,   90,
           90,   97,   97,   97,   97,   97,   97,   97,   97,   97,
           97,   97,   97,   97,   87,   87,    4,   29,   29,   29,
           88,   88,  107,    5,    5,    5,    4,   38,   38,   38,
          101,    4,   88,   88,   88,   90,   90,    5,    5,    5,
            5,    5,    5,    5,    5,    5,   17,   88,   96,   42,
           42,   42,   96,   17,   17,   27,   17,   17,   17,   77,
           17,   17,   17,   17,  108,  108,   93,   93,   51,   30,
           76,   30,  108,  108,    4,   14,   30,   95,   95,    4,
           12,   30,    4,   56,   30,   94,   94,   94,  108,  108,
           30,   40,   40,   13,   84,   15,   43,   57,   36,  100,
           94,   44,   81,   -1,   -1,   -1,   74,   -1,   94,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   76
    );

    protected static $yygbase = array(
            0,    0, -350,    0,  -18,  262,  164,  123,    0,    0,
            0,    0,   29,   40,   26,   -6,  -68, -217,    0,  -24,
            0,    0,    0,    0,    0,    0,  162,   65,  -11,  239,
          -22,    0,    0,    0,    0,    0,  -12,  -85,   21,    0,
         -176,    0,   22,   -8, -171,    0,    0,  151,    0,    0,
            0,   59,    0,  144,    0,   94,   31,   -5,    0,    0,
            0,  -60,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,   -7,  115,   84,   55,    0,    0,
            0,   -9,    0,    0,    5,    0,  -37,   11,   17,  163,
           32,    0,    0,   63,   70,   61,   34,   45,   15,    0,
          -10,   72,    0,    0,    0,    0,    0,  213,   53,    0
    );

    protected static $yygdefault = array(
        -32768,  354,    3,  523,  372,  556,  557,  558,  304,  302,
          299,  316,  538,  542,  546,  552,  451,    4,  554,  137,
          290,  561,  562,  563,  305,  306,  490,  313,  221,  576,
          486,  130,  485,  311,  580,  350,  586,  297,  436,  373,
          213,  411,  443,  612,  294,  618,  491,  621,  627,-32768,
          437,  635,  346,  420,  421,  645,  650,  655,  658,  461,
          239,  662,  328,  320,  667,  670,  462,  253,  677,  495,
          496,-32768,-32768,-32768,  700,  388,  711,  336,  777,  779,
          398,  470,  786,  321,  789,  374,  375,  376,  377,  422,
          807,  804,  282,  856,  280,  430,  251,  843,  452,  349,
          888,  852,  281,  378,  379,  298,  335,  890,  895,  444
    );

    protected static $yylhs = array(
            0,    1,    2,    2,    4,    4,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,   10,   10,   12,   12,
           11,   11,   13,   13,    8,    8,   14,   14,   14,   14,
            9,    9,   15,   17,   17,   18,   18,   18,   18,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,   35,   35,   36,   27,   27,
           30,   30,   31,   31,   32,   32,    6,    7,    7,    7,
           39,   39,   39,   41,   41,   42,   42,   29,   29,   34,
           34,   33,   33,   43,   23,   23,   44,   44,   45,   46,
           46,   47,   47,   22,   22,   20,   20,   48,   21,   21,
           49,   49,   38,   38,   50,   50,   51,   51,   52,   52,
           52,   52,   53,   53,   54,   54,   55,   55,   24,   24,
           56,   56,   56,   25,   25,   57,   57,   40,   40,   59,
           59,   60,   60,   62,   62,   58,   58,   58,   58,   58,
           58,   58,   66,   65,   65,   67,   67,   68,   68,   68,
           68,   69,   70,   70,   64,   64,   71,   71,   71,   71,
           73,   73,   72,   61,   61,   61,   61,   61,   61,   63,
           63,   74,   74,   26,   26,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
           19,   19,   19,   19,   19,   76,   81,   81,   83,   83,
           84,   85,   85,   85,   85,   85,   85,   90,   90,   37,
           37,   37,   77,   77,   91,   91,   86,   86,   92,   92,
           92,   92,   92,   78,   78,   78,   80,   80,   80,   82,
           82,   97,   97,   97,   97,   97,   97,   97,   97,   97,
           97,   97,   97,   97,   97,   97,   16,   16,   16,   16,
           16,   16,   79,   79,   79,   79,   98,   98,  100,  100,
           99,   99,  101,  101,   28,   28,   28,   28,  103,  103,
          102,  102,  102,  102,  102,  104,  104,   88,   88,   93,
           93,   87,   87,  105,  105,  105,  105,   94,   94,   94,
           94,   89,   89,   95,   95,   95,   75,   75,  106,  106,
          107,  107,   96,   96,   96,   96,  108,  108,  108,  108,
          108,  108,  108,  109,  109,  109
    );

    protected static $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            3,    5,    4,    3,    3,    5,    3,    1,    1,    1,
            3,    1,    1,    1,    3,    1,    1,    3,    2,    4,
            3,    1,    3,    2,    0,    1,    1,    1,    1,    3,
            7,    5,    5,    2,    3,    2,    3,    2,    3,    3,
            3,    3,    1,    2,    5,    7,    8,   10,   10,    5,
            1,    5,    3,    3,    2,    1,    2,    8,    1,    3,
            0,    1,    1,    1,    0,    2,    9,    5,    6,    5,
            1,    2,    2,    0,    2,    1,    3,    1,    4,    1,
            4,    1,    3,    3,    3,    4,    0,    2,    7,    3,
            1,    1,    1,    1,    4,    0,    2,    5,    0,    2,
            0,    3,    1,    0,    1,    3,    3,    5,    0,    1,
            1,    1,    1,    0,    1,    3,    1,    2,    3,    1,
            1,    2,    4,    3,    1,    1,    3,    2,    0,    0,
            1,    1,    2,    1,    1,    3,    8,    3,    3,    3,
            4,    2,    3,    1,    3,    0,    2,    4,    5,    4,
            4,    3,    1,    1,    1,    3,    2,    3,    4,    2,
            1,    3,    4,    1,    1,    1,    1,    1,    1,    1,
            3,    1,    3,    3,    1,    1,    5,    3,    4,    4,
            1,    2,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    2,    2,    2,    2,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    2,    2,    2,    2,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    2,    3,    2,
            3,    8,    4,    4,    2,    2,    4,    2,    2,    2,
            2,    2,    2,    2,    2,    2,    2,    2,    1,    4,
            3,    3,    2,    9,   10,    3,    0,    4,    1,    3,
            2,    4,    6,    8,    4,    4,    4,    1,    1,    1,
            2,    3,    1,    1,    1,    1,    1,    1,    0,    3,
            3,    4,    4,    0,    2,    3,    0,    1,    1,    0,
            3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    3,    2,    1,    1,    3,    2,    2,
            4,    3,    1,    3,    3,    3,    0,    2,    0,    1,
            3,    1,    3,    1,    1,    1,    1,    1,    6,    4,
            3,    6,    4,    4,    4,    1,    3,    1,    2,    1,
            1,    4,    1,    3,    6,    4,    4,    4,    4,    1,
            4,    0,    1,    1,    3,    1,    0,    2,    3,    1,
            3,    1,    2,    2,    1,    2,    1,    4,    3,    3,
            3,    6,    3,    1,    1,    1
    );

    protected $yyval;
    protected $yyastk;
    protected $yysp;
    protected $lexer;

    /**
     * Parses PHP code into a node tree.
     *
     * @param PHPParser_Lexer $lexer A lexer
     *
     * @return array Array of statements
     */
    public function parse(PHPParser_Lexer $lexer) {
        $this->lexer  = $lexer;

        $this->yysp   = 0;                   // Stack pos
        $yysstk       = array($yystate = 0); // State stack
        $this->yyastk = array();             // AST   stack (?)
        $yylstk       = array($yyline  = 1); // Line  stack
        $yydstk       = array($yyDC = null); // Doc comment stack

        $yychar       = -1;

        for (;;) {
            if (self::$yybase[$yystate] == 0) {
                $yyn = self::$yydefault[$yystate];
            } else {
                if ($yychar < 0) {
                    if (($yychar = $lexer->lex($yylval, $yyline, $yyDC)) < 0)
                        $yychar = 0;
                    $yychar = $yychar < self::YYMAXLEX ?
                        self::$yytranslate[$yychar] : self::YYBADCH;
                    $yylstk[$this->yysp] = $yyline;
                    $yydstk[$this->yysp] = $yyDC;
                }
                if ((($yyn = self::$yybase[$yystate] + $yychar) >= 0
                     && $yyn < self::YYLAST && self::$yycheck[$yyn] == $yychar
                     || ($yystate < self::YY2TBLSTATE
                        && ($yyn = self::$yybase[$yystate + self::YYNLSTATES]
                            + $yychar) >= 0
                        && $yyn < self::YYLAST
                        && self::$yycheck[$yyn] == $yychar))
                    && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT) {
                    /*
                     * >= YYNLSTATE: shift and reduce
                     * > 0: shift
                     * = 0: accept
                     * < 0: reduce
                     * = -YYUNEXPECTED: error
                     */
                    if ($yyn > 0) {
                        /* shift */
                        ++$this->yysp;

                        $yysstk[$this->yysp]       = $yystate = $yyn;
                        $this->yyastk[$this->yysp] = $yylval;
                        $yylstk[$this->yysp]       = $yyline;
                        $yydstk[$this->yysp]       = $yyDC;
                        $yychar = -1;

                        if ($yyn < self::YYNLSTATES)
                            continue;

                        /* $yyn >= YYNLSTATES means shift-and-reduce */
                        $yyn -= self::YYNLSTATES;
                    } else {
                        $yyn = -$yyn;
                    }
                } else {
                    $yyn = self::$yydefault[$yystate];
                }
            }

            for (;;) {
                /* reduce/error */
                if ($yyn == 0) {
                    /* accept */
                    return $this->yyval;
                } elseif ($yyn != self::YYUNEXPECTED) {
                    /* reduce */
                    try {
                        $this->{'yyn' . $yyn}(
                            $yylstk[$this->yysp - self::$yylen[$yyn]],
                            $yydstk[$this->yysp - self::$yylen[$yyn]]
                        );
                    } catch (PHPParser_Error $e) {
                        if (-1 === $e->getRawLine()) {
                            $e->setRawLine($yyline);
                        }

                        throw $e;
                    }

                    /* Goto - shift nonterminal */
                    $this->yysp -= self::$yylen[$yyn];
                    $yyn = self::$yylhs[$yyn];
                    if (($yyp = self::$yygbase[$yyn] + $yysstk[$this->yysp]) >= 0
                         && $yyp < self::YYGLAST
                         && self::$yygcheck[$yyp] == $yyn) {
                        $yystate = self::$yygoto[$yyp];
                    } else {
                        $yystate = self::$yygdefault[$yyn];
                    }

                    ++$this->yysp;

                    $yysstk[$this->yysp] = $yystate;
                    $this->yyastk[$this->yysp] = $this->yyval;
                    $yylstk[$this->yysp]       = $yyline;
                    $yydstk[$this->yysp]       = $yyDC;
                } else {
                    /* error */
                    throw new PHPParser_Error(
                        'Unexpected token ' . self::$yyterminals[$yychar],
                        $yyline
                    );
                }

                if ($yystate < self::YYNLSTATES)
                    break;
                /* >= YYNLSTATES means shift-and-reduce */
                $yyn = $yystate - self::YYNLSTATES;
            }
        }
    }

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn1($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Namespace::postprocess($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn2($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn3($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn4($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn5($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn6($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn7($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn8($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn9($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_HaltCompiler($this->lexer->handleHaltCompiler(), $line, $docComment); 
    }

    protected function yyn10($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn11($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(5-2)], $line, $docComment), $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn12($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn13($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Use($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn14($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Const($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn15($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Imports($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn16($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn17($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn18($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ImportPath($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn19($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ImportPath($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn20($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn21($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn22($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Import($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn23($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Import($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn24($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn25($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn26($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn27($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-1)], $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn28($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(2-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn29($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(4-2)], $line, $docComment), $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn30($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn31($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn32($line, $docComment) {
         $this->yyval = new PHPParser_Node_Const($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn33($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn34($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn35($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn36($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn37($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn38($line, $docComment) {
         throw new PHPParser_Error('__halt_compiler() can only be used from the outermost scope'); 
    }

    protected function yyn39($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn40($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(7-3)], array('stmts' => is_array($this->yyastk[$this->yysp-(7-5)]) ? $this->yyastk[$this->yysp-(7-5)] : array($this->yyastk[$this->yysp-(7-5)]), 'elseifs' => $this->yyastk[$this->yysp-(7-6)], 'else' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn41($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_While($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn42($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Switch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn43($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break(null, $line, $docComment); 
    }

    protected function yyn44($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn45($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue(null, $line, $docComment); 
    }

    protected function yyn46($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn47($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return(null, $line, $docComment); 
    }

    protected function yyn48($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn49($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Global($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn50($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Static($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn51($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Echo($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn52($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_InlineHTML($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn53($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn54($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Unset($this->yyastk[$this->yysp-(5-3)], $line, $docComment); 
    }

    protected function yyn55($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(7-5)], $this->yyastk[$this->yysp-(7-3)], array('keyVar' => null, 'byRef' => false, 'stmts' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn56($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-4)], array('keyVar' => null, 'byRef' => true, 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn57($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(10-8)], $this->yyastk[$this->yysp-(10-6)], array('keyVar' => $this->yyastk[$this->yysp-(10-3)], 'byRef' => $this->yyastk[$this->yysp-(10-5)], 'stmts' => $this->yyastk[$this->yysp-(10-10)]), $line, $docComment); 
    }

    protected function yyn58($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ForNumeric($this->yyastk[$this->yysp-(10-3)], $this->yyastk[$this->yysp-(10-5)], $this->yyastk[$this->yysp-(10-7)], $this->yyastk[$this->yysp-(10-10)], $this->yyastk[$this->yysp-(10-6)], $this->yyastk[$this->yysp-(10-8)], $line, $docComment); 
    }

    protected function yyn59($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Declare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn60($line, $docComment) {
         $this->yyval = array(); /* means: n statement */ 
    }

    protected function yyn61($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TryCatch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn62($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Throw($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn63($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Goto($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn64($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Label($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn65($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn66($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn67($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Catch($this->yyastk[$this->yysp-(8-3)], substr($this->yyastk[$this->yysp-(8-4)], 1), $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn68($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn69($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn70($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn71($line, $docComment) {
         $this->yyval = true; 
    }

    protected function yyn72($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn73($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn74($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn75($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn76($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Function($this->yyastk[$this->yysp-(9-3)], array('byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-5)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn77($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Class($this->yyastk[$this->yysp-(5-2)], array('type' => $this->yyastk[$this->yysp-(5-1)], 'stmts' => $this->yyastk[$this->yysp-(5-4)]), $line, $docComment); 
    }

    protected function yyn78($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Interface($this->yyastk[$this->yysp-(6-2)], array('extends' => $this->yyastk[$this->yysp-(6-3)], 'stmts' => $this->yyastk[$this->yysp-(6-5)]), $line, $docComment); 
    }

    protected function yyn79($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Trait($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn80($line, $docComment) {
         $this->yyval = 0; 
    }

    protected function yyn81($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn82($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn83($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn84($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn85($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn86($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn87($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn88($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn89($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn90($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn91($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn92($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn93($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn94($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn95($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn96($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn97($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn98($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Case($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-6)], $line, $docComment); 
    }

    protected function yyn99($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn100($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn101($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn102($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('default', $line, $docComment); 
    }

    protected function yyn103($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn104($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn105($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn106($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn107($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(5-3)], is_array($this->yyastk[$this->yysp-(5-5)]) ? $this->yyastk[$this->yysp-(5-5)] : array($this->yyastk[$this->yysp-(5-5)]), $line, $docComment); 
    }

    protected function yyn108($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn109($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(is_array($this->yyastk[$this->yysp-(2-2)]) ? $this->yyastk[$this->yysp-(2-2)] : array($this->yyastk[$this->yysp-(2-2)]), $line, $docComment); 
    }

    protected function yyn110($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn111($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn112($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn113($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn114($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn115($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn116($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn117($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $line, $docComment); 
    }

    protected function yyn118($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn119($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn120($line, $docComment) {
         $this->yyval = 'array'; 
    }

    protected function yyn121($line, $docComment) {
         $this->yyval = 'callable'; 
    }

    protected function yyn122($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn123($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn124($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn125($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn126($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(1-1)], false, $line, $docComment); 
    }

    protected function yyn127($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(2-2)], true, $line, $docComment); 
    }

    protected function yyn128($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn129($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn130($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn131($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn132($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn133($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn134($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn135($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn136($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn137($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn138($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn139($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn140($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn141($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn142($line, $docComment) {
         PHPParser_Node_Stmt_Class::verifyModifier($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); $this->yyval = $this->yyastk[$this->yysp-(2-1)] | $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn143($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn144($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn145($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn146($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassMethod($this->yyastk[$this->yysp-(8-4)], array('type' => $this->yyastk[$this->yysp-(8-1)], 'byRef' => $this->yyastk[$this->yysp-(8-3)], 'params' => $this->yyastk[$this->yysp-(8-6)], 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn147($line, $docComment) {
         $this->yyval = new Snowscript_Node_Stmt_Extends($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn148($line, $docComment) {
         $this->yyval = new Snowscript_Node_Stmt_Implements($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn149($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUse($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn150($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignClassProperty($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn151($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn152($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassConst($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn153($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn154($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn155($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn156($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn157($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Precedence($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn158($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(5-1)][0], $this->yyastk[$this->yysp-(5-1)][1], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn159($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], null, $line, $docComment); 
    }

    protected function yyn160($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn161($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
    }

    protected function yyn162($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn163($line, $docComment) {
         $this->yyval = array(null, $this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn164($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn165($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn166($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn167($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]); 
    }

    protected function yyn168($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)]); 
    }

    protected function yyn169($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn170($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn171($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn172($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(4-2)], $line, $docComment); 
    }

    protected function yyn173($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn174($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED; 
    }

    protected function yyn175($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE; 
    }

    protected function yyn176($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_STATIC; 
    }

    protected function yyn177($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn178($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn179($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn180($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn181($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment); 
    }

    protected function yyn182($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn183($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn184($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn185($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn186($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignList($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn187($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn188($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignRef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn189($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn190($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn191($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Clone($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn192($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignPlus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn193($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMinus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn194($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn195($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignDiv($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn196($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignConcat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn197($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn198($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn199($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn200($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn201($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn202($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn203($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostInc($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn204($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreInc($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn205($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostDec($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn206($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreDec($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn207($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn208($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn209($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn210($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn211($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn212($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn213($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn214($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn215($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Concat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn216($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Plus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn217($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Minus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn218($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn219($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Div($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn220($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn221($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn222($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn223($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn224($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn225($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn226($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn227($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Identical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn228($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotIdentical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn229($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Equal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn230($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn231($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Smaller($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn232($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_SmallerOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn233($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Greater($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn234($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_GreaterOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn235($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Instanceof($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn236($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceIsset($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn237($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceIsset($this->yyastk[$this->yysp-(2-1)], false, $line, $docComment); 
    }

    protected function yyn238($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceNotEmpty($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn239($line, $docComment) {
         $this->yyval = new Snowscript_Node_Expr_ExistenceNotEmpty($this->yyastk[$this->yysp-(2-1)], false, $line, $docComment); 
    }

    protected function yyn240($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn241($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-6)], $this->yyastk[$this->yysp-(8-8)], $line, $docComment); 
    }

    protected function yyn242($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Isset($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn243($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Empty($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn244($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE, $line, $docComment); 
    }

    protected function yyn245($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE_ONCE, $line, $docComment); 
    }

    protected function yyn246($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Eval($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn247($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE, $line, $docComment); 
    }

    protected function yyn248($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE_ONCE, $line, $docComment); 
    }

    protected function yyn249($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Int($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn250($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Double($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn251($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_String($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn252($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Array($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn253($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Object($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn254($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Bool($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn255($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Unset($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn256($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Exit($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn257($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ErrorSuppress($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn258($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn259($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn260($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn261($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShellExec($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn262($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Print($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn263($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => false, 'byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-4)], 'uses' => $this->yyastk[$this->yysp-(9-6)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn264($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => true, 'byRef' => $this->yyastk[$this->yysp-(10-3)], 'params' => $this->yyastk[$this->yysp-(10-5)], 'uses' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-9)]), $line, $docComment); 
    }

    protected function yyn265($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn266($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn267($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn268($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn269($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn270($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(2-2)], 1), $this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn271($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn272($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn273($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn274($line, $docComment) {
        
            if ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_StaticPropertyFetch) {
                $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(4-1)]->class, new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-1)]->name, $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
            } elseif ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                $tmp = $this->yyastk[$this->yysp-(4-1)];
                while ($tmp->var instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new PHPParser_Node_Expr_StaticCall($tmp->var->class, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
                $tmp->var = new PHPParser_Node_Expr_Variable($tmp->var->name, $line, $docComment);
            } else {
                throw new Exception;
            }
          
    }

    protected function yyn275($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn276($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn277($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('static', $line, $docComment); 
    }

    protected function yyn278($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn279($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn280($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_FullyQualified($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn281($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_Relative($this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn282($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn283($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn284($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn285($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn286($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn287($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn288() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn289($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn290($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn291($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn292($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn293($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn294($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn295($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn296($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn297($line, $docComment) {
         $this->yyval = array(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(1-1)], '`')); 
    }

    protected function yyn298($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(1-1)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn299($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn300($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn301($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber(PHPParser_Node_Scalar_LNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn302($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DNumber(PHPParser_Node_Scalar_DNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment); 
    }

    protected function yyn303($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], "'", $line, $docComment); 
    }

    protected function yyn304($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], '"', $line, $docComment); 
    }

    protected function yyn305($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LineConst($line, $docComment); 
    }

    protected function yyn306($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FileConst($line, $docComment); 
    }

    protected function yyn307($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DirConst($line, $docComment); 
    }

    protected function yyn308($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_ClassConst($line, $docComment); 
    }

    protected function yyn309($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_TraitConst($line, $docComment); 
    }

    protected function yyn310($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_MethodConst($line, $docComment); 
    }

    protected function yyn311($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FuncConst($line, $docComment); 
    }

    protected function yyn312($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_NSConst($line, $docComment); 
    }

    protected function yyn313($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String(PHPParser_Node_Scalar_String::parseDocString($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]), $line, $docComment); 
    }

    protected function yyn314($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String('', $line, $docComment); 
    }

    protected function yyn315($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn316($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn317($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn318($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn319($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn320($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn321($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn322($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn323($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn324($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '"'); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn325($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, null); } } $s = preg_replace('~(\r\n|\n|\r)$~', '', $s); if ('' === $s) array_pop($this->yyastk[$this->yysp-(3-2)]);; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn326($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn327($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn328() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn329() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn330($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn331($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn332($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn333($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn334($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn335($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn336($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn337($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn338($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn339($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn340($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn341($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_MethodCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn342($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn343($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn344($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn345($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn346($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn347($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn348($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn349($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn350($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn351($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn352($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn353($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment); 
    }

    protected function yyn354($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn355($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn356($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn357($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn358($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn359($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn360($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn361($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn362($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn363($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn364($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn365($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn366($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn367($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn368($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn369($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn370($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn371($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn372($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn373($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn374($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn375($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn376($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn377($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(4-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn378($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(3-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn379($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn380($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn381($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(6-2)], $line, $docComment), $this->yyastk[$this->yysp-(6-4)], $line, $docComment); 
    }

    protected function yyn382($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn383($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn384($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn385($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }
}
